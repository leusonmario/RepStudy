import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest18 {

    public static boolean debug = false;

    @Test
    public void test9001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9001");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        io.swagger.annotations.Api api21 = null;
        boolean boolean22 = springMvcApiReader2.canReadApi(true, api21);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader2.LOG = logAdapter23;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader2.LOG = logAdapter25;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type type31 = null;
        java.lang.annotation.Annotation[] annotationArray32 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList33 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList33, annotationArray32);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList35 = springMvcApiReader30.getParameters(type31, (java.util.List<java.lang.annotation.Annotation>) annotationList33);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray36 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap37 = springMvcApiReader30.parseResponseHeaders(responseHeaderArray36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        springMvcApiReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader43.typesToSkip;
        java.lang.String[] strArray48 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray51 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap52 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray53 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList54 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList54, securityRequirementArray53);
        io.swagger.models.Operation operation56 = null;
        springMvcApiReader43.updateOperation(strArray48, strArray51, strMap52, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList54, operation56);
        java.lang.String[] strArray63 = new java.lang.String[] { "/hi!", "", "", "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap64 = null;
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader67.typesToSkip;
        java.lang.String[] strArray72 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray75 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader67.updateOperation(strArray72, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader30.updateOperation(strArray51, strArray63, strMap64, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation82);
        io.swagger.models.Operation operation84 = null;
        io.swagger.annotations.ApiOperation apiOperation85 = null;
        springMvcApiReader30.updateTagsForOperation(operation84, apiOperation85);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter87 = null;
        springMvcApiReader30.LOG = logAdapter87;
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader30.typesToSkip;
        io.swagger.models.Swagger swagger90 = springMvcApiReader30.swagger;
        springMvcApiReader30.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet92 = springMvcApiReader30.typesToSkip;
        io.swagger.annotations.Api api94 = null;
        boolean boolean95 = springMvcApiReader30.canReadApi(false, api94);
        java.util.Set<java.lang.reflect.Type> typeSet96 = springMvcApiReader30.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet96);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(parameterList35);
        org.junit.Assert.assertNotNull(responseHeaderArray36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(securityRequirementArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNull(swagger90);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(typeSet96);
    }

    @Test
    public void test9002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9002");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.models.Operation operation15 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "hi!", operation15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test9003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9003");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader2.canReadApi(false, api59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger62 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation63 = null;
        io.swagger.annotations.ApiOperation apiOperation64 = null;
        springMvcApiReader2.updateTagsForOperation(operation63, apiOperation64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        springMvcApiReader2.LOG = logAdapter66;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger69 = null;
        springMvcApiReader2.swagger = swagger69;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(typeSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(typeSet61);
        org.junit.Assert.assertNull(swagger62);
    }

    @Test
    public void test9004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9004");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        java.util.Set<java.lang.reflect.Type> typeSet16 = null;
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader20.typesToSkip;
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader20.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type type27 = null;
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList31 = springMvcApiReader26.getParameters(type27, (java.util.List<java.lang.annotation.Annotation>) annotationList29);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList53 = springMvcApiReader48.getParameters(type49, (java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray54 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] { wildcardClass57 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader48.typesToSkip = typeSet59;
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader40.parseOperationPath("hi!", strMap64);
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        boolean boolean69 = springMvcApiReader40.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        boolean boolean70 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        boolean boolean71 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        io.swagger.models.Swagger swagger72 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation74 = null;
        io.swagger.annotations.ApiOperation apiOperation75 = null;
        springMvcApiReader2.updateTagsForOperation(operation74, apiOperation75);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        java.lang.String str79 = springMvcApiReader2.parseOperationPath("hi!", strMap78);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(parameterList31);
        org.junit.Assert.assertNotNull(responseHeaderArray32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(parameterList53);
        org.junit.Assert.assertNotNull(responseHeaderArray54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "/hi!" + "'", str65, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(swagger72);
        org.junit.Assert.assertNull(logAdapter73);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "/hi!" + "'", str79, "/hi!");
    }

    @Test
    public void test9005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9005");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        boolean boolean31 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("hi!", strMap34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader38.typesToSkip;
        springMvcApiReader38.updateExtensionChain();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList48 = springMvcApiReader43.getParameters(type44, (java.util.List<java.lang.annotation.Annotation>) annotationList46);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray49 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        springMvcApiReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader2.parseOperationPath("/hi!", strMap57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation60 = null;
        io.swagger.annotations.ApiOperation apiOperation61 = null;
        springMvcApiReader2.updateTagsForOperation(operation60, apiOperation61);
        io.swagger.models.Swagger swagger63 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader2.parseOperationPath("hi!", strMap65);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(parameterList48);
        org.junit.Assert.assertNotNull(responseHeaderArray49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "/hi!" + "'", str58, "/hi!");
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNull(swagger63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!" + "'", str66, "/hi!");
    }

    @Test
    public void test9006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9006");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type type36 = null;
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList40 = springMvcApiReader35.getParameters(type36, (java.util.List<java.lang.annotation.Annotation>) annotationList38);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader35.parseResponseHeaders(responseHeaderArray41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass44 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader35.typesToSkip = typeSet46;
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader27.parseOperationPath("hi!", strMap51);
        io.swagger.models.Operation operation53 = null;
        io.swagger.annotations.ApiOperation apiOperation54 = null;
        springMvcApiReader27.updateTagsForOperation(operation53, apiOperation54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type type59 = null;
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader58.getParameters(type59, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray64 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap65 = springMvcApiReader58.parseResponseHeaders(responseHeaderArray64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        springMvcApiReader58.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(parameterList40);
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertNotNull(responseHeaderArray64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test9007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9007");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type type16 = null;
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList20 = springMvcApiReader15.getParameters(type16, (java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = springMvcApiReader23.getParameters(type24, (java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] { wildcardClass32 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader23.typesToSkip = typeSet34;
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader15.parseOperationPath("hi!", strMap39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray41);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray41);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger45 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        java.lang.Class<?> wildcardClass50 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(parameterList20);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(parameterList28);
        org.junit.Assert.assertNotNull(responseHeaderArray29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(typeSet44);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test9008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9008");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        boolean boolean31 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api35 = null;
        boolean boolean36 = springMvcApiReader2.canReadApi(true, api35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation38 = null;
        io.swagger.annotations.ApiOperation apiOperation39 = null;
        springMvcApiReader2.updateTagsForOperation(operation38, apiOperation39);
        io.swagger.models.Swagger swagger41 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        java.lang.String str44 = springMvcApiReader2.parseOperationPath("", strMap43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        io.swagger.models.Swagger swagger48 = null;
        springMvcApiReader47.swagger = swagger48;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        springMvcApiReader47.LOG = logAdapter50;
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        io.swagger.models.Swagger swagger55 = springMvcApiReader54.swagger;
        io.swagger.models.Swagger swagger56 = springMvcApiReader54.swagger;
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader59.typesToSkip;
        java.lang.String[] strArray64 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray67 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap68 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray69 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList70 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList70, securityRequirementArray69);
        io.swagger.models.Operation operation72 = null;
        springMvcApiReader59.updateOperation(strArray64, strArray67, strMap68, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList70, operation72);
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader59.typesToSkip;
        springMvcApiReader54.setTypesToSkip(typeSet74);
        springMvcApiReader47.setTypesToSkip(typeSet74);
        springMvcApiReader2.typesToSkip = typeSet74;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource78 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger79 = springMvcApiReader2.read(springResource78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(swagger41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(swagger55);
        org.junit.Assert.assertNull(swagger56);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(securityRequirementArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeSet74);
    }

    @Test
    public void test9009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9009");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        java.util.Set<java.lang.reflect.Type> typeSet16 = null;
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader20.typesToSkip;
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader20.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type type27 = null;
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList31 = springMvcApiReader26.getParameters(type27, (java.util.List<java.lang.annotation.Annotation>) annotationList29);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList53 = springMvcApiReader48.getParameters(type49, (java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray54 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] { wildcardClass57 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader48.typesToSkip = typeSet59;
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader40.parseOperationPath("hi!", strMap64);
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        boolean boolean69 = springMvcApiReader40.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        boolean boolean70 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        boolean boolean71 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        io.swagger.models.Swagger swagger72 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader75 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger73, logAdapter74);
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader75.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader75.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet77);
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation80 = null;
        io.swagger.annotations.ApiOperation apiOperation81 = null;
        springMvcApiReader2.updateTagsForOperation(operation80, apiOperation81);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger84 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader86 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger84, logAdapter85);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray87 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap88 = springMvcApiReader86.parseResponseHeaders(responseHeaderArray87);
        io.swagger.models.Swagger swagger89 = springMvcApiReader86.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter90 = null;
        springMvcApiReader86.LOG = logAdapter90;
        io.swagger.models.Swagger swagger92 = null;
        springMvcApiReader86.swagger = swagger92;
        java.util.Set<java.lang.reflect.Type> typeSet94 = springMvcApiReader86.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet94);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(parameterList31);
        org.junit.Assert.assertNotNull(responseHeaderArray32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(parameterList53);
        org.junit.Assert.assertNotNull(responseHeaderArray54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "/hi!" + "'", str65, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(swagger72);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNull(swagger89);
        org.junit.Assert.assertNotNull(typeSet94);
    }

    @Test
    public void test9010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9010");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList13 = springMvcApiReader8.getParameters(type9, (java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray22 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap23 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass25 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader16.typesToSkip = typeSet27;
        springMvcApiReader8.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader8.parseOperationPath("hi!", strMap32);
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        boolean boolean37 = springMvcApiReader8.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList35);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader8.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader8.parseOperationPath("hi!", strMap40);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader44.typesToSkip;
        springMvcApiReader44.updateExtensionChain();
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray55 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap56 = springMvcApiReader49.parseResponseHeaders(responseHeaderArray55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        springMvcApiReader49.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass58);
        springMvcApiReader44.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass58);
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass58);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet62;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader2.parseOperationPath("hi!", strMap65);
        springMvcApiReader2.updateExtensionChain();
        java.lang.reflect.Method method68 = null;
        io.swagger.models.Operation operation69 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method68, operation69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parameterList13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(responseHeaderArray22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/hi!" + "'", str33, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/hi!" + "'", str41, "/hi!");
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertNotNull(responseHeaderArray55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!" + "'", str66, "/hi!");
    }

    @Test
    public void test9011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9011");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger46 = null;
        springMvcApiReader2.swagger = swagger46;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation49 = null;
        io.swagger.annotations.ApiResponses apiResponses50 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation49, apiResponses50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNull(logAdapter48);
    }

    @Test
    public void test9012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9012");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader17.typesToSkip;
        java.lang.String[] strArray22 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray25 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap26 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray27 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList28 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList28, securityRequirementArray27);
        io.swagger.models.Operation operation30 = null;
        springMvcApiReader17.updateOperation(strArray22, strArray25, strMap26, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList28, operation30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader34.typesToSkip;
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray42 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap43 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray44 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList45 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList45, securityRequirementArray44);
        io.swagger.models.Operation operation47 = null;
        springMvcApiReader34.updateOperation(strArray39, strArray42, strMap43, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList45, operation47);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap49 = null;
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader52.typesToSkip;
        java.lang.String[] strArray57 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray60 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap61 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray62 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList63 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList63, securityRequirementArray62);
        io.swagger.models.Operation operation65 = null;
        springMvcApiReader52.updateOperation(strArray57, strArray60, strMap61, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList63, operation65);
        io.swagger.models.Operation operation67 = null;
        springMvcApiReader2.updateOperation(strArray25, strArray42, strMap49, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList63, operation67);
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.ResponseHeader[] responseHeaderArray71 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray71);
        io.swagger.annotations.ApiOperation apiOperation73 = null;
        io.swagger.models.Operation operation74 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation73, operation74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(securityRequirementArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(securityRequirementArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(securityRequirementArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNull(strMap72);
    }

    @Test
    public void test9013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9013");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.models.Swagger swagger51 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api56 = null;
        boolean boolean57 = springMvcApiReader2.canReadApi(false, api56);
        java.lang.Class<?> wildcardClass58 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(swagger51);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test9014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9014");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList41 = springMvcApiReader36.getParameters(type37, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean42 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean43 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type type62 = null;
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList66 = springMvcApiReader61.getParameters(type62, (java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean67 = springMvcApiReader56.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean68 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean69 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader21.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet70;
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader74.typesToSkip;
        java.lang.String[] strArray79 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray82 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap83 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray84 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList85 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList85, securityRequirementArray84);
        io.swagger.models.Operation operation87 = null;
        springMvcApiReader74.updateOperation(strArray79, strArray82, strMap83, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList85, operation87);
        java.lang.Class<?> wildcardClass89 = strArray79.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter91 = springMvcApiReader2.LOG;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray92 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap93 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray92);
        io.swagger.models.Swagger swagger94 = null;
        springMvcApiReader2.swagger = swagger94;
        io.swagger.models.Swagger swagger96 = springMvcApiReader2.swagger;
        io.swagger.annotations.ApiOperation apiOperation97 = null;
        io.swagger.models.Operation operation98 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation97, operation98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(responseHeaderArray27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(parameterList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(parameterList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(securityRequirementArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNull(logAdapter91);
        org.junit.Assert.assertNotNull(responseHeaderArray92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNull(swagger96);
    }

    @Test
    public void test9015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9015");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader2.parseOperationPath("hi!", strMap19);
        io.swagger.models.Operation operation21 = null;
        io.swagger.annotations.ApiOperation apiOperation22 = null;
        springMvcApiReader2.updateTagsForOperation(operation21, apiOperation22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(false, api26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader31.typesToSkip;
        springMvcApiReader31.updateExtensionChain();
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader36.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader36.getTypesToSkip();
        springMvcApiReader31.setTypesToSkip(typeSet38);
        springMvcApiReader31.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader31.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet41;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNull(swagger17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter28);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet41);
    }

    @Test
    public void test9016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9016");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap12 = null;
        io.swagger.annotations.Api api13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap14 = springMvcApiReader2.updateTagsForApi(strMap12, api13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(logAdapter10);
        org.junit.Assert.assertNull(swagger11);
    }

    @Test
    public void test9017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9017");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray31);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray31);
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader2.swagger = swagger34;
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        io.swagger.models.Operation operation38 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation37, operation38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(typeSet36);
    }

    @Test
    public void test9018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9018");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray22 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap23 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass25, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        springMvcApiReader2.LOG = logAdapter31;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        springMvcApiReader2.LOG = logAdapter34;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNull(typeSet13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(responseHeaderArray22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNull(logAdapter33);
    }

    @Test
    public void test9019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9019");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.lang.reflect.Type type7 = null;
        java.lang.annotation.Annotation[] annotationArray8 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList9 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList9, annotationArray8);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList11 = springMvcApiReader6.getParameters(type7, (java.util.List<java.lang.annotation.Annotation>) annotationList9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader14.typesToSkip;
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray22 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap23 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray24 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList25 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList25, securityRequirementArray24);
        io.swagger.models.Operation operation27 = null;
        springMvcApiReader14.updateOperation(strArray19, strArray22, strMap23, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList25, operation27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader31.typesToSkip;
        java.lang.String[] strArray36 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray39 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap40 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray41 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList42 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList42, securityRequirementArray41);
        io.swagger.models.Operation operation44 = null;
        springMvcApiReader31.updateOperation(strArray36, strArray39, strMap40, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList42, operation44);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader6.updateOperation(strArray22, strArray39, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray55 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap56 = springMvcApiReader54.parseResponseHeaders(responseHeaderArray55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type type60 = null;
        java.lang.annotation.Annotation[] annotationArray61 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList62 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList62, annotationArray61);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList64 = springMvcApiReader59.getParameters(type60, (java.util.List<java.lang.annotation.Annotation>) annotationList62);
        boolean boolean65 = springMvcApiReader54.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList62);
        springMvcApiReader54.updateExtensionChain();
        io.swagger.models.Swagger swagger67 = null;
        springMvcApiReader54.swagger = swagger67;
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader54.typesToSkip;
        java.lang.Class<?> wildcardClass70 = typeSet69.getClass();
        springMvcApiReader6.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap73 = null;
        io.swagger.annotations.Api api74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap75 = springMvcApiReader2.updateTagsForApi(strMap73, api74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(parameterList11);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(securityRequirementArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(securityRequirementArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(annotationArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(parameterList64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test9020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9020");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet17;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray25 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap26 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        springMvcApiReader24.LOG = logAdapter31;
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray36 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap37 = springMvcApiReader35.parseResponseHeaders(responseHeaderArray36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        boolean boolean46 = springMvcApiReader35.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList43);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader35.getTypesToSkip();
        springMvcApiReader24.setTypesToSkip(typeSet47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = springMvcApiReader24.LOG;
        java.lang.String[] strArray50 = null;
        java.lang.String[] strArray51 = null;
        io.swagger.models.Operation operation52 = null;
        java.lang.String[] strArray53 = springMvcApiReader24.updateOperationConsumes(strArray50, strArray51, operation52);
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader24.getTypesToSkip();
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader57.typesToSkip;
        springMvcApiReader57.updateExtensionChain();
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type type63 = null;
        java.lang.annotation.Annotation[] annotationArray64 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList65 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList65, annotationArray64);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList67 = springMvcApiReader62.getParameters(type63, (java.util.List<java.lang.annotation.Annotation>) annotationList65);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray68 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap69 = springMvcApiReader62.parseResponseHeaders(responseHeaderArray68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        springMvcApiReader62.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader75 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger73, logAdapter74);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray76 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader75.parseResponseHeaders(responseHeaderArray76);
        io.swagger.models.Swagger swagger78 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader80 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger78, logAdapter79);
        java.lang.reflect.Type type81 = null;
        java.lang.annotation.Annotation[] annotationArray82 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList83 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList83, annotationArray82);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList85 = springMvcApiReader80.getParameters(type81, (java.util.List<java.lang.annotation.Annotation>) annotationList83);
        boolean boolean86 = springMvcApiReader75.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList83);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList87 = springMvcApiReader57.getParameters((java.lang.reflect.Type) wildcardClass71, (java.util.List<java.lang.annotation.Annotation>) annotationList83);
        springMvcApiReader57.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader57.getTypesToSkip();
        springMvcApiReader24.setTypesToSkip(typeSet89);
        io.swagger.models.Swagger swagger91 = null;
        springMvcApiReader24.swagger = swagger91;
        java.util.Set<java.lang.reflect.Type> typeSet93 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet93);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap97 = null;
        java.lang.String str98 = springMvcApiReader2.parseOperationPath("", strMap97);
        java.util.Set<java.lang.reflect.Type> typeSet99 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNull(logAdapter49);
        org.junit.Assert.assertNull(strArray53);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(annotationArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(parameterList67);
        org.junit.Assert.assertNotNull(responseHeaderArray68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(annotationArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(parameterList85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(parameterList87);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "" + "'", str98, "");
        org.junit.Assert.assertNotNull(typeSet99);
    }

    @Test
    public void test9021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9021");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger52 = null;
        springMvcApiReader2.swagger = swagger52;
        io.swagger.models.Operation operation54 = null;
        io.swagger.annotations.ApiOperation apiOperation55 = null;
        springMvcApiReader2.updateTagsForOperation(operation54, apiOperation55);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger58 = null;
        springMvcApiReader2.swagger = swagger58;
        io.swagger.annotations.Api api61 = null;
        boolean boolean62 = springMvcApiReader2.canReadApi(false, api61);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test9022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9022");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader7.typesToSkip;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray15 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap16 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray17 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList18 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList18, securityRequirementArray17);
        io.swagger.models.Operation operation20 = null;
        springMvcApiReader7.updateOperation(strArray12, strArray15, strMap16, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList18, operation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader7.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader26.typesToSkip;
        springMvcApiReader26.updateExtensionChain();
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader31.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader31.getTypesToSkip();
        springMvcApiReader26.setTypesToSkip(typeSet33);
        springMvcApiReader2.setTypesToSkip(typeSet33);
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        springMvcApiReader2.updateTagsForOperation(operation36, apiOperation37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation40 = null;
        io.swagger.annotations.ApiOperation apiOperation41 = null;
        springMvcApiReader2.updateTagsForOperation(operation40, apiOperation41);
        io.swagger.models.Operation operation43 = null;
        io.swagger.annotations.ApiOperation apiOperation44 = null;
        springMvcApiReader2.updateTagsForOperation(operation43, apiOperation44);
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger4);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(securityRequirementArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNull(logAdapter39);
    }

    @Test
    public void test9023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9023");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader2.canReadApi(true, api22);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test9024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9024");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Operation operation11 = null;
        io.swagger.annotations.ApiOperation apiOperation12 = null;
        springMvcApiReader2.updateTagsForOperation(operation11, apiOperation12);
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("", strMap18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation21 = null;
        io.swagger.annotations.ApiOperation apiOperation22 = null;
        springMvcApiReader2.updateTagsForOperation(operation21, apiOperation22);
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        boolean boolean40 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader29.getTypesToSkip();
        io.swagger.models.Swagger swagger42 = springMvcApiReader29.swagger;
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type type46 = null;
        java.lang.annotation.Annotation[] annotationArray47 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList48 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList48, annotationArray47);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList50 = springMvcApiReader45.getParameters(type46, (java.util.List<java.lang.annotation.Annotation>) annotationList48);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray51 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap52 = springMvcApiReader45.parseResponseHeaders(responseHeaderArray51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        springMvcApiReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader45.typesToSkip;
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader59.typesToSkip;
        springMvcApiReader45.typesToSkip = typeSet60;
        io.swagger.annotations.Api api63 = null;
        boolean boolean64 = springMvcApiReader45.canReadApi(false, api63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type type68 = null;
        java.lang.annotation.Annotation[] annotationArray69 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList70 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList70, annotationArray69);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList72 = springMvcApiReader67.getParameters(type68, (java.util.List<java.lang.annotation.Annotation>) annotationList70);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader67.parseResponseHeaders(responseHeaderArray73);
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        springMvcApiReader67.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass76);
        io.swagger.models.Swagger swagger78 = springMvcApiReader67.swagger;
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.reflect.Type[] typeArray81 = new java.lang.reflect.Type[] { wildcardClass80 };
        java.util.ArrayList<java.lang.reflect.Type> typeList82 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList82, typeArray81);
        springMvcApiReader67.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        springMvcApiReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        springMvcApiReader29.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        java.util.Set<java.lang.reflect.Type> typeSet88 = springMvcApiReader2.getTypesToSkip();
        java.lang.reflect.Method method89 = null;
        io.swagger.models.Operation operation90 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method89, operation90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(logAdapter20);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNull(swagger42);
        org.junit.Assert.assertNotNull(annotationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(parameterList50);
        org.junit.Assert.assertNotNull(responseHeaderArray51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(annotationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(parameterList72);
        org.junit.Assert.assertNotNull(responseHeaderArray73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNull(swagger78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(typeSet88);
    }

    @Test
    public void test9025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9025");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        springMvcApiReader2.LOG = logAdapter10;
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] { wildcardClass34 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader25.typesToSkip = typeSet36;
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader17.parseOperationPath("hi!", strMap41);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray43 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader17.parseResponseHeaders(responseHeaderArray43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader47.typesToSkip;
        springMvcApiReader47.updateExtensionChain();
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.reflect.Type type53 = null;
        java.lang.annotation.Annotation[] annotationArray54 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList55 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList55, annotationArray54);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList57 = springMvcApiReader52.getParameters(type53, (java.util.List<java.lang.annotation.Annotation>) annotationList55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray58 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap59 = springMvcApiReader52.parseResponseHeaders(responseHeaderArray58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        springMvcApiReader52.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader65.parseResponseHeaders(responseHeaderArray66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type type71 = null;
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList75 = springMvcApiReader70.getParameters(type71, (java.util.List<java.lang.annotation.Annotation>) annotationList73);
        boolean boolean76 = springMvcApiReader65.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList77 = springMvcApiReader47.getParameters((java.lang.reflect.Type) wildcardClass61, (java.util.List<java.lang.annotation.Annotation>) annotationList73);
        boolean boolean78 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        boolean boolean79 = springMvcApiReader14.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        boolean boolean80 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        io.swagger.annotations.Api api82 = null;
        boolean boolean83 = springMvcApiReader2.canReadApi(false, api82);
        io.swagger.annotations.ApiOperation apiOperation84 = null;
        io.swagger.models.Operation operation85 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation84, operation85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/hi!" + "'", str42, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(annotationArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(parameterList57);
        org.junit.Assert.assertNotNull(responseHeaderArray58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(parameterList75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(parameterList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test9026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9026");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation46 = null;
        io.swagger.annotations.ApiOperation apiOperation47 = null;
        springMvcApiReader2.updateTagsForOperation(operation46, apiOperation47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader2.parseOperationPath("hi!", strMap50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap54 = null;
        io.swagger.annotations.Api api55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap56 = springMvcApiReader2.updateTagsForApi(strMap54, api55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/hi!" + "'", str51, "/hi!");
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertNotNull(typeSet53);
    }

    @Test
    public void test9027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9027");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader15.typesToSkip;
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray23 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap24 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray25 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList26 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList26, securityRequirementArray25);
        io.swagger.models.Operation operation28 = null;
        springMvcApiReader15.updateOperation(strArray20, strArray23, strMap24, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList26, operation28);
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader15.swagger = swagger30;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader15.typesToSkip;
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray36 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap37 = springMvcApiReader35.parseResponseHeaders(responseHeaderArray36);
        io.swagger.models.Swagger swagger38 = null;
        springMvcApiReader35.swagger = swagger38;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader35.parseOperationPath("hi!", strMap41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        springMvcApiReader35.LOG = logAdapter43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader35.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader35.getTypesToSkip();
        springMvcApiReader15.typesToSkip = typeSet46;
        springMvcApiReader2.setTypesToSkip(typeSet46);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(securityRequirementArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/hi!" + "'", str42, "/hi!");
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet46);
    }

    @Test
    public void test9028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9028");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray31);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader2.LOG;
        java.lang.reflect.Method method37 = null;
        io.swagger.models.Operation operation38 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method37, operation38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(logAdapter36);
    }

    @Test
    public void test9029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9029");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(true, api8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        springMvcApiReader2.LOG = logAdapter10;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.typesToSkip;
        java.lang.Class<?> wildcardClass15 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test9030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9030");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        java.lang.String str23 = springMvcApiReader2.parseOperationPath("/hi!", strMap22);
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        io.swagger.models.Swagger swagger27 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger28 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader31.typesToSkip;
        springMvcApiReader31.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader31.typesToSkip;
        io.swagger.models.Swagger swagger35 = null;
        springMvcApiReader31.swagger = swagger35;
        io.swagger.models.Swagger swagger37 = springMvcApiReader31.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader31.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader31.typesToSkip;
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray48);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap51 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray48);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/hi!" + "'", str23, "/hi!");
        org.junit.Assert.assertNull(swagger27);
        org.junit.Assert.assertNull(swagger28);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNull(swagger37);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap51);
    }

    @Test
    public void test9031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9031");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(true, api29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader33.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader33.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        springMvcApiReader2.LOG = logAdapter37;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation40 = null;
        io.swagger.annotations.ApiOperation apiOperation41 = null;
        springMvcApiReader2.updateTagsForOperation(operation40, apiOperation41);
        io.swagger.models.Operation operation43 = null;
        io.swagger.annotations.ApiOperation apiOperation44 = null;
        springMvcApiReader2.updateTagsForOperation(operation43, apiOperation44);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeSet35);
    }

    @Test
    public void test9032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9032");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader23.typesToSkip;
        springMvcApiReader23.updateExtensionChain();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader23.setTypesToSkip(typeSet30);
        springMvcApiReader2.setTypesToSkip(typeSet30);
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader39.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader39.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet41;
        io.swagger.models.Operation operation43 = null;
        io.swagger.annotations.ApiOperation apiOperation44 = null;
        springMvcApiReader2.updateTagsForOperation(operation43, apiOperation44);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeSet41);
    }

    @Test
    public void test9033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9033");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader23.typesToSkip;
        springMvcApiReader23.updateExtensionChain();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader23.setTypesToSkip(typeSet30);
        springMvcApiReader2.setTypesToSkip(typeSet30);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader2.canReadApi(false, api34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger37 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader2.parseOperationPath("/hi!", strMap39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        java.lang.String str44 = springMvcApiReader2.parseOperationPath("/hi!", strMap43);
        io.swagger.models.Swagger swagger45 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader48.typesToSkip;
        springMvcApiReader48.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader48.typesToSkip;
        io.swagger.models.Swagger swagger52 = null;
        springMvcApiReader48.swagger = swagger52;
        io.swagger.models.Swagger swagger54 = springMvcApiReader48.swagger;
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type type60 = null;
        java.lang.annotation.Annotation[] annotationArray61 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList62 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList62, annotationArray61);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList64 = springMvcApiReader59.getParameters(type60, (java.util.List<java.lang.annotation.Annotation>) annotationList62);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type type68 = null;
        java.lang.annotation.Annotation[] annotationArray69 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList70 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList70, annotationArray69);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList72 = springMvcApiReader67.getParameters(type68, (java.util.List<java.lang.annotation.Annotation>) annotationList70);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader67.parseResponseHeaders(responseHeaderArray73);
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.reflect.Type[] typeArray77 = new java.lang.reflect.Type[] { wildcardClass76 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet78 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet78, typeArray77);
        springMvcApiReader67.typesToSkip = typeSet78;
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet78);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader59.parseOperationPath("hi!", strMap83);
        java.lang.annotation.Annotation[] annotationArray85 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList86 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList86, annotationArray85);
        boolean boolean88 = springMvcApiReader59.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList86);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList89 = springMvcApiReader48.getParameters((java.lang.reflect.Type) wildcardClass56, (java.util.List<java.lang.annotation.Annotation>) annotationList86);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = null;
        io.swagger.models.Operation operation91 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList89, strMap90, operation91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNull(swagger37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "/hi!" + "'", str44, "/hi!");
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNull(swagger54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(annotationArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(parameterList64);
        org.junit.Assert.assertNotNull(annotationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(parameterList72);
        org.junit.Assert.assertNotNull(responseHeaderArray73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/hi!" + "'", str84, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(parameterList89);
    }

    @Test
    public void test9034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9034");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        boolean boolean31 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray40 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap41 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray40);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray45 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap46 = springMvcApiReader44.parseResponseHeaders(responseHeaderArray45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        boolean boolean55 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList52);
        boolean boolean56 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList52);
        boolean boolean57 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList52);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertNotNull(responseHeaderArray40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeSet59);
    }

    @Test
    public void test9035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9035");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader2.parseOperationPath("/hi!", strMap24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList33 = springMvcApiReader28.getParameters(type29, (java.util.List<java.lang.annotation.Annotation>) annotationList31);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray34 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap35 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        springMvcApiReader28.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type type42 = null;
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader41.getParameters(type42, (java.util.List<java.lang.annotation.Annotation>) annotationList44);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader41.parseResponseHeaders(responseHeaderArray47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        springMvcApiReader41.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        io.swagger.models.Swagger swagger52 = springMvcApiReader41.swagger;
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] { wildcardClass54 };
        java.util.ArrayList<java.lang.reflect.Type> typeList56 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList56, typeArray55);
        springMvcApiReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        springMvcApiReader28.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray65 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap66 = springMvcApiReader64.parseResponseHeaders(responseHeaderArray65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type type70 = null;
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList74 = springMvcApiReader69.getParameters(type70, (java.util.List<java.lang.annotation.Annotation>) annotationList72);
        boolean boolean75 = springMvcApiReader64.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader64.getTypesToSkip();
        io.swagger.models.Swagger swagger77 = null;
        springMvcApiReader64.swagger = swagger77;
        java.util.Map<java.lang.String, java.lang.String> strMap80 = null;
        java.lang.String str81 = springMvcApiReader64.parseOperationPath("hi!", strMap80);
        io.swagger.annotations.Api api83 = null;
        boolean boolean84 = springMvcApiReader64.canReadApi(true, api83);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = springMvcApiReader64.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet86 = springMvcApiReader64.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet86;
        io.swagger.models.Operation operation88 = null;
        io.swagger.annotations.ApiOperation apiOperation89 = null;
        springMvcApiReader2.updateTagsForOperation(operation88, apiOperation89);
        java.lang.reflect.Method method91 = null;
        io.swagger.models.Operation operation92 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method91, operation92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(parameterList33);
        org.junit.Assert.assertNotNull(responseHeaderArray34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNull(swagger52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(parameterList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "/hi!" + "'", str81, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(logAdapter85);
        org.junit.Assert.assertNotNull(typeSet86);
    }

    @Test
    public void test9036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9036");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger4 = null;
        springMvcApiReader2.swagger = swagger4;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList13 = springMvcApiReader8.getParameters(type9, (java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader2.parseOperationPath("", strMap21);
        java.lang.String[] strArray23 = null;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type type27 = null;
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList31 = springMvcApiReader26.getParameters(type27, (java.util.List<java.lang.annotation.Annotation>) annotationList29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = null;
        springMvcApiReader26.typesToSkip = typeSet32;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader36.typesToSkip;
        java.lang.String[] strArray41 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray44 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap45 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray46 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList47 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList47, securityRequirementArray46);
        io.swagger.models.Operation operation49 = null;
        springMvcApiReader36.updateOperation(strArray41, strArray44, strMap45, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList47, operation49);
        java.lang.String[] strArray57 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap58 = null;
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader61.typesToSkip;
        java.lang.String[] strArray66 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray69 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap70 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray71 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList72 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList72, securityRequirementArray71);
        io.swagger.models.Operation operation74 = null;
        springMvcApiReader61.updateOperation(strArray66, strArray69, strMap70, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList72, operation74);
        io.swagger.models.Operation operation76 = null;
        springMvcApiReader26.updateOperation(strArray41, strArray57, strMap58, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList72, operation76);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap78 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray79 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList80 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList80, securityRequirementArray79);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray23, strArray57, strMap78, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList80, operation82);
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation85 = null;
        io.swagger.annotations.ApiOperation apiOperation86 = null;
        springMvcApiReader2.updateTagsForOperation(operation85, apiOperation86);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parameterList13);
        org.junit.Assert.assertNotNull(responseHeaderArray14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(parameterList31);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(securityRequirementArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(securityRequirementArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(securityRequirementArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(typeSet84);
    }

    @Test
    public void test9037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9037");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet4 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api6 = null;
        boolean boolean7 = springMvcApiReader2.canReadApi(false, api6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader12.getTypesToSkip();
        io.swagger.models.Swagger swagger25 = null;
        springMvcApiReader12.swagger = swagger25;
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        java.lang.String str29 = springMvcApiReader12.parseOperationPath("/hi!", strMap28);
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader12.swagger = swagger30;
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        java.lang.String str34 = springMvcApiReader12.parseOperationPath("", strMap33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        springMvcApiReader37.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet40 = null;
        springMvcApiReader37.setTypesToSkip(typeSet40);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        java.lang.String str44 = springMvcApiReader37.parseOperationPath("", strMap43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader47.typesToSkip;
        java.lang.String[] strArray52 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray55 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap56 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray57 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList58 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList58, securityRequirementArray57);
        io.swagger.models.Operation operation60 = null;
        springMvcApiReader47.updateOperation(strArray52, strArray55, strMap56, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList58, operation60);
        io.swagger.models.Swagger swagger62 = null;
        springMvcApiReader47.swagger = swagger62;
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader66.typesToSkip;
        springMvcApiReader66.updateExtensionChain();
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.reflect.Type type72 = null;
        java.lang.annotation.Annotation[] annotationArray73 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList74 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList74, annotationArray73);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList76 = springMvcApiReader71.getParameters(type72, (java.util.List<java.lang.annotation.Annotation>) annotationList74);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray77 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap78 = springMvcApiReader71.parseResponseHeaders(responseHeaderArray77);
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        springMvcApiReader71.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        springMvcApiReader66.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        io.swagger.models.Swagger swagger83 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader85 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger83, logAdapter84);
        java.lang.reflect.Type type86 = null;
        java.lang.annotation.Annotation[] annotationArray87 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList88 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList88, annotationArray87);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList90 = springMvcApiReader85.getParameters(type86, (java.util.List<java.lang.annotation.Annotation>) annotationList88);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList91 = springMvcApiReader47.getParameters((java.lang.reflect.Type) wildcardClass80, (java.util.List<java.lang.annotation.Annotation>) annotationList88);
        boolean boolean92 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList88);
        boolean boolean93 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList88);
        boolean boolean94 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList88);
        java.util.Set<java.lang.reflect.Type> typeSet95 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "/hi!" + "'", str29, "/hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(securityRequirementArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(annotationArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(parameterList76);
        org.junit.Assert.assertNotNull(responseHeaderArray77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(annotationArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(parameterList90);
        org.junit.Assert.assertNotNull(parameterList91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(typeSet95);
    }

    @Test
    public void test9038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9038");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList41 = springMvcApiReader36.getParameters(type37, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean42 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean43 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type type62 = null;
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList66 = springMvcApiReader61.getParameters(type62, (java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean67 = springMvcApiReader56.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean68 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean69 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader21.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet70;
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type type75 = null;
        java.lang.annotation.Annotation[] annotationArray76 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList77 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList77, annotationArray76);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList79 = springMvcApiReader74.getParameters(type75, (java.util.List<java.lang.annotation.Annotation>) annotationList77);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray80 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap81 = springMvcApiReader74.parseResponseHeaders(responseHeaderArray80);
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        springMvcApiReader74.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass83);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass83);
        java.util.Set<java.lang.reflect.Type> typeSet86 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger87 = null;
        springMvcApiReader2.swagger = swagger87;
        java.util.Map<java.lang.String, java.lang.String> strMap90 = null;
        java.lang.String str91 = springMvcApiReader2.parseOperationPath("hi!", strMap90);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(responseHeaderArray27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(parameterList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(parameterList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(annotationArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(parameterList79);
        org.junit.Assert.assertNotNull(responseHeaderArray80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "/hi!" + "'", str91, "/hi!");
    }

    @Test
    public void test9039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9039");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray24 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap25 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader18.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader18.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray40 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap41 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] { wildcardClass43 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader34.typesToSkip = typeSet45;
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader34.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader34.parseOperationPath("hi!", strMap50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader34.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        java.lang.String str55 = springMvcApiReader34.parseOperationPath("/hi!", strMap54);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader34.updateTagsForOperation(operation56, apiOperation57);
        springMvcApiReader34.updateExtensionChain();
        io.swagger.models.Operation operation60 = null;
        io.swagger.annotations.ApiOperation apiOperation61 = null;
        springMvcApiReader34.updateTagsForOperation(operation60, apiOperation61);
        io.swagger.models.Operation operation63 = null;
        io.swagger.annotations.ApiOperation apiOperation64 = null;
        springMvcApiReader34.updateTagsForOperation(operation63, apiOperation64);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        java.lang.reflect.Type type69 = null;
        java.lang.annotation.Annotation[] annotationArray70 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList71 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList71, annotationArray70);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList73 = springMvcApiReader68.getParameters(type69, (java.util.List<java.lang.annotation.Annotation>) annotationList71);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray74 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader68.parseResponseHeaders(responseHeaderArray74);
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        springMvcApiReader68.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        io.swagger.models.Swagger swagger79 = springMvcApiReader68.swagger;
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.reflect.Type[] typeArray82 = new java.lang.reflect.Type[] { wildcardClass81 };
        java.util.ArrayList<java.lang.reflect.Type> typeList83 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList83, typeArray82);
        springMvcApiReader68.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList83);
        springMvcApiReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList83);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList83);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertNotNull(responseHeaderArray24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertNotNull(responseHeaderArray40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/hi!" + "'", str51, "/hi!");
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "/hi!" + "'", str55, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(parameterList73);
        org.junit.Assert.assertNotNull(responseHeaderArray74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNull(swagger79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test9040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9040");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type type16 = null;
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList20 = springMvcApiReader15.getParameters(type16, (java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = springMvcApiReader23.getParameters(type24, (java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] { wildcardClass32 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader23.typesToSkip = typeSet34;
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader15.parseOperationPath("hi!", strMap39);
        io.swagger.models.Operation operation41 = null;
        io.swagger.annotations.ApiOperation apiOperation42 = null;
        springMvcApiReader15.updateTagsForOperation(operation41, apiOperation42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        springMvcApiReader46.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass55);
        springMvcApiReader15.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass55);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader60.typesToSkip;
        java.lang.String[] strArray65 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray68 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap69 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray70 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList71 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList71, securityRequirementArray70);
        io.swagger.models.Operation operation73 = null;
        springMvcApiReader60.updateOperation(strArray65, strArray68, strMap69, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList71, operation73);
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader60.typesToSkip;
        springMvcApiReader15.typesToSkip = typeSet75;
        io.swagger.models.Swagger swagger77 = null;
        springMvcApiReader15.swagger = swagger77;
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader15.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet79;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = null;
        springMvcApiReader2.LOG = logAdapter81;
        java.util.Set<java.lang.reflect.Type> typeSet83 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList85 = springMvcApiReader2.getSecurityRequirements(api84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(parameterList20);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(parameterList28);
        org.junit.Assert.assertNotNull(responseHeaderArray29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(securityRequirementArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(typeSet83);
    }

    @Test
    public void test9041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9041");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray31);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        springMvcApiReader2.LOG = logAdapter37;
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(logAdapter36);
    }

    @Test
    public void test9042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9042");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(false, api29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader2.parseOperationPath("/hi!", strMap32);
        io.swagger.annotations.Api api35 = null;
        boolean boolean36 = springMvcApiReader2.canReadApi(false, api35);
        io.swagger.models.Operation operation37 = null;
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        springMvcApiReader2.updateTagsForOperation(operation37, apiOperation38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray43 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader42.typesToSkip;
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader52.typesToSkip;
        springMvcApiReader52.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader52.typesToSkip;
        io.swagger.models.Swagger swagger56 = null;
        springMvcApiReader52.swagger = swagger56;
        io.swagger.models.Swagger swagger58 = springMvcApiReader52.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader52.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader52.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader52.typesToSkip;
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList69 = springMvcApiReader64.getParameters(type65, (java.util.List<java.lang.annotation.Annotation>) annotationList67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray70 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader64.parseResponseHeaders(responseHeaderArray70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        springMvcApiReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        io.swagger.models.Swagger swagger75 = springMvcApiReader64.swagger;
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] { wildcardClass77 };
        java.util.ArrayList<java.lang.reflect.Type> typeList79 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList79, typeArray78);
        springMvcApiReader64.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        springMvcApiReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        springMvcApiReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        io.swagger.models.Swagger swagger85 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader87 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger85, logAdapter86);
        java.lang.reflect.Type type88 = null;
        java.lang.annotation.Annotation[] annotationArray89 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList90 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList90, annotationArray89);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList92 = springMvcApiReader87.getParameters(type88, (java.util.List<java.lang.annotation.Annotation>) annotationList90);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray93 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap94 = springMvcApiReader87.parseResponseHeaders(responseHeaderArray93);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter95 = springMvcApiReader87.LOG;
        io.swagger.models.Swagger swagger96 = springMvcApiReader87.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet97 = springMvcApiReader87.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet97;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/hi!" + "'", str33, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNull(swagger58);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(parameterList69);
        org.junit.Assert.assertNotNull(responseHeaderArray70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNull(swagger75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(annotationArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(parameterList92);
        org.junit.Assert.assertNotNull(responseHeaderArray93);
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertNull(logAdapter95);
        org.junit.Assert.assertNull(swagger96);
        org.junit.Assert.assertNotNull(typeSet97);
    }

    @Test
    public void test9043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9043");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api19 = null;
        boolean boolean20 = springMvcApiReader2.canReadApi(false, api19);
        io.swagger.models.Swagger swagger21 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        java.util.Set<java.lang.reflect.Type> typeSet30 = null;
        springMvcApiReader24.typesToSkip = typeSet30;
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        java.lang.String str34 = springMvcApiReader24.parseOperationPath("/hi!", strMap33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader24.typesToSkip;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader38.getParameters(type39, (java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray44 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap45 = springMvcApiReader38.parseResponseHeaders(responseHeaderArray44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList52 = springMvcApiReader24.getParameters((java.lang.reflect.Type) wildcardClass47, (java.util.List<java.lang.annotation.Annotation>) annotationList50);
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        io.swagger.models.Operation operation54 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList52, strMap53, operation54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(swagger21);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/hi!" + "'", str34, "/hi!");
        org.junit.Assert.assertNull(typeSet35);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(responseHeaderArray44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(parameterList52);
    }

    @Test
    public void test9044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9044");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(false, api29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader2.parseOperationPath("/hi!", strMap32);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList42 = springMvcApiReader37.getParameters(type38, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray43 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        springMvcApiReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Swagger swagger48 = springMvcApiReader37.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader37.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        springMvcApiReader2.LOG = logAdapter51;
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/hi!" + "'", str33, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(parameterList42);
        org.junit.Assert.assertNotNull(responseHeaderArray43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(swagger48);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(typeSet53);
    }

    @Test
    public void test9045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9045");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(true, api8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        springMvcApiReader2.LOG = logAdapter10;
        io.swagger.models.Operation operation12 = null;
        io.swagger.annotations.ApiOperation apiOperation13 = null;
        springMvcApiReader2.updateTagsForOperation(operation12, apiOperation13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray23 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap24 = springMvcApiReader17.parseResponseHeaders(responseHeaderArray23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass26);
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader17.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        springMvcApiReader17.LOG = logAdapter29;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader17.LOG;
        io.swagger.models.Swagger swagger32 = null;
        springMvcApiReader17.swagger = swagger32;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        io.swagger.models.Swagger swagger37 = springMvcApiReader36.swagger;
        io.swagger.models.Swagger swagger38 = springMvcApiReader36.swagger;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader41.typesToSkip;
        java.lang.String[] strArray46 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray49 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap50 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray51 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList52 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList52, securityRequirementArray51);
        io.swagger.models.Operation operation54 = null;
        springMvcApiReader41.updateOperation(strArray46, strArray49, strMap50, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList52, operation54);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader41.typesToSkip;
        springMvcApiReader36.setTypesToSkip(typeSet56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray61 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader60.parseResponseHeaders(responseHeaderArray61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        springMvcApiReader60.LOG = logAdapter67;
        io.swagger.models.Swagger swagger69 = null;
        springMvcApiReader60.swagger = swagger69;
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        io.swagger.models.Swagger swagger74 = null;
        springMvcApiReader73.swagger = swagger74;
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.reflect.Type type79 = null;
        java.lang.annotation.Annotation[] annotationArray80 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList81 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList81, annotationArray80);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList83 = springMvcApiReader78.getParameters(type79, (java.util.List<java.lang.annotation.Annotation>) annotationList81);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray84 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap85 = springMvcApiReader78.parseResponseHeaders(responseHeaderArray84);
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] { wildcardClass87 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet89 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet89, typeArray88);
        springMvcApiReader78.typesToSkip = typeSet89;
        springMvcApiReader73.typesToSkip = typeSet89;
        springMvcApiReader60.typesToSkip = typeSet89;
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet89);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet89);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet89);
        io.swagger.models.Operation operation97 = null;
        io.swagger.annotations.ApiResponses apiResponses98 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation97, apiResponses98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertNotNull(responseHeaderArray23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertNull(swagger37);
        org.junit.Assert.assertNull(swagger38);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(securityRequirementArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(annotationArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(parameterList83);
        org.junit.Assert.assertNotNull(responseHeaderArray84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test9046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9046");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation18 = null;
        io.swagger.annotations.ApiOperation apiOperation19 = null;
        springMvcApiReader2.updateTagsForOperation(operation18, apiOperation19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray25 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap26 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList34 = springMvcApiReader29.getParameters(type30, (java.util.List<java.lang.annotation.Annotation>) annotationList32);
        boolean boolean35 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet36;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api40 = null;
        boolean boolean41 = springMvcApiReader2.canReadApi(false, api40);
        io.swagger.annotations.Api api43 = null;
        boolean boolean44 = springMvcApiReader2.canReadApi(false, api43);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap45 = null;
        io.swagger.annotations.Api api46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap47 = springMvcApiReader2.updateTagsForApi(strMap45, api46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNull(logAdapter21);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(parameterList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test9047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9047");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader17.typesToSkip;
        io.swagger.models.Swagger swagger19 = null;
        springMvcApiReader17.swagger = swagger19;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = springMvcApiReader23.getParameters(type24, (java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        springMvcApiReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader17.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray40 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap41 = springMvcApiReader39.parseResponseHeaders(responseHeaderArray40);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type type45 = null;
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList49 = springMvcApiReader44.getParameters(type45, (java.util.List<java.lang.annotation.Annotation>) annotationList47);
        boolean boolean50 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList47);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader39.getTypesToSkip();
        io.swagger.models.Swagger swagger52 = null;
        springMvcApiReader39.swagger = swagger52;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader39.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader59.parseResponseHeaders(responseHeaderArray60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList69 = springMvcApiReader64.getParameters(type65, (java.util.List<java.lang.annotation.Annotation>) annotationList67);
        boolean boolean70 = springMvcApiReader59.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader59.getTypesToSkip();
        springMvcApiReader39.setTypesToSkip(typeSet71);
        springMvcApiReader2.setTypesToSkip(typeSet71);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        springMvcApiReader2.LOG = logAdapter74;
        io.swagger.models.Operation operation76 = null;
        io.swagger.annotations.ApiOperation apiOperation77 = null;
        springMvcApiReader2.updateTagsForOperation(operation76, apiOperation77);
        io.swagger.models.Swagger swagger79 = null;
        springMvcApiReader2.swagger = swagger79;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNull(logAdapter14);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(parameterList28);
        org.junit.Assert.assertNotNull(responseHeaderArray29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(parameterList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(parameterList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeSet71);
    }

    @Test
    public void test9048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9048");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        springMvcApiReader2.swagger = swagger3;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        springMvcApiReader2.LOG = logAdapter5;
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type type10 = null;
        java.lang.annotation.Annotation[] annotationArray11 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList12 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList12, annotationArray11);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList14 = springMvcApiReader9.getParameters(type10, (java.util.List<java.lang.annotation.Annotation>) annotationList12);
        java.util.Set<java.lang.reflect.Type> typeSet15 = null;
        springMvcApiReader9.typesToSkip = typeSet15;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader9.parseOperationPath("/hi!", strMap18);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type type23 = null;
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList27 = springMvcApiReader22.getParameters(type23, (java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type type31 = null;
        java.lang.annotation.Annotation[] annotationArray32 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList33 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList33, annotationArray32);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList35 = springMvcApiReader30.getParameters(type31, (java.util.List<java.lang.annotation.Annotation>) annotationList33);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray36 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap37 = springMvcApiReader30.parseResponseHeaders(responseHeaderArray36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass39 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader30.typesToSkip = typeSet41;
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader22.parseOperationPath("hi!", strMap46);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader22.parseResponseHeaders(responseHeaderArray48);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader9.parseResponseHeaders(responseHeaderArray48);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap51 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray48);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray56 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap57 = springMvcApiReader55.parseResponseHeaders(responseHeaderArray56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        springMvcApiReader55.LOG = logAdapter62;
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray67 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap68 = springMvcApiReader66.parseResponseHeaders(responseHeaderArray67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.reflect.Type type72 = null;
        java.lang.annotation.Annotation[] annotationArray73 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList74 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList74, annotationArray73);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList76 = springMvcApiReader71.getParameters(type72, (java.util.List<java.lang.annotation.Annotation>) annotationList74);
        boolean boolean77 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList74);
        java.util.Set<java.lang.reflect.Type> typeSet78 = springMvcApiReader66.getTypesToSkip();
        springMvcApiReader55.setTypesToSkip(typeSet78);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = springMvcApiReader55.LOG;
        io.swagger.models.Swagger swagger81 = null;
        springMvcApiReader55.swagger = swagger81;
        io.swagger.models.Swagger swagger83 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader85 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger83, logAdapter84);
        java.lang.reflect.Type type86 = null;
        java.lang.annotation.Annotation[] annotationArray87 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList88 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList88, annotationArray87);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList90 = springMvcApiReader85.getParameters(type86, (java.util.List<java.lang.annotation.Annotation>) annotationList88);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray91 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap92 = springMvcApiReader85.parseResponseHeaders(responseHeaderArray91);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap93 = springMvcApiReader55.parseResponseHeaders(responseHeaderArray91);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap94 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray91);
        io.swagger.models.Swagger swagger95 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(annotationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(parameterList14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(parameterList27);
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(parameterList35);
        org.junit.Assert.assertNotNull(responseHeaderArray36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/hi!" + "'", str47, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(annotationArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(parameterList76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNull(logAdapter80);
        org.junit.Assert.assertNotNull(annotationArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(parameterList90);
        org.junit.Assert.assertNotNull(responseHeaderArray91);
        org.junit.Assert.assertNull(strMap92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertNull(swagger95);
    }

    @Test
    public void test9049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9049");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        java.lang.String str14 = springMvcApiReader2.parseOperationPath("/hi!", strMap13);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource15 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger16 = springMvcApiReader2.read(springResource15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(logAdapter10);
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/hi!" + "'", str14, "/hi!");
    }

    @Test
    public void test9050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9050");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation18 = null;
        io.swagger.annotations.ApiOperation apiOperation19 = null;
        springMvcApiReader2.updateTagsForOperation(operation18, apiOperation19);
        io.swagger.models.Swagger swagger21 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api24 = null;
        boolean boolean25 = springMvcApiReader2.canReadApi(false, api24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("hi!", strMap27);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNull(swagger21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "/hi!" + "'", str28, "/hi!");
    }

    @Test
    public void test9051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9051");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        java.lang.String str23 = springMvcApiReader2.parseOperationPath("/hi!", strMap22);
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation34 = null;
        io.swagger.annotations.ApiOperation apiOperation35 = null;
        springMvcApiReader2.updateTagsForOperation(operation34, apiOperation35);
        io.swagger.annotations.Api api38 = null;
        boolean boolean39 = springMvcApiReader2.canReadApi(false, api38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        springMvcApiReader2.LOG = logAdapter41;
        java.lang.reflect.Method method43 = null;
        io.swagger.models.Operation operation44 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method43, operation44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/hi!" + "'", str23, "/hi!");
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNull(logAdapter32);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeSet40);
    }

    @Test
    public void test9052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9052");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray22 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap23 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass25, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray44 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap45 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList53 = springMvcApiReader48.getParameters(type49, (java.util.List<java.lang.annotation.Annotation>) annotationList51);
        boolean boolean54 = springMvcApiReader43.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList51);
        boolean boolean55 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type type59 = null;
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader58.getParameters(type59, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type type67 = null;
        java.lang.annotation.Annotation[] annotationArray68 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList69 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList69, annotationArray68);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList71 = springMvcApiReader66.getParameters(type67, (java.util.List<java.lang.annotation.Annotation>) annotationList69);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray72 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap73 = springMvcApiReader66.parseResponseHeaders(responseHeaderArray72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.reflect.Type[] typeArray76 = new java.lang.reflect.Type[] { wildcardClass75 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet77 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet77, typeArray76);
        springMvcApiReader66.typesToSkip = typeSet77;
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet77);
        java.util.Map<java.lang.String, java.lang.String> strMap82 = null;
        java.lang.String str83 = springMvcApiReader58.parseOperationPath("hi!", strMap82);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray84 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap85 = springMvcApiReader58.parseResponseHeaders(responseHeaderArray84);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap86 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray84);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap87 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray84);
        io.swagger.models.Swagger swagger88 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger89 = null;
        springMvcApiReader2.swagger = swagger89;
        io.swagger.annotations.Api api92 = null;
        boolean boolean93 = springMvcApiReader2.canReadApi(false, api92);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNull(typeSet13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(responseHeaderArray22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(parameterList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertNotNull(annotationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(parameterList71);
        org.junit.Assert.assertNotNull(responseHeaderArray72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "/hi!" + "'", str83, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNull(swagger88);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test9053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9053");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList13 = springMvcApiReader8.getParameters(type9, (java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader8.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        springMvcApiReader8.LOG = logAdapter20;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader8.LOG;
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        io.swagger.models.Swagger swagger26 = null;
        springMvcApiReader25.swagger = swagger26;
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type type31 = null;
        java.lang.annotation.Annotation[] annotationArray32 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList33 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList33, annotationArray32);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList35 = springMvcApiReader30.getParameters(type31, (java.util.List<java.lang.annotation.Annotation>) annotationList33);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray36 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap37 = springMvcApiReader30.parseResponseHeaders(responseHeaderArray36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass39 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader30.typesToSkip = typeSet41;
        springMvcApiReader25.typesToSkip = typeSet41;
        springMvcApiReader8.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        springMvcApiReader2.typesToSkip = typeSet41;
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader51.typesToSkip;
        springMvcApiReader51.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet54 = null;
        springMvcApiReader51.setTypesToSkip(typeSet54);
        io.swagger.models.Swagger swagger56 = null;
        springMvcApiReader51.swagger = swagger56;
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        java.lang.String str60 = springMvcApiReader51.parseOperationPath("", strMap59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type type64 = null;
        java.lang.annotation.Annotation[] annotationArray65 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList66 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList66, annotationArray65);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList68 = springMvcApiReader63.getParameters(type64, (java.util.List<java.lang.annotation.Annotation>) annotationList66);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader63.parseResponseHeaders(responseHeaderArray69);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = springMvcApiReader63.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader63.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader63.typesToSkip;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray74 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader63.parseResponseHeaders(responseHeaderArray74);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap76 = springMvcApiReader51.parseResponseHeaders(responseHeaderArray74);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray74);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parameterList13);
        org.junit.Assert.assertNotNull(responseHeaderArray14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(parameterList35);
        org.junit.Assert.assertNotNull(responseHeaderArray36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(annotationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(parameterList68);
        org.junit.Assert.assertNotNull(responseHeaderArray69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(logAdapter71);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(responseHeaderArray74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strMap77);
    }

    @Test
    public void test9054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9054");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader17.typesToSkip;
        io.swagger.models.Swagger swagger19 = null;
        springMvcApiReader17.swagger = swagger19;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = springMvcApiReader23.getParameters(type24, (java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        springMvcApiReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader17.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray40 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap41 = springMvcApiReader39.parseResponseHeaders(responseHeaderArray40);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type type45 = null;
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList49 = springMvcApiReader44.getParameters(type45, (java.util.List<java.lang.annotation.Annotation>) annotationList47);
        boolean boolean50 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList47);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader39.getTypesToSkip();
        io.swagger.models.Swagger swagger52 = null;
        springMvcApiReader39.swagger = swagger52;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader39.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader59.parseResponseHeaders(responseHeaderArray60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList69 = springMvcApiReader64.getParameters(type65, (java.util.List<java.lang.annotation.Annotation>) annotationList67);
        boolean boolean70 = springMvcApiReader59.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader59.getTypesToSkip();
        springMvcApiReader39.setTypesToSkip(typeSet71);
        springMvcApiReader2.setTypesToSkip(typeSet71);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap77 = null;
        java.lang.String str78 = springMvcApiReader2.parseOperationPath("/hi!", strMap77);
        java.util.Map<java.lang.String, java.lang.String> strMap80 = null;
        java.lang.String str81 = springMvcApiReader2.parseOperationPath("/hi!", strMap80);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNull(logAdapter14);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(parameterList28);
        org.junit.Assert.assertNotNull(responseHeaderArray29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(parameterList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(parameterList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNull(logAdapter75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/hi!" + "'", str78, "/hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "/hi!" + "'", str81, "/hi!");
    }

    @Test
    public void test9055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9055");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        springMvcApiReader2.swagger = swagger3;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] { wildcardClass16 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader7.typesToSkip = typeSet18;
        springMvcApiReader2.typesToSkip = typeSet18;
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation25 = null;
        io.swagger.annotations.ApiOperation apiOperation26 = null;
        springMvcApiReader2.updateTagsForOperation(operation25, apiOperation26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        springMvcApiReader2.LOG = logAdapter29;
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNull(logAdapter28);
    }

    @Test
    public void test9056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9056");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type type6 = null;
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList10 = springMvcApiReader5.getParameters(type6, (java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type type14 = null;
        java.lang.annotation.Annotation[] annotationArray15 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList16 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList16, annotationArray15);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList18 = springMvcApiReader13.getParameters(type14, (java.util.List<java.lang.annotation.Annotation>) annotationList16);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray19 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap20 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] { wildcardClass22 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader13.typesToSkip = typeSet24;
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader5.parseOperationPath("hi!", strMap29);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader5.parseResponseHeaders(responseHeaderArray31);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader35.typesToSkip;
        springMvcApiReader35.updateExtensionChain();
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray46 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap47 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        springMvcApiReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray54 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader53.parseResponseHeaders(responseHeaderArray54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type type59 = null;
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader58.getParameters(type59, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean64 = springMvcApiReader53.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader35.getParameters((java.lang.reflect.Type) wildcardClass49, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean66 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean67 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.models.Swagger swagger68 = null;
        springMvcApiReader2.swagger = swagger68;
        io.swagger.models.Swagger swagger70 = null;
        springMvcApiReader2.swagger = swagger70;
        io.swagger.models.Swagger swagger72 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger73 = null;
        springMvcApiReader2.swagger = swagger73;
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(parameterList10);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(parameterList18);
        org.junit.Assert.assertNotNull(responseHeaderArray19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(responseHeaderArray46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(swagger72);
    }

    @Test
    public void test9057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9057");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader59.parseResponseHeaders(responseHeaderArray60);
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet63 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet63, typeArray62);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet63);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader68.parseResponseHeaders(responseHeaderArray69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.reflect.Type type74 = null;
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList78 = springMvcApiReader73.getParameters(type74, (java.util.List<java.lang.annotation.Annotation>) annotationList76);
        boolean boolean79 = springMvcApiReader68.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader68.getTypesToSkip();
        springMvcApiReader59.setTypesToSkip(typeSet80);
        springMvcApiReader2.setTypesToSkip(typeSet80);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap85 = null;
        java.lang.String str86 = springMvcApiReader2.parseOperationPath("hi!", strMap85);
        io.swagger.models.Swagger swagger87 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api89 = null;
        boolean boolean90 = springMvcApiReader2.canReadApi(true, api89);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(parameterList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "/hi!" + "'", str86, "/hi!");
        org.junit.Assert.assertNull(swagger87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test9058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9058");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        springMvcApiReader2.LOG = logAdapter16;
        java.lang.String[] strArray18 = null;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader21.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader31.typesToSkip;
        java.lang.String[] strArray36 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray39 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap40 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray41 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList42 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList42, securityRequirementArray41);
        io.swagger.models.Operation operation44 = null;
        springMvcApiReader31.updateOperation(strArray36, strArray39, strMap40, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList42, operation44);
        java.lang.String[] strArray52 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap53 = null;
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader56.typesToSkip;
        java.lang.String[] strArray61 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray64 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap65 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray66 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList67 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList67, securityRequirementArray66);
        io.swagger.models.Operation operation69 = null;
        springMvcApiReader56.updateOperation(strArray61, strArray64, strMap65, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList67, operation69);
        io.swagger.models.Operation operation71 = null;
        springMvcApiReader21.updateOperation(strArray36, strArray52, strMap53, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList67, operation71);
        io.swagger.models.Operation operation73 = null;
        java.lang.String[] strArray74 = springMvcApiReader2.updateOperationProduces(strArray18, strArray52, operation73);
        io.swagger.annotations.Api api76 = null;
        boolean boolean77 = springMvcApiReader2.canReadApi(false, api76);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        springMvcApiReader2.LOG = logAdapter78;
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(securityRequirementArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(securityRequirementArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(typeSet80);
    }

    @Test
    public void test9059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9059");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader21.typesToSkip;
        springMvcApiReader21.updateExtensionChain();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type type27 = null;
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList31 = springMvcApiReader26.getParameters(type27, (java.util.List<java.lang.annotation.Annotation>) annotationList29);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass35, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger49 = null;
        springMvcApiReader2.swagger = swagger49;
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(parameterList31);
        org.junit.Assert.assertNotNull(responseHeaderArray32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertNotNull(typeSet51);
    }

    @Test
    public void test9060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9060");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation5 = null;
        io.swagger.annotations.ApiOperation apiOperation6 = null;
        springMvcApiReader2.updateTagsForOperation(operation5, apiOperation6);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader10.typesToSkip;
        springMvcApiReader10.updateExtensionChain();
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type type16 = null;
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList20 = springMvcApiReader15.getParameters(type16, (java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        springMvcApiReader15.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        boolean boolean39 = springMvcApiReader28.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList40 = springMvcApiReader10.getParameters((java.lang.reflect.Type) wildcardClass24, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.models.Operation operation41 = null;
        io.swagger.annotations.ApiOperation apiOperation42 = null;
        springMvcApiReader10.updateTagsForOperation(operation41, apiOperation42);
        io.swagger.models.Swagger swagger44 = springMvcApiReader10.swagger;
        io.swagger.models.Swagger swagger45 = springMvcApiReader10.swagger;
        java.lang.Class<?> wildcardClass46 = springMvcApiReader10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(parameterList20);
        org.junit.Assert.assertNotNull(responseHeaderArray21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(parameterList40);
        org.junit.Assert.assertNull(swagger44);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test9061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9061");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader2.parseOperationPath("", strMap21);
        io.swagger.models.Swagger swagger23 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap25 = null;
        io.swagger.annotations.Api api26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap27 = springMvcApiReader2.updateTagsForApi(strMap25, api26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(swagger23);
        org.junit.Assert.assertNotNull(typeSet24);
    }

    @Test
    public void test9062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9062");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader2.LOG = logAdapter25;
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList34 = springMvcApiReader29.getParameters(type30, (java.util.List<java.lang.annotation.Annotation>) annotationList32);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray35 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap36 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        springMvcApiReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        io.swagger.models.Swagger swagger53 = springMvcApiReader42.swagger;
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] { wildcardClass55 };
        java.util.ArrayList<java.lang.reflect.Type> typeList57 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList57, typeArray56);
        springMvcApiReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        springMvcApiReader29.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader2.parseOperationPath("/hi!", strMap63);
        java.util.Set<java.lang.reflect.Type> typeSet65 = null;
        springMvcApiReader2.setTypesToSkip(typeSet65);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(parameterList34);
        org.junit.Assert.assertNotNull(responseHeaderArray35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNull(swagger53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
    }

    @Test
    public void test9063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9063");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader2.parseOperationPath("hi!", strMap19);
        io.swagger.models.Operation operation21 = null;
        io.swagger.annotations.ApiOperation apiOperation22 = null;
        springMvcApiReader2.updateTagsForOperation(operation21, apiOperation22);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader2.LOG = logAdapter25;
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        springMvcApiReader29.LOG = logAdapter36;
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type type46 = null;
        java.lang.annotation.Annotation[] annotationArray47 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList48 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList48, annotationArray47);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList50 = springMvcApiReader45.getParameters(type46, (java.util.List<java.lang.annotation.Annotation>) annotationList48);
        boolean boolean51 = springMvcApiReader40.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList48);
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader40.getTypesToSkip();
        springMvcApiReader29.setTypesToSkip(typeSet52);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = springMvcApiReader29.LOG;
        java.lang.String[] strArray55 = null;
        java.lang.String[] strArray56 = null;
        io.swagger.models.Operation operation57 = null;
        java.lang.String[] strArray58 = springMvcApiReader29.updateOperationConsumes(strArray55, strArray56, operation57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader29.getTypesToSkip();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        springMvcApiReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        springMvcApiReader29.LOG = logAdapter63;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray65 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap66 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray65);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray65);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader2.parseOperationPath("", strMap69);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNull(swagger17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(annotationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(parameterList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNull(logAdapter54);
        org.junit.Assert.assertNull(strArray58);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(responseHeaderArray65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
    }

    @Test
    public void test9064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9064");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation6 = null;
        io.swagger.annotations.ApiOperation apiOperation7 = null;
        springMvcApiReader2.updateTagsForOperation(operation6, apiOperation7);
        io.swagger.models.Swagger swagger9 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNull(swagger9);
        org.junit.Assert.assertNull(logAdapter10);
    }

    @Test
    public void test9065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9065");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        springMvcApiReader2.swagger = swagger3;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        springMvcApiReader2.LOG = logAdapter5;
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        io.swagger.models.Swagger swagger10 = springMvcApiReader9.swagger;
        io.swagger.models.Swagger swagger11 = springMvcApiReader9.swagger;
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader14.typesToSkip;
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray22 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap23 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray24 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList25 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList25, securityRequirementArray24);
        io.swagger.models.Operation operation27 = null;
        springMvcApiReader14.updateOperation(strArray19, strArray22, strMap23, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList25, operation27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader14.typesToSkip;
        springMvcApiReader9.setTypesToSkip(typeSet29);
        springMvcApiReader2.setTypesToSkip(typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        springMvcApiReader2.swagger = swagger32;
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader37.swagger = swagger40;
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        java.lang.String str44 = springMvcApiReader37.parseOperationPath("hi!", strMap43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader37.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet45;
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type type58 = null;
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList62 = springMvcApiReader57.getParameters(type58, (java.util.List<java.lang.annotation.Annotation>) annotationList60);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray63 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap64 = springMvcApiReader57.parseResponseHeaders(responseHeaderArray63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] { wildcardClass66 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader57.typesToSkip = typeSet68;
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader49.parseOperationPath("hi!", strMap73);
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        boolean boolean78 = springMvcApiReader49.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        boolean boolean79 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        org.junit.Assert.assertNull(swagger10);
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(securityRequirementArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "/hi!" + "'", str44, "/hi!");
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(parameterList62);
        org.junit.Assert.assertNotNull(responseHeaderArray63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/hi!" + "'", str74, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test9066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9066");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet4 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        io.swagger.models.Swagger swagger12 = springMvcApiReader11.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader11.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader11.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader11.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet15);
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet4);
        org.junit.Assert.assertNull(logAdapter5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNull(swagger12);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(typeSet15);
    }

    @Test
    public void test9067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9067");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = null;
        springMvcApiReader2.swagger = swagger6;
        io.swagger.models.Swagger swagger8 = null;
        springMvcApiReader2.swagger = swagger8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        java.lang.annotation.Annotation[] annotationArray14 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList15 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList15, annotationArray14);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList17 = springMvcApiReader12.getParameters(type13, (java.util.List<java.lang.annotation.Annotation>) annotationList15);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray18 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap19 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = springMvcApiReader12.LOG;
        io.swagger.models.Swagger swagger21 = springMvcApiReader12.swagger;
        springMvcApiReader12.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader12.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader12.typesToSkip;
        springMvcApiReader12.updateExtensionChain();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        springMvcApiReader28.LOG = logAdapter35;
        io.swagger.models.Swagger swagger37 = null;
        springMvcApiReader28.swagger = swagger37;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        io.swagger.models.Swagger swagger42 = null;
        springMvcApiReader41.swagger = swagger42;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] { wildcardClass55 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader46.typesToSkip = typeSet57;
        springMvcApiReader41.typesToSkip = typeSet57;
        springMvcApiReader28.typesToSkip = typeSet57;
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList69 = springMvcApiReader64.getParameters(type65, (java.util.List<java.lang.annotation.Annotation>) annotationList67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray70 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader64.parseResponseHeaders(responseHeaderArray70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        springMvcApiReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader77 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger75, logAdapter76);
        java.lang.reflect.Type type78 = null;
        java.lang.annotation.Annotation[] annotationArray79 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList80 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList80, annotationArray79);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList82 = springMvcApiReader77.getParameters(type78, (java.util.List<java.lang.annotation.Annotation>) annotationList80);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray83 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap84 = springMvcApiReader77.parseResponseHeaders(responseHeaderArray83);
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        springMvcApiReader77.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass86);
        io.swagger.models.Swagger swagger88 = springMvcApiReader77.swagger;
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.reflect.Type[] typeArray91 = new java.lang.reflect.Type[] { wildcardClass90 };
        java.util.ArrayList<java.lang.reflect.Type> typeList92 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList92, typeArray91);
        springMvcApiReader77.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList92);
        springMvcApiReader64.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList92);
        springMvcApiReader28.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList92);
        springMvcApiReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList92);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList92);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter99 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(annotationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(parameterList17);
        org.junit.Assert.assertNotNull(responseHeaderArray18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(logAdapter20);
        org.junit.Assert.assertNull(swagger21);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(parameterList69);
        org.junit.Assert.assertNotNull(responseHeaderArray70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(annotationArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(parameterList82);
        org.junit.Assert.assertNotNull(responseHeaderArray83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNull(swagger88);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(typeArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNull(logAdapter99);
    }

    @Test
    public void test9068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9068");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        boolean boolean31 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass16, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.lang.reflect.Type type33 = null;
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList37 = springMvcApiReader2.getParameters(type33, (java.util.List<java.lang.annotation.Annotation>) annotationList35);
        io.swagger.models.Swagger swagger38 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type type42 = null;
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader41.getParameters(type42, (java.util.List<java.lang.annotation.Annotation>) annotationList44);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray55 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap56 = springMvcApiReader49.parseResponseHeaders(responseHeaderArray55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass58 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader49.typesToSkip = typeSet60;
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader41.parseOperationPath("hi!", strMap65);
        io.swagger.models.Operation operation67 = null;
        io.swagger.annotations.ApiOperation apiOperation68 = null;
        springMvcApiReader41.updateTagsForOperation(operation67, apiOperation68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type type73 = null;
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList77 = springMvcApiReader72.getParameters(type73, (java.util.List<java.lang.annotation.Annotation>) annotationList75);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray78 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap79 = springMvcApiReader72.parseResponseHeaders(responseHeaderArray78);
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        springMvcApiReader72.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        springMvcApiReader41.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader41.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet84;
        springMvcApiReader2.updateExtensionChain();
        java.lang.reflect.Method method87 = null;
        io.swagger.models.Operation operation88 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method87, operation88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(parameterList37);
        org.junit.Assert.assertNull(swagger38);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertNotNull(responseHeaderArray55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!" + "'", str66, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(parameterList77);
        org.junit.Assert.assertNotNull(responseHeaderArray78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeSet84);
    }

    @Test
    public void test9069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9069");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader7.typesToSkip;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray15 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap16 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray17 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList18 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList18, securityRequirementArray17);
        io.swagger.models.Operation operation20 = null;
        springMvcApiReader7.updateOperation(strArray12, strArray15, strMap16, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList18, operation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader7.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = null;
        springMvcApiReader2.setTypesToSkip(typeSet24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList33 = springMvcApiReader28.getParameters(type29, (java.util.List<java.lang.annotation.Annotation>) annotationList31);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray34 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap35 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] { wildcardClass37 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader28.typesToSkip = typeSet39;
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader28.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        springMvcApiReader28.LOG = logAdapter43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet45;
        io.swagger.models.Swagger swagger47 = null;
        springMvcApiReader2.swagger = swagger47;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        springMvcApiReader2.LOG = logAdapter49;
        io.swagger.annotations.Api api51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList52 = springMvcApiReader2.getSecurityRequirements(api51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger4);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(securityRequirementArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(parameterList33);
        org.junit.Assert.assertNotNull(responseHeaderArray34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeSet45);
    }

    @Test
    public void test9070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9070");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("hi!", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        springMvcApiReader12.LOG = logAdapter19;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray24 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap25 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList33 = springMvcApiReader28.getParameters(type29, (java.util.List<java.lang.annotation.Annotation>) annotationList31);
        boolean boolean34 = springMvcApiReader23.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList31);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader23.getTypesToSkip();
        springMvcApiReader12.setTypesToSkip(typeSet35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = springMvcApiReader12.LOG;
        java.lang.String[] strArray38 = null;
        java.lang.String[] strArray39 = null;
        io.swagger.models.Operation operation40 = null;
        java.lang.String[] strArray41 = springMvcApiReader12.updateOperationConsumes(strArray38, strArray39, operation40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader12.getTypesToSkip();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader2.parseOperationPath("hi!", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader2.canReadApi(true, api52);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/hi!" + "'", str9, "/hi!");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(parameterList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(logAdapter37);
        org.junit.Assert.assertNull(strArray41);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "/hi!" + "'", str50, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test9071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9071");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger52 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger53 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        springMvcApiReader2.LOG = logAdapter54;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger57 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation58 = null;
        io.swagger.annotations.ApiOperation apiOperation59 = null;
        springMvcApiReader2.updateTagsForOperation(operation58, apiOperation59);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNull(swagger52);
        org.junit.Assert.assertNull(swagger53);
        org.junit.Assert.assertNull(logAdapter56);
        org.junit.Assert.assertNull(swagger57);
    }

    @Test
    public void test9072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9072");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Operation operation11 = null;
        io.swagger.annotations.ApiOperation apiOperation12 = null;
        springMvcApiReader2.updateTagsForOperation(operation11, apiOperation12);
        io.swagger.models.Swagger swagger14 = null;
        springMvcApiReader2.swagger = swagger14;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray19 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap20 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader18.LOG = logAdapter25;
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        boolean boolean40 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader29.getTypesToSkip();
        springMvcApiReader18.setTypesToSkip(typeSet41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader18.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger46 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        springMvcApiReader2.LOG = logAdapter47;
        io.swagger.annotations.ApiOperation apiOperation49 = null;
        io.swagger.models.Operation operation50 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation49, operation50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNull(logAdapter45);
        org.junit.Assert.assertNull(swagger46);
    }

    @Test
    public void test9073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9073");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray31);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger35 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader2.parseOperationPath("hi!", strMap37);
        io.swagger.annotations.Api api40 = null;
        boolean boolean41 = springMvcApiReader2.canReadApi(true, api40);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader44.typesToSkip;
        springMvcApiReader44.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader44.typesToSkip;
        io.swagger.models.Swagger swagger48 = null;
        springMvcApiReader44.swagger = swagger48;
        io.swagger.models.Swagger swagger50 = springMvcApiReader44.swagger;
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type type56 = null;
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList60 = springMvcApiReader55.getParameters(type56, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type type64 = null;
        java.lang.annotation.Annotation[] annotationArray65 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList66 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList66, annotationArray65);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList68 = springMvcApiReader63.getParameters(type64, (java.util.List<java.lang.annotation.Annotation>) annotationList66);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader63.parseResponseHeaders(responseHeaderArray69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] { wildcardClass72 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        springMvcApiReader63.typesToSkip = typeSet74;
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet74);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader55.parseOperationPath("hi!", strMap79);
        java.lang.annotation.Annotation[] annotationArray81 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList82 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList82, annotationArray81);
        boolean boolean84 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList85 = springMvcApiReader44.getParameters((java.lang.reflect.Type) wildcardClass52, (java.util.List<java.lang.annotation.Annotation>) annotationList82);
        boolean boolean86 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = null;
        java.lang.String str89 = springMvcApiReader2.parseOperationPath("", strMap88);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter90 = null;
        springMvcApiReader2.LOG = logAdapter90;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource92 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger93 = springMvcApiReader2.read(springResource92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertNull(swagger35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNull(swagger50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(parameterList60);
        org.junit.Assert.assertNotNull(annotationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(parameterList68);
        org.junit.Assert.assertNotNull(responseHeaderArray69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "/hi!" + "'", str80, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(parameterList85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
    }

    @Test
    public void test9074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9074");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("", strMap12);
        java.lang.reflect.Type type14 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray19 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap20 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader18.LOG = logAdapter25;
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        boolean boolean40 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader29.getTypesToSkip();
        springMvcApiReader18.setTypesToSkip(typeSet41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader18.LOG;
        java.lang.String[] strArray44 = null;
        java.lang.String[] strArray45 = null;
        io.swagger.models.Operation operation46 = null;
        java.lang.String[] strArray47 = springMvcApiReader18.updateOperationConsumes(strArray44, strArray45, operation46);
        java.lang.Class<?> wildcardClass48 = springMvcApiReader18.getClass();
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader51.typesToSkip;
        springMvcApiReader51.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader51.typesToSkip;
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type type58 = null;
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList62 = springMvcApiReader57.getParameters(type58, (java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean63 = springMvcApiReader51.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList64 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass48, (java.util.List<java.lang.annotation.Annotation>) annotationList60);
        io.swagger.models.Swagger swagger65 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation66 = null;
        io.swagger.annotations.ApiOperation apiOperation67 = null;
        springMvcApiReader2.updateTagsForOperation(operation66, apiOperation67);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        springMvcApiReader2.LOG = logAdapter70;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertNull(strArray47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(parameterList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(parameterList64);
        org.junit.Assert.assertNull(swagger65);
        org.junit.Assert.assertNull(logAdapter69);
    }

    @Test
    public void test9075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9075");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray23 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap24 = springMvcApiReader17.parseResponseHeaders(responseHeaderArray23);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = springMvcApiReader17.LOG;
        io.swagger.models.Swagger swagger26 = springMvcApiReader17.swagger;
        springMvcApiReader17.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader17.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        springMvcApiReader17.LOG = logAdapter29;
        springMvcApiReader17.updateExtensionChain();
        io.swagger.models.Swagger swagger32 = null;
        springMvcApiReader17.swagger = swagger32;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList41 = springMvcApiReader36.getParameters(type37, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type type45 = null;
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList49 = springMvcApiReader44.getParameters(type45, (java.util.List<java.lang.annotation.Annotation>) annotationList47);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray50 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap51 = springMvcApiReader44.parseResponseHeaders(responseHeaderArray50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] { wildcardClass53 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader44.typesToSkip = typeSet55;
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader36.parseOperationPath("hi!", strMap60);
        io.swagger.annotations.Api api63 = null;
        boolean boolean64 = springMvcApiReader36.canReadApi(false, api63);
        springMvcApiReader36.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader36.typesToSkip;
        springMvcApiReader17.setTypesToSkip(typeSet66);
        springMvcApiReader2.typesToSkip = typeSet66;
        java.lang.Class<?> wildcardClass69 = typeSet66.getClass();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertNotNull(responseHeaderArray23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(logAdapter25);
        org.junit.Assert.assertNull(swagger26);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(parameterList41);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(parameterList49);
        org.junit.Assert.assertNotNull(responseHeaderArray50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "/hi!" + "'", str61, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test9076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9076");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader21.typesToSkip = typeSet27;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader21.parseOperationPath("/hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] { wildcardClass51 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader42.typesToSkip = typeSet53;
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader34.parseOperationPath("hi!", strMap58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray60);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader2.canReadApi(false, api65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray70 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader69.parseResponseHeaders(responseHeaderArray70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type type75 = null;
        java.lang.annotation.Annotation[] annotationArray76 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList77 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList77, annotationArray76);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList79 = springMvcApiReader74.getParameters(type75, (java.util.List<java.lang.annotation.Annotation>) annotationList77);
        boolean boolean80 = springMvcApiReader69.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList77);
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader69.getTypesToSkip();
        io.swagger.models.Swagger swagger82 = null;
        springMvcApiReader69.swagger = swagger82;
        java.lang.Class<?> wildcardClass84 = springMvcApiReader69.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        io.swagger.models.Operation operation86 = null;
        io.swagger.annotations.ApiOperation apiOperation87 = null;
        springMvcApiReader2.updateTagsForOperation(operation86, apiOperation87);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap89 = null;
        io.swagger.annotations.Api api90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap91 = springMvcApiReader2.updateTagsForApi(strMap89, api90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(annotationArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(parameterList79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test9077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9077");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader7.typesToSkip;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray15 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap16 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray17 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList18 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList18, securityRequirementArray17);
        io.swagger.models.Operation operation20 = null;
        springMvcApiReader7.updateOperation(strArray12, strArray15, strMap16, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList18, operation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader7.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = null;
        springMvcApiReader2.setTypesToSkip(typeSet24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        springMvcApiReader28.LOG = logAdapter35;
        io.swagger.models.Swagger swagger37 = null;
        springMvcApiReader28.swagger = swagger37;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        io.swagger.models.Swagger swagger42 = null;
        springMvcApiReader41.swagger = swagger42;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] { wildcardClass55 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader46.typesToSkip = typeSet57;
        springMvcApiReader41.typesToSkip = typeSet57;
        springMvcApiReader28.typesToSkip = typeSet57;
        springMvcApiReader2.typesToSkip = typeSet57;
        io.swagger.models.Swagger swagger63 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        springMvcApiReader2.LOG = logAdapter64;
        io.swagger.annotations.Api api66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet67 = springMvcApiReader2.extractTags(api66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger4);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(securityRequirementArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(swagger63);
    }

    @Test
    public void test9078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9078");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray23 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap24 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray23);
        io.swagger.models.Swagger swagger25 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader2.swagger = swagger27;
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(swagger25);
        org.junit.Assert.assertNotNull(typeSet26);
    }

    @Test
    public void test9079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9079");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        springMvcApiReader2.swagger = swagger3;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        springMvcApiReader2.LOG = logAdapter5;
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        io.swagger.models.Swagger swagger10 = springMvcApiReader9.swagger;
        io.swagger.models.Swagger swagger11 = springMvcApiReader9.swagger;
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader14.typesToSkip;
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray22 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap23 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray24 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList25 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList25, securityRequirementArray24);
        io.swagger.models.Operation operation27 = null;
        springMvcApiReader14.updateOperation(strArray19, strArray22, strMap23, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList25, operation27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader14.typesToSkip;
        springMvcApiReader9.setTypesToSkip(typeSet29);
        springMvcApiReader2.setTypesToSkip(typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        springMvcApiReader2.swagger = swagger32;
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader2.swagger = swagger34;
        io.swagger.models.Swagger swagger36 = null;
        springMvcApiReader2.swagger = swagger36;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource38 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger39 = springMvcApiReader2.read(springResource38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger10);
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(securityRequirementArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet29);
    }

    @Test
    public void test9080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9080");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        springMvcApiReader2.LOG = logAdapter28;
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader32.canReadApi(false, api34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader38.getParameters(type39, (java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray44 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap45 = springMvcApiReader38.parseResponseHeaders(responseHeaderArray44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader38.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        springMvcApiReader38.LOG = logAdapter50;
        java.lang.Class<?> wildcardClass52 = springMvcApiReader38.getClass();
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList56 = springMvcApiReader32.getParameters((java.lang.reflect.Type) wildcardClass52, (java.util.List<java.lang.annotation.Annotation>) annotationList54);
        boolean boolean57 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type type61 = null;
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader60.getParameters(type61, (java.util.List<java.lang.annotation.Annotation>) annotationList63);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader60.parseResponseHeaders(responseHeaderArray66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        springMvcApiReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass69);
        io.swagger.models.Swagger swagger71 = springMvcApiReader60.swagger;
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.reflect.Type[] typeArray74 = new java.lang.reflect.Type[] { wildcardClass73 };
        java.util.ArrayList<java.lang.reflect.Type> typeList75 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList75, typeArray74);
        springMvcApiReader60.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList75);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList75);
        io.swagger.models.Operation operation79 = null;
        io.swagger.annotations.ApiOperation apiOperation80 = null;
        springMvcApiReader2.updateTagsForOperation(operation79, apiOperation80);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader2.parseOperationPath("hi!", strMap83);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        springMvcApiReader2.LOG = logAdapter85;
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter88 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api90 = null;
        boolean boolean91 = springMvcApiReader2.canReadApi(false, api90);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(responseHeaderArray44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(parameterList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertNotNull(responseHeaderArray66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNull(swagger71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/hi!" + "'", str84, "/hi!");
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNull(logAdapter88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test9081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9081");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.getTypesToSkip();
        java.lang.reflect.Type type4 = null;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet13 = null;
        springMvcApiReader7.typesToSkip = typeSet13;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader7.parseOperationPath("/hi!", strMap16);
        java.lang.reflect.Type type18 = null;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray22 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap23 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader21.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        springMvcApiReader21.LOG = logAdapter28;
        io.swagger.models.Operation operation30 = null;
        io.swagger.annotations.ApiOperation apiOperation31 = null;
        springMvcApiReader21.updateTagsForOperation(operation30, apiOperation31);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader21.swagger = swagger33;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList42 = springMvcApiReader37.getParameters(type38, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = null;
        springMvcApiReader37.typesToSkip = typeSet43;
        springMvcApiReader37.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader37.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        springMvcApiReader37.LOG = logAdapter47;
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader51.parseResponseHeaders(responseHeaderArray52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        springMvcApiReader51.LOG = logAdapter58;
        io.swagger.models.Swagger swagger60 = null;
        springMvcApiReader51.swagger = swagger60;
        java.lang.Class<?> wildcardClass62 = springMvcApiReader51.getClass();
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        io.swagger.annotations.Api api67 = null;
        boolean boolean68 = springMvcApiReader65.canReadApi(false, api67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.reflect.Type type72 = null;
        java.lang.annotation.Annotation[] annotationArray73 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList74 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList74, annotationArray73);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList76 = springMvcApiReader71.getParameters(type72, (java.util.List<java.lang.annotation.Annotation>) annotationList74);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray77 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap78 = springMvcApiReader71.parseResponseHeaders(responseHeaderArray77);
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        springMvcApiReader71.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader71.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        springMvcApiReader71.LOG = logAdapter83;
        java.lang.Class<?> wildcardClass85 = springMvcApiReader71.getClass();
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList89 = springMvcApiReader65.getParameters((java.lang.reflect.Type) wildcardClass85, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList90 = springMvcApiReader37.getParameters((java.lang.reflect.Type) wildcardClass62, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean91 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList92 = springMvcApiReader7.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList93 = springMvcApiReader2.getParameters(type4, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(parameterList42);
        org.junit.Assert.assertNull(typeSet46);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(annotationArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(parameterList76);
        org.junit.Assert.assertNotNull(responseHeaderArray77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(parameterList89);
        org.junit.Assert.assertNotNull(parameterList90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(parameterList92);
        org.junit.Assert.assertNotNull(parameterList93);
    }

    @Test
    public void test9082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9082");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet4 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api6 = null;
        boolean boolean7 = springMvcApiReader2.canReadApi(true, api6);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray11 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap12 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray20 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap21 = springMvcApiReader19.parseResponseHeaders(responseHeaderArray20);
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet23 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet23, typeArray22);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet23);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        boolean boolean39 = springMvcApiReader28.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader19.setTypesToSkip(typeSet40);
        io.swagger.models.Operation operation42 = null;
        io.swagger.annotations.ApiOperation apiOperation43 = null;
        springMvcApiReader19.updateTagsForOperation(operation42, apiOperation43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader47.typesToSkip;
        springMvcApiReader47.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader47.typesToSkip;
        io.swagger.models.Swagger swagger51 = null;
        springMvcApiReader47.swagger = swagger51;
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type type56 = null;
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList60 = springMvcApiReader55.getParameters(type56, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray61 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader55.parseResponseHeaders(responseHeaderArray61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        springMvcApiReader55.LOG = logAdapter63;
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type type68 = null;
        java.lang.annotation.Annotation[] annotationArray69 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList70 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList70, annotationArray69);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList72 = springMvcApiReader67.getParameters(type68, (java.util.List<java.lang.annotation.Annotation>) annotationList70);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader67.parseResponseHeaders(responseHeaderArray73);
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        springMvcApiReader67.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass76);
        io.swagger.models.Swagger swagger78 = springMvcApiReader67.swagger;
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.reflect.Type[] typeArray81 = new java.lang.reflect.Type[] { wildcardClass80 };
        java.util.ArrayList<java.lang.reflect.Type> typeList82 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList82, typeArray81);
        springMvcApiReader67.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        springMvcApiReader55.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        springMvcApiReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        springMvcApiReader19.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        springMvcApiReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        io.swagger.models.Swagger swagger90 = null;
        springMvcApiReader2.swagger = swagger90;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(parameterList60);
        org.junit.Assert.assertNotNull(responseHeaderArray61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(annotationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(parameterList72);
        org.junit.Assert.assertNotNull(responseHeaderArray73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNull(swagger78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test9083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9083");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray31);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger35 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        io.swagger.models.Operation operation39 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation38, operation39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertNull(swagger35);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeSet37);
    }

    @Test
    public void test9084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9084");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(false, api17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger21 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] { wildcardClass33 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader24.typesToSkip = typeSet35;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader24.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        springMvcApiReader24.LOG = logAdapter39;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet41;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        springMvcApiReader2.LOG = logAdapter43;
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type type48 = null;
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList52 = springMvcApiReader47.getParameters(type48, (java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray53 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader47.parseResponseHeaders(responseHeaderArray53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = springMvcApiReader47.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader47.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader47.typesToSkip;
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type type61 = null;
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader60.getParameters(type61, (java.util.List<java.lang.annotation.Annotation>) annotationList63);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader60.parseResponseHeaders(responseHeaderArray66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        springMvcApiReader60.LOG = logAdapter68;
        java.lang.Class<?> wildcardClass70 = springMvcApiReader60.getClass();
        springMvcApiReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = springMvcApiReader47.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        springMvcApiReader2.LOG = logAdapter74;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNull(swagger21);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(parameterList52);
        org.junit.Assert.assertNotNull(responseHeaderArray53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(logAdapter55);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertNotNull(responseHeaderArray66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test9085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9085");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation18 = null;
        io.swagger.annotations.ApiOperation apiOperation19 = null;
        springMvcApiReader2.updateTagsForOperation(operation18, apiOperation19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray25 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap26 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList34 = springMvcApiReader29.getParameters(type30, (java.util.List<java.lang.annotation.Annotation>) annotationList32);
        boolean boolean35 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet36;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader41.typesToSkip;
        java.lang.String[] strArray46 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray49 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap50 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray51 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList52 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList52, securityRequirementArray51);
        io.swagger.models.Operation operation54 = null;
        springMvcApiReader41.updateOperation(strArray46, strArray49, strMap50, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList52, operation54);
        io.swagger.models.Swagger swagger56 = null;
        springMvcApiReader41.swagger = swagger56;
        java.lang.annotation.Annotation[] annotationArray58 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList59 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList59, annotationArray58);
        boolean boolean61 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList59);
        java.lang.Class<?> wildcardClass62 = annotationList59.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNull(logAdapter21);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(parameterList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(securityRequirementArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(annotationArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test9086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9086");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray28 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap29 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader32.typesToSkip;
        springMvcApiReader32.updateExtensionChain();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList42 = springMvcApiReader37.getParameters(type38, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray43 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        springMvcApiReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray51 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap52 = springMvcApiReader50.parseResponseHeaders(responseHeaderArray51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type type56 = null;
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList60 = springMvcApiReader55.getParameters(type56, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        boolean boolean61 = springMvcApiReader50.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList62 = springMvcApiReader32.getParameters((java.lang.reflect.Type) wildcardClass46, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        boolean boolean63 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader2.swagger = swagger64;
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        boolean boolean69 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        io.swagger.models.Swagger swagger70 = null;
        springMvcApiReader2.swagger = swagger70;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger73 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(parameterList42);
        org.junit.Assert.assertNotNull(responseHeaderArray43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(parameterList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(parameterList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(logAdapter72);
        org.junit.Assert.assertNull(swagger73);
    }

    @Test
    public void test9087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9087");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        java.lang.String str8 = springMvcApiReader2.parseOperationPath("hi!", strMap7);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        io.swagger.models.Swagger swagger15 = springMvcApiReader14.swagger;
        io.swagger.models.Swagger swagger16 = springMvcApiReader14.swagger;
        io.swagger.models.Swagger swagger17 = springMvcApiReader14.swagger;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader20.typesToSkip;
        springMvcApiReader20.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader20.typesToSkip;
        springMvcApiReader14.typesToSkip = typeSet23;
        java.lang.Class<?> wildcardClass25 = springMvcApiReader14.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/hi!" + "'", str8, "/hi!");
        org.junit.Assert.assertNull(swagger15);
        org.junit.Assert.assertNull(swagger16);
        org.junit.Assert.assertNull(swagger17);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test9088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9088");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader2.canReadApi(true, api33);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger36 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader2.parseOperationPath("", strMap38);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(swagger36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test9089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9089");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader7.typesToSkip;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray15 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap16 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray17 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList18 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList18, securityRequirementArray17);
        io.swagger.models.Operation operation20 = null;
        springMvcApiReader7.updateOperation(strArray12, strArray15, strMap16, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList18, operation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader7.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        springMvcApiReader26.LOG = logAdapter33;
        io.swagger.models.Swagger swagger35 = null;
        springMvcApiReader26.swagger = swagger35;
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader39.swagger = swagger40;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type type45 = null;
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList49 = springMvcApiReader44.getParameters(type45, (java.util.List<java.lang.annotation.Annotation>) annotationList47);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray50 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap51 = springMvcApiReader44.parseResponseHeaders(responseHeaderArray50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] { wildcardClass53 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader44.typesToSkip = typeSet55;
        springMvcApiReader39.typesToSkip = typeSet55;
        springMvcApiReader26.typesToSkip = typeSet55;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        io.swagger.models.Swagger swagger61 = null;
        springMvcApiReader2.swagger = swagger61;
        io.swagger.models.Swagger swagger63 = null;
        springMvcApiReader2.swagger = swagger63;
        io.swagger.models.Operation operation65 = null;
        io.swagger.annotations.ApiOperation apiOperation66 = null;
        springMvcApiReader2.updateTagsForOperation(operation65, apiOperation66);
        io.swagger.annotations.Api api69 = null;
        boolean boolean70 = springMvcApiReader2.canReadApi(false, api69);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        java.lang.String str73 = springMvcApiReader2.parseOperationPath("", strMap72);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap74 = null;
        io.swagger.annotations.Api api75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = springMvcApiReader2.updateTagsForApi(strMap74, api75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger4);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(securityRequirementArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(parameterList49);
        org.junit.Assert.assertNotNull(responseHeaderArray50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
    }

    @Test
    public void test9090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9090");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        springMvcApiReader2.swagger = swagger3;
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray10 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap11 = springMvcApiReader9.parseResponseHeaders(responseHeaderArray10);
        io.swagger.models.Swagger swagger12 = springMvcApiReader9.swagger;
        io.swagger.models.Swagger swagger13 = null;
        springMvcApiReader9.swagger = swagger13;
        io.swagger.models.Swagger swagger15 = springMvcApiReader9.swagger;
        io.swagger.models.Operation operation16 = null;
        io.swagger.annotations.ApiOperation apiOperation17 = null;
        springMvcApiReader9.updateTagsForOperation(operation16, apiOperation17);
        io.swagger.models.Operation operation19 = null;
        io.swagger.annotations.ApiOperation apiOperation20 = null;
        springMvcApiReader9.updateTagsForOperation(operation19, apiOperation20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray25 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap26 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        springMvcApiReader24.LOG = logAdapter31;
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.models.Swagger swagger38 = null;
        springMvcApiReader37.swagger = swagger38;
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] { wildcardClass51 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader42.typesToSkip = typeSet53;
        springMvcApiReader37.typesToSkip = typeSet53;
        springMvcApiReader24.typesToSkip = typeSet53;
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type type61 = null;
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader60.getParameters(type61, (java.util.List<java.lang.annotation.Annotation>) annotationList63);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader60.parseResponseHeaders(responseHeaderArray66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        springMvcApiReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.reflect.Type type74 = null;
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList78 = springMvcApiReader73.getParameters(type74, (java.util.List<java.lang.annotation.Annotation>) annotationList76);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray79 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap80 = springMvcApiReader73.parseResponseHeaders(responseHeaderArray79);
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        springMvcApiReader73.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass82);
        io.swagger.models.Swagger swagger84 = springMvcApiReader73.swagger;
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.reflect.Type[] typeArray87 = new java.lang.reflect.Type[] { wildcardClass86 };
        java.util.ArrayList<java.lang.reflect.Type> typeList88 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList88, typeArray87);
        springMvcApiReader73.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        springMvcApiReader60.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        springMvcApiReader9.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(swagger12);
        org.junit.Assert.assertNull(swagger15);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertNotNull(responseHeaderArray66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(parameterList78);
        org.junit.Assert.assertNotNull(responseHeaderArray79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNull(swagger84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test9091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9091");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(true, api17);
        io.swagger.annotations.ApiOperation apiOperation19 = null;
        io.swagger.models.Operation operation20 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation19, operation20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test9092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9092");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray12 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap13 = springMvcApiReader11.parseResponseHeaders(responseHeaderArray12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        boolean boolean22 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList19);
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader11.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet23);
        io.swagger.models.Operation operation25 = null;
        io.swagger.annotations.ApiOperation apiOperation26 = null;
        springMvcApiReader2.updateTagsForOperation(operation25, apiOperation26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        springMvcApiReader2.LOG = logAdapter28;
        io.swagger.annotations.Api api31 = null;
        boolean boolean32 = springMvcApiReader2.canReadApi(true, api31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        springMvcApiReader2.LOG = logAdapter33;
        io.swagger.models.Swagger swagger35 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        springMvcApiReader2.updateTagsForOperation(operation36, apiOperation37);
        io.swagger.models.Operation operation39 = null;
        io.swagger.annotations.ApiResponses apiResponses40 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation39, apiResponses40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(swagger35);
    }

    @Test
    public void test9093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9093");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader7.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader13.typesToSkip;
        springMvcApiReader13.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader13.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList25 = springMvcApiReader20.getParameters(type21, (java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader20.LOG;
        io.swagger.models.Swagger swagger29 = springMvcApiReader20.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        springMvcApiReader20.LOG = logAdapter30;
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        java.lang.String str34 = springMvcApiReader20.parseOperationPath("", strMap33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = springMvcApiReader20.LOG;
        springMvcApiReader20.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader20.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet37;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(typeSet9);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(parameterList25);
        org.junit.Assert.assertNotNull(responseHeaderArray26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(logAdapter28);
        org.junit.Assert.assertNull(swagger29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(logAdapter35);
        org.junit.Assert.assertNotNull(typeSet37);
    }

    @Test
    public void test9094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9094");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        java.util.Set<java.lang.reflect.Type> typeSet16 = null;
        springMvcApiReader10.typesToSkip = typeSet16;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader10.parseOperationPath("/hi!", strMap19);
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader10.typesToSkip;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader24.typesToSkip;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader38.typesToSkip;
        springMvcApiReader24.typesToSkip = typeSet39;
        springMvcApiReader10.setTypesToSkip(typeSet39);
        springMvcApiReader2.setTypesToSkip(typeSet39);
        io.swagger.models.Operation operation43 = null;
        io.swagger.annotations.ApiOperation apiOperation44 = null;
        springMvcApiReader2.updateTagsForOperation(operation43, apiOperation44);
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api48 = null;
        boolean boolean49 = springMvcApiReader2.canReadApi(false, api48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader2.parseOperationPath("", strMap51);
        io.swagger.models.Swagger swagger53 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
        org.junit.Assert.assertNull(typeSet21);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(swagger53);
    }

    @Test
    public void test9095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9095");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        java.lang.String str8 = springMvcApiReader2.parseOperationPath("hi!", strMap7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type type12 = null;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList16 = springMvcApiReader11.getParameters(type12, (java.util.List<java.lang.annotation.Annotation>) annotationList14);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray17 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap18 = springMvcApiReader11.parseResponseHeaders(responseHeaderArray17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        springMvcApiReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = springMvcApiReader11.swagger;
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] { wildcardClass24 };
        java.util.ArrayList<java.lang.reflect.Type> typeList26 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList26, typeArray25);
        springMvcApiReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        java.util.Set<java.lang.reflect.Type> typeSet29 = null;
        springMvcApiReader11.setTypesToSkip(typeSet29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] { wildcardClass42 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader33.typesToSkip = typeSet44;
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader33.typesToSkip;
        springMvcApiReader11.typesToSkip = typeSet47;
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader11.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet49;
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/hi!" + "'", str8, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(parameterList16);
        org.junit.Assert.assertNotNull(responseHeaderArray17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(typeSet52);
    }

    @Test
    public void test9096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9096");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList53 = springMvcApiReader48.getParameters(type49, (java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray54 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        springMvcApiReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        io.swagger.models.Swagger swagger60 = null;
        springMvcApiReader2.swagger = swagger60;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(parameterList53);
        org.junit.Assert.assertNotNull(responseHeaderArray54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test9097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9097");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray28 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap29 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader32.typesToSkip;
        springMvcApiReader32.updateExtensionChain();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList42 = springMvcApiReader37.getParameters(type38, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray43 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        springMvcApiReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray51 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap52 = springMvcApiReader50.parseResponseHeaders(responseHeaderArray51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type type56 = null;
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList60 = springMvcApiReader55.getParameters(type56, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        boolean boolean61 = springMvcApiReader50.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList62 = springMvcApiReader32.getParameters((java.lang.reflect.Type) wildcardClass46, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        boolean boolean63 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader2.swagger = swagger64;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap66 = null;
        io.swagger.annotations.Api api67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap68 = springMvcApiReader2.updateTagsForApi(strMap66, api67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(parameterList42);
        org.junit.Assert.assertNotNull(responseHeaderArray43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(parameterList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(parameterList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test9098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9098");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray22 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap23 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass25, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        springMvcApiReader2.LOG = logAdapter31;
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        io.swagger.models.Swagger swagger36 = null;
        springMvcApiReader2.swagger = swagger36;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNull(typeSet13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(responseHeaderArray22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
    }

    @Test
    public void test9099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9099");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet5 = null;
        springMvcApiReader2.setTypesToSkip(typeSet5);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.util.Set<java.lang.reflect.Type> typeSet10 = springMvcApiReader9.typesToSkip;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray17 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap18 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray19 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList20 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList20, securityRequirementArray19);
        io.swagger.models.Operation operation22 = null;
        springMvcApiReader9.updateOperation(strArray14, strArray17, strMap18, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList20, operation22);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader9.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = springMvcApiReader9.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader9.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet26;
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray44 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap45 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList53 = springMvcApiReader48.getParameters(type49, (java.util.List<java.lang.annotation.Annotation>) annotationList51);
        boolean boolean54 = springMvcApiReader43.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList51);
        boolean boolean55 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type type59 = null;
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader58.getParameters(type59, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray64 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap65 = springMvcApiReader58.parseResponseHeaders(responseHeaderArray64);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader68.parseResponseHeaders(responseHeaderArray69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.reflect.Type type74 = null;
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList78 = springMvcApiReader73.getParameters(type74, (java.util.List<java.lang.annotation.Annotation>) annotationList76);
        boolean boolean79 = springMvcApiReader68.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        boolean boolean80 = springMvcApiReader58.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        boolean boolean81 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader84 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger82, logAdapter83);
        java.lang.reflect.Type type85 = null;
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList89 = springMvcApiReader84.getParameters(type85, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean90 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        springMvcApiReader33.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter92 = null;
        springMvcApiReader33.LOG = logAdapter92;
        java.util.Set<java.lang.reflect.Type> typeSet94 = springMvcApiReader33.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet94;
        java.util.Set<java.lang.reflect.Type> typeSet96 = springMvcApiReader2.typesToSkip;
        java.lang.Class<?> wildcardClass97 = typeSet96.getClass();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(securityRequirementArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNull(logAdapter25);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(parameterList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertNotNull(responseHeaderArray64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(parameterList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(parameterList89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(typeSet94);
        org.junit.Assert.assertNotNull(typeSet96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test9100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9100");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader7.typesToSkip;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray15 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap16 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray17 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList18 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList18, securityRequirementArray17);
        io.swagger.models.Operation operation20 = null;
        springMvcApiReader7.updateOperation(strArray12, strArray15, strMap16, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList18, operation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader7.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        springMvcApiReader26.LOG = logAdapter33;
        io.swagger.models.Swagger swagger35 = null;
        springMvcApiReader26.swagger = swagger35;
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader39.swagger = swagger40;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type type45 = null;
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList49 = springMvcApiReader44.getParameters(type45, (java.util.List<java.lang.annotation.Annotation>) annotationList47);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray50 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap51 = springMvcApiReader44.parseResponseHeaders(responseHeaderArray50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] { wildcardClass53 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader44.typesToSkip = typeSet55;
        springMvcApiReader39.typesToSkip = typeSet55;
        springMvcApiReader26.typesToSkip = typeSet55;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        io.swagger.models.Swagger swagger61 = null;
        springMvcApiReader2.swagger = swagger61;
        io.swagger.models.Swagger swagger63 = null;
        springMvcApiReader2.swagger = swagger63;
        io.swagger.models.Operation operation65 = null;
        io.swagger.annotations.ApiOperation apiOperation66 = null;
        springMvcApiReader2.updateTagsForOperation(operation65, apiOperation66);
        io.swagger.models.Swagger swagger68 = null;
        springMvcApiReader2.swagger = swagger68;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger71 = null;
        springMvcApiReader2.swagger = swagger71;
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger4);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(securityRequirementArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(parameterList49);
        org.junit.Assert.assertNotNull(responseHeaderArray50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(logAdapter70);
    }

    @Test
    public void test9101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9101");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        io.swagger.annotations.Api api18 = null;
        boolean boolean19 = springMvcApiReader2.canReadApi(false, api18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        springMvcApiReader2.LOG = logAdapter20;
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNull(logAdapter25);
    }

    @Test
    public void test9102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9102");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet17;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        io.swagger.models.Swagger swagger35 = springMvcApiReader24.swagger;
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] { wildcardClass37 };
        java.util.ArrayList<java.lang.reflect.Type> typeList39 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList39, typeArray38);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList39);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList39);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader2.canReadApi(true, api44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        springMvcApiReader2.LOG = logAdapter46;
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type type51 = null;
        java.lang.annotation.Annotation[] annotationArray52 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList53 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList53, annotationArray52);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList55 = springMvcApiReader50.getParameters(type51, (java.util.List<java.lang.annotation.Annotation>) annotationList53);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        io.swagger.models.Operation operation57 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList55, strMap56, operation57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNull(swagger35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(annotationArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(parameterList55);
    }

    @Test
    public void test9103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9103");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        boolean boolean24 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader13.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(true, api29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader2.canReadApi(true, api34);
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiResponses apiResponses37 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation36, apiResponses37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test9104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9104");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type type54 = null;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList58 = springMvcApiReader53.getParameters(type54, (java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        io.swagger.models.Swagger swagger60 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList69 = springMvcApiReader64.getParameters(type65, (java.util.List<java.lang.annotation.Annotation>) annotationList67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray70 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader64.parseResponseHeaders(responseHeaderArray70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        springMvcApiReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        io.swagger.models.Swagger swagger75 = springMvcApiReader64.swagger;
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] { wildcardClass77 };
        java.util.ArrayList<java.lang.reflect.Type> typeList79 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList79, typeArray78);
        springMvcApiReader64.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        java.util.Set<java.lang.reflect.Type> typeSet83 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(parameterList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(swagger60);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(parameterList69);
        org.junit.Assert.assertNotNull(responseHeaderArray70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNull(swagger75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(typeSet83);
    }

    @Test
    public void test9105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9105");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList13 = springMvcApiReader8.getParameters(type9, (java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource15 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger16 = springMvcApiReader2.read(springResource15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parameterList13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test9106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9106");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        springMvcApiReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = springMvcApiReader21.swagger;
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] { wildcardClass34 };
        java.util.ArrayList<java.lang.reflect.Type> typeList36 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList36, typeArray35);
        springMvcApiReader21.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList36);
        java.util.Set<java.lang.reflect.Type> typeSet39 = null;
        springMvcApiReader21.setTypesToSkip(typeSet39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList48 = springMvcApiReader43.getParameters(type44, (java.util.List<java.lang.annotation.Annotation>) annotationList46);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray49 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] { wildcardClass52 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet54 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet54, typeArray53);
        springMvcApiReader43.typesToSkip = typeSet54;
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader43.typesToSkip;
        springMvcApiReader21.typesToSkip = typeSet57;
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader21.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet59);
        io.swagger.models.Operation operation61 = null;
        io.swagger.annotations.ApiOperation apiOperation62 = null;
        springMvcApiReader2.updateTagsForOperation(operation61, apiOperation62);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader2.canReadApi(true, api66);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(responseHeaderArray27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(parameterList48);
        org.junit.Assert.assertNotNull(responseHeaderArray49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNull(logAdapter64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test9107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9107");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader2.swagger = swagger20;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        springMvcApiReader2.LOG = logAdapter22;
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test9108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9108");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("", strMap18);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type type23 = null;
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList27 = springMvcApiReader22.getParameters(type23, (java.util.List<java.lang.annotation.Annotation>) annotationList25);
        java.util.Set<java.lang.reflect.Type> typeSet28 = null;
        springMvcApiReader22.typesToSkip = typeSet28;
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList37 = springMvcApiReader32.getParameters(type33, (java.util.List<java.lang.annotation.Annotation>) annotationList35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray46 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap47 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass49 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader40.typesToSkip = typeSet51;
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        java.lang.String str57 = springMvcApiReader32.parseOperationPath("hi!", strMap56);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray58 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap59 = springMvcApiReader32.parseResponseHeaders(responseHeaderArray58);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap60 = springMvcApiReader22.parseResponseHeaders(responseHeaderArray58);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray58);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(parameterList27);
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(parameterList37);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(responseHeaderArray46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNull(strMap61);
    }

    @Test
    public void test9109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9109");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger4 = null;
        springMvcApiReader2.swagger = swagger4;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList13 = springMvcApiReader8.getParameters(type9, (java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation21 = null;
        io.swagger.annotations.ApiOperation apiOperation22 = null;
        springMvcApiReader2.updateTagsForOperation(operation21, apiOperation22);
        java.lang.reflect.Method method24 = null;
        io.swagger.models.Operation operation25 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method24, operation25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parameterList13);
        org.junit.Assert.assertNotNull(responseHeaderArray14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test9110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9110");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader2.parseOperationPath("/hi!", strMap24);
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        springMvcApiReader2.updateTagsForOperation(operation26, apiOperation27);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource29 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger30 = springMvcApiReader2.read(springResource29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
    }

    @Test
    public void test9111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9111");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger58 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader61.typesToSkip;
        springMvcApiReader61.updateExtensionChain();
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type type67 = null;
        java.lang.annotation.Annotation[] annotationArray68 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList69 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList69, annotationArray68);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList71 = springMvcApiReader66.getParameters(type67, (java.util.List<java.lang.annotation.Annotation>) annotationList69);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray72 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap73 = springMvcApiReader66.parseResponseHeaders(responseHeaderArray72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        springMvcApiReader66.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray80 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap81 = springMvcApiReader79.parseResponseHeaders(responseHeaderArray80);
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader84 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger82, logAdapter83);
        java.lang.reflect.Type type85 = null;
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList89 = springMvcApiReader84.getParameters(type85, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean90 = springMvcApiReader79.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList91 = springMvcApiReader61.getParameters((java.lang.reflect.Type) wildcardClass75, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        java.lang.reflect.Type type92 = null;
        java.lang.annotation.Annotation[] annotationArray93 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList94 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean95 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList94, annotationArray93);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList96 = springMvcApiReader61.getParameters(type92, (java.util.List<java.lang.annotation.Annotation>) annotationList94);
        boolean boolean97 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList94);
        java.lang.Class<?> wildcardClass98 = annotationList94.getClass();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(typeSet57);
        org.junit.Assert.assertNull(swagger58);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(annotationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(parameterList71);
        org.junit.Assert.assertNotNull(responseHeaderArray72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(parameterList89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(parameterList91);
        org.junit.Assert.assertNotNull(annotationArray93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(parameterList96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test9112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9112");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray22 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap23 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass25, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        springMvcApiReader2.LOG = logAdapter31;
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader2.parseOperationPath("", strMap37);
        io.swagger.annotations.Api api40 = null;
        boolean boolean41 = springMvcApiReader2.canReadApi(true, api40);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        springMvcApiReader2.LOG = logAdapter44;
        io.swagger.models.Swagger swagger46 = null;
        springMvcApiReader2.swagger = swagger46;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNull(typeSet13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(responseHeaderArray22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(typeSet43);
    }

    @Test
    public void test9113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9113");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("hi!", strMap8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        springMvcApiReader2.LOG = logAdapter10;
        io.swagger.models.Swagger swagger12 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/hi!" + "'", str9, "/hi!");
        org.junit.Assert.assertNull(swagger12);
    }

    @Test
    public void test9114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9114");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api7 = null;
        boolean boolean8 = springMvcApiReader2.canReadApi(true, api7);
        io.swagger.models.Swagger swagger9 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] { wildcardClass34 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader25.typesToSkip = typeSet36;
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader17.parseOperationPath("hi!", strMap41);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray43 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader17.parseResponseHeaders(responseHeaderArray43);
        io.swagger.models.Operation operation45 = null;
        io.swagger.annotations.ApiOperation apiOperation46 = null;
        springMvcApiReader17.updateTagsForOperation(operation45, apiOperation46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type type51 = null;
        java.lang.annotation.Annotation[] annotationArray52 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList53 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList53, annotationArray52);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList55 = springMvcApiReader50.getParameters(type51, (java.util.List<java.lang.annotation.Annotation>) annotationList53);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray56 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap57 = springMvcApiReader50.parseResponseHeaders(responseHeaderArray56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = springMvcApiReader50.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader50.getTypesToSkip();
        springMvcApiReader17.setTypesToSkip(typeSet59);
        springMvcApiReader2.typesToSkip = typeSet59;
        io.swagger.annotations.Api api63 = null;
        boolean boolean64 = springMvcApiReader2.canReadApi(false, api63);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(swagger9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/hi!" + "'", str42, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(annotationArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(parameterList55);
        org.junit.Assert.assertNotNull(responseHeaderArray56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(logAdapter58);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test9115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9115");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList41 = springMvcApiReader36.getParameters(type37, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean42 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean43 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type type62 = null;
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList66 = springMvcApiReader61.getParameters(type62, (java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean67 = springMvcApiReader56.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean68 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean69 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader21.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet70;
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader74.typesToSkip;
        java.lang.String[] strArray79 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray82 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap83 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray84 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList85 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList85, securityRequirementArray84);
        io.swagger.models.Operation operation87 = null;
        springMvcApiReader74.updateOperation(strArray79, strArray82, strMap83, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList85, operation87);
        java.lang.Class<?> wildcardClass89 = strArray79.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet92 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet93 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(responseHeaderArray27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(parameterList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(parameterList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(securityRequirementArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(typeSet93);
    }

    @Test
    public void test9116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9116");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader2.parseOperationPath("hi!", strMap21);
        io.swagger.models.Operation operation23 = null;
        io.swagger.annotations.ApiOperation apiOperation24 = null;
        springMvcApiReader2.updateTagsForOperation(operation23, apiOperation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        io.swagger.annotations.Api api30 = null;
        boolean boolean31 = springMvcApiReader2.canReadApi(false, api30);
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet34 = springMvcApiReader2.extractTags(api33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/hi!" + "'", str22, "/hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(swagger32);
    }

    @Test
    public void test9117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9117");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList41 = springMvcApiReader36.getParameters(type37, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean42 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean43 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type type62 = null;
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList66 = springMvcApiReader61.getParameters(type62, (java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean67 = springMvcApiReader56.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean68 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean69 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader21.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet70;
        io.swagger.annotations.Api api73 = null;
        boolean boolean74 = springMvcApiReader2.canReadApi(true, api73);
        io.swagger.models.Swagger swagger75 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation76 = null;
        io.swagger.annotations.ApiOperation apiOperation77 = null;
        springMvcApiReader2.updateTagsForOperation(operation76, apiOperation77);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(responseHeaderArray27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(parameterList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(parameterList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(swagger75);
    }

    @Test
    public void test9118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9118");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        java.lang.String str8 = springMvcApiReader2.parseOperationPath("hi!", strMap7);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        java.lang.String str15 = springMvcApiReader2.parseOperationPath("hi!", strMap14);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/hi!" + "'", str8, "/hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "/hi!" + "'", str15, "/hi!");
    }

    @Test
    public void test9119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9119");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(true, api8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader12.swagger = swagger27;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        boolean boolean33 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.Api api35 = null;
        boolean boolean36 = springMvcApiReader2.canReadApi(false, api35);
        io.swagger.annotations.Api api37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList38 = springMvcApiReader2.getSecurityRequirements(api37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test9120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9120");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet5 = null;
        springMvcApiReader2.setTypesToSkip(typeSet5);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader12.swagger = swagger27;
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader31.typesToSkip;
        springMvcApiReader31.updateExtensionChain();
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList41 = springMvcApiReader36.getParameters(type37, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader36.parseResponseHeaders(responseHeaderArray42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        springMvcApiReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type type51 = null;
        java.lang.annotation.Annotation[] annotationArray52 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList53 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList53, annotationArray52);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList55 = springMvcApiReader50.getParameters(type51, (java.util.List<java.lang.annotation.Annotation>) annotationList53);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList56 = springMvcApiReader12.getParameters((java.lang.reflect.Type) wildcardClass45, (java.util.List<java.lang.annotation.Annotation>) annotationList53);
        boolean boolean57 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList53);
        io.swagger.models.Swagger swagger58 = null;
        springMvcApiReader2.swagger = swagger58;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation63 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "/hi!", operation63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(parameterList41);
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(annotationArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(parameterList55);
        org.junit.Assert.assertNotNull(parameterList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test9121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9121");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray10 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap11 = springMvcApiReader9.parseResponseHeaders(responseHeaderArray10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        springMvcApiReader9.LOG = logAdapter16;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        boolean boolean31 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader20.getTypesToSkip();
        springMvcApiReader9.setTypesToSkip(typeSet32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader9.typesToSkip;
        io.swagger.models.Operation operation35 = null;
        io.swagger.annotations.ApiOperation apiOperation36 = null;
        springMvcApiReader9.updateTagsForOperation(operation35, apiOperation36);
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader9.canReadApi(false, api39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader43.typesToSkip;
        springMvcApiReader43.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader43.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader43.typesToSkip;
        springMvcApiReader9.typesToSkip = typeSet47;
        springMvcApiReader2.typesToSkip = typeSet47;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNull(logAdapter50);
    }

    @Test
    public void test9122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9122");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader21.typesToSkip = typeSet27;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader21.parseOperationPath("/hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] { wildcardClass51 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader42.typesToSkip = typeSet53;
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader34.parseOperationPath("hi!", strMap58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray60);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader2.canReadApi(false, api65);
        java.util.Set<java.lang.reflect.Type> typeSet67 = null;
        springMvcApiReader2.setTypesToSkip(typeSet67);
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.ApiOperation apiOperation70 = null;
        io.swagger.models.Operation operation71 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation70, operation71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(typeSet69);
    }

    @Test
    public void test9123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9123");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        io.swagger.models.Swagger swagger45 = null;
        springMvcApiReader2.swagger = swagger45;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        springMvcApiReader2.LOG = logAdapter47;
        io.swagger.annotations.Api api50 = null;
        boolean boolean51 = springMvcApiReader2.canReadApi(true, api50);
        java.lang.reflect.Method method52 = null;
        io.swagger.models.Operation operation53 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method52, operation53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test9124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9124");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        java.lang.String str23 = springMvcApiReader2.parseOperationPath("/hi!", strMap22);
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        java.lang.String str29 = springMvcApiReader2.parseOperationPath("/hi!", strMap28);
        io.swagger.models.Operation operation30 = null;
        io.swagger.annotations.ApiOperation apiOperation31 = null;
        springMvcApiReader2.updateTagsForOperation(operation30, apiOperation31);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/hi!" + "'", str23, "/hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "/hi!" + "'", str29, "/hi!");
    }

    @Test
    public void test9125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9125");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray28 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap29 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader32.typesToSkip;
        springMvcApiReader32.updateExtensionChain();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList42 = springMvcApiReader37.getParameters(type38, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray43 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        springMvcApiReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray51 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap52 = springMvcApiReader50.parseResponseHeaders(responseHeaderArray51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type type56 = null;
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList60 = springMvcApiReader55.getParameters(type56, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        boolean boolean61 = springMvcApiReader50.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList62 = springMvcApiReader32.getParameters((java.lang.reflect.Type) wildcardClass46, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        boolean boolean63 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger65 = null;
        springMvcApiReader2.swagger = swagger65;
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type type70 = null;
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList74 = springMvcApiReader69.getParameters(type70, (java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray75 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap76 = springMvcApiReader69.parseResponseHeaders(responseHeaderArray75);
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        springMvcApiReader69.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass78);
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader69.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader69.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet81);
        io.swagger.models.Swagger swagger83 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api86 = null;
        boolean boolean87 = springMvcApiReader2.canReadApi(true, api86);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(parameterList42);
        org.junit.Assert.assertNotNull(responseHeaderArray43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(parameterList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(parameterList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(parameterList74);
        org.junit.Assert.assertNotNull(responseHeaderArray75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNull(swagger83);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test9126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9126");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(false, api17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        java.lang.String str21 = springMvcApiReader2.parseOperationPath("/hi!", strMap20);
        io.swagger.models.Swagger swagger22 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet24 = springMvcApiReader2.extractTags(api23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/hi!" + "'", str21, "/hi!");
        org.junit.Assert.assertNull(swagger22);
    }

    @Test
    public void test9127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9127");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type type23 = null;
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList27 = springMvcApiReader22.getParameters(type23, (java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray28 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap29 = springMvcApiReader22.parseResponseHeaders(responseHeaderArray28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] { wildcardClass31 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader22.typesToSkip = typeSet33;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        springMvcApiReader22.LOG = logAdapter36;
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.Class<?> wildcardClass41 = springMvcApiReader40.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        java.lang.Class<?> wildcardClass43 = springMvcApiReader22.getClass();
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray47);
        io.swagger.models.Swagger swagger49 = null;
        springMvcApiReader46.swagger = swagger49;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader46.LOG;
        springMvcApiReader46.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        springMvcApiReader46.LOG = logAdapter53;
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader46.typesToSkip;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        io.swagger.annotations.Api api60 = null;
        boolean boolean61 = springMvcApiReader58.canReadApi(false, api60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList69 = springMvcApiReader64.getParameters(type65, (java.util.List<java.lang.annotation.Annotation>) annotationList67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray70 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader64.parseResponseHeaders(responseHeaderArray70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        springMvcApiReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader64.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        springMvcApiReader64.LOG = logAdapter76;
        java.lang.Class<?> wildcardClass78 = springMvcApiReader64.getClass();
        java.lang.annotation.Annotation[] annotationArray79 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList80 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList80, annotationArray79);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList82 = springMvcApiReader58.getParameters((java.lang.reflect.Type) wildcardClass78, (java.util.List<java.lang.annotation.Annotation>) annotationList80);
        boolean boolean83 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList84 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass43, (java.util.List<java.lang.annotation.Annotation>) annotationList80);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        springMvcApiReader2.LOG = logAdapter85;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(parameterList27);
        org.junit.Assert.assertNotNull(responseHeaderArray28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(parameterList69);
        org.junit.Assert.assertNotNull(responseHeaderArray70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(annotationArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(parameterList82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(parameterList84);
    }

    @Test
    public void test9128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9128");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        springMvcApiReader2.LOG = logAdapter10;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        springMvcApiReader2.LOG = logAdapter12;
        io.swagger.annotations.Api api15 = null;
        boolean boolean16 = springMvcApiReader2.canReadApi(true, api15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray20 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap21 = springMvcApiReader19.parseResponseHeaders(responseHeaderArray20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader19.swagger = swagger22;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader19.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader19.parseOperationPath("", strMap26);
        io.swagger.models.Swagger swagger28 = springMvcApiReader19.swagger;
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader31.typesToSkip;
        java.lang.String[] strArray36 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray39 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap40 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray41 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList42 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList42, securityRequirementArray41);
        io.swagger.models.Operation operation44 = null;
        springMvcApiReader31.updateOperation(strArray36, strArray39, strMap40, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList42, operation44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader31.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        springMvcApiReader31.swagger = swagger49;
        java.lang.Class<?> wildcardClass51 = springMvcApiReader31.getClass();
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader54.typesToSkip;
        springMvcApiReader54.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader54.typesToSkip;
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type type61 = null;
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader60.getParameters(type61, (java.util.List<java.lang.annotation.Annotation>) annotationList63);
        boolean boolean66 = springMvcApiReader54.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList67 = springMvcApiReader19.getParameters((java.lang.reflect.Type) wildcardClass51, (java.util.List<java.lang.annotation.Annotation>) annotationList63);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(swagger28);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(securityRequirementArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(parameterList67);
    }

    @Test
    public void test9129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9129");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        springMvcApiReader2.swagger = swagger3;
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        springMvcApiReader2.swagger = swagger7;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type type12 = null;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList16 = springMvcApiReader11.getParameters(type12, (java.util.List<java.lang.annotation.Annotation>) annotationList14);
        java.util.Set<java.lang.reflect.Type> typeSet17 = null;
        springMvcApiReader11.typesToSkip = typeSet17;
        springMvcApiReader11.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader11.parseOperationPath("/hi!", strMap21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        springMvcApiReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader38.getParameters(type39, (java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray44 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap45 = springMvcApiReader38.parseResponseHeaders(responseHeaderArray44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader38.swagger;
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] { wildcardClass51 };
        java.util.ArrayList<java.lang.reflect.Type> typeList53 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList53, typeArray52);
        springMvcApiReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList53);
        springMvcApiReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList53);
        springMvcApiReader25.updateExtensionChain();
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type type61 = null;
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader60.getParameters(type61, (java.util.List<java.lang.annotation.Annotation>) annotationList63);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader60.parseResponseHeaders(responseHeaderArray66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        springMvcApiReader60.LOG = logAdapter68;
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type type73 = null;
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList77 = springMvcApiReader72.getParameters(type73, (java.util.List<java.lang.annotation.Annotation>) annotationList75);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray78 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap79 = springMvcApiReader72.parseResponseHeaders(responseHeaderArray78);
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        springMvcApiReader72.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        io.swagger.models.Swagger swagger83 = springMvcApiReader72.swagger;
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.reflect.Type[] typeArray86 = new java.lang.reflect.Type[] { wildcardClass85 };
        java.util.ArrayList<java.lang.reflect.Type> typeList87 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList87, typeArray86);
        springMvcApiReader72.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        springMvcApiReader60.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        springMvcApiReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        springMvcApiReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter94 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(parameterList16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/hi!" + "'", str22, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(responseHeaderArray44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNull(swagger49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertNotNull(responseHeaderArray66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(parameterList77);
        org.junit.Assert.assertNotNull(responseHeaderArray78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNull(swagger83);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(logAdapter94);
    }

    @Test
    public void test9130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9130");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = null;
        springMvcApiReader2.swagger = swagger6;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type type14 = null;
        java.lang.annotation.Annotation[] annotationArray15 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList16 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList16, annotationArray15);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList18 = springMvcApiReader13.getParameters(type14, (java.util.List<java.lang.annotation.Annotation>) annotationList16);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] { wildcardClass30 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader21.typesToSkip = typeSet32;
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader13.parseOperationPath("hi!", strMap37);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass10, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.annotations.Api api45 = null;
        boolean boolean46 = springMvcApiReader2.canReadApi(true, api45);
        io.swagger.models.Swagger swagger47 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap49 = null;
        io.swagger.annotations.Api api50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap51 = springMvcApiReader2.updateTagsForApi(strMap49, api50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(parameterList18);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(responseHeaderArray27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(swagger47);
        org.junit.Assert.assertNotNull(typeSet48);
    }

    @Test
    public void test9131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9131");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger19 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.annotations.Api api21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap22 = springMvcApiReader2.updateTagsForApi(strMap20, api21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNull(swagger19);
    }

    @Test
    public void test9132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9132");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray9 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap10 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray9);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader8.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader15.typesToSkip;
        springMvcApiReader15.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader15.typesToSkip;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader21.typesToSkip;
        java.lang.String[] strArray26 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray29 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap30 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray31 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList32 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList32, securityRequirementArray31);
        io.swagger.models.Operation operation34 = null;
        springMvcApiReader21.updateOperation(strArray26, strArray29, strMap30, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList32, operation34);
        io.swagger.models.Swagger swagger36 = null;
        springMvcApiReader21.swagger = swagger36;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        boolean boolean41 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean42 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean43 = springMvcApiReader8.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean44 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(securityRequirementArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter45);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeSet47);
    }

    @Test
    public void test9133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9133");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        boolean boolean24 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader13.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        java.lang.String[] strArray28 = null;
        java.lang.String[] strArray29 = null;
        io.swagger.models.Operation operation30 = null;
        java.lang.String[] strArray31 = springMvcApiReader2.updateOperationConsumes(strArray28, strArray29, operation30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader35.typesToSkip;
        springMvcApiReader35.updateExtensionChain();
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray46 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap47 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        springMvcApiReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray54 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader53.parseResponseHeaders(responseHeaderArray54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type type59 = null;
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader58.getParameters(type59, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean64 = springMvcApiReader53.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader35.getParameters((java.lang.reflect.Type) wildcardClass49, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        springMvcApiReader35.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader35.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet67);
        io.swagger.models.Operation operation69 = null;
        io.swagger.annotations.ApiOperation apiOperation70 = null;
        springMvcApiReader2.updateTagsForOperation(operation69, apiOperation70);
        io.swagger.annotations.Api api73 = null;
        boolean boolean74 = springMvcApiReader2.canReadApi(true, api73);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        java.lang.String str77 = springMvcApiReader2.parseOperationPath("/hi!", strMap76);
        io.swagger.models.Swagger swagger78 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNull(strArray31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(responseHeaderArray46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "/hi!" + "'", str77, "/hi!");
        org.junit.Assert.assertNull(swagger78);
    }

    @Test
    public void test9134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9134");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        springMvcApiReader2.LOG = logAdapter19;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList37 = springMvcApiReader32.getParameters(type33, (java.util.List<java.lang.annotation.Annotation>) annotationList35);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader32.parseResponseHeaders(responseHeaderArray38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] { wildcardClass41 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader32.typesToSkip = typeSet43;
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader24.parseOperationPath("hi!", strMap48);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray50 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap51 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray50);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader54.typesToSkip;
        springMvcApiReader54.updateExtensionChain();
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type type60 = null;
        java.lang.annotation.Annotation[] annotationArray61 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList62 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList62, annotationArray61);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList64 = springMvcApiReader59.getParameters(type60, (java.util.List<java.lang.annotation.Annotation>) annotationList62);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray65 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap66 = springMvcApiReader59.parseResponseHeaders(responseHeaderArray65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        springMvcApiReader59.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader72.parseResponseHeaders(responseHeaderArray73);
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader77 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger75, logAdapter76);
        java.lang.reflect.Type type78 = null;
        java.lang.annotation.Annotation[] annotationArray79 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList80 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList80, annotationArray79);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList82 = springMvcApiReader77.getParameters(type78, (java.util.List<java.lang.annotation.Annotation>) annotationList80);
        boolean boolean83 = springMvcApiReader72.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList84 = springMvcApiReader54.getParameters((java.lang.reflect.Type) wildcardClass68, (java.util.List<java.lang.annotation.Annotation>) annotationList80);
        boolean boolean85 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        boolean boolean86 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList89 = springMvcApiReader2.getSecurityRequirements(api88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNull(logAdapter21);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(parameterList37);
        org.junit.Assert.assertNotNull(responseHeaderArray38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/hi!" + "'", str49, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(annotationArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(parameterList64);
        org.junit.Assert.assertNotNull(responseHeaderArray65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(annotationArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(parameterList82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(parameterList84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test9135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9135");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("/hi!", strMap12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray17 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap18 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        boolean boolean27 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList24);
        boolean boolean28 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList24);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        io.swagger.annotations.Api api36 = null;
        boolean boolean37 = springMvcApiReader2.canReadApi(true, api36);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/hi!" + "'", str13, "/hi!");
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test9136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9136");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api19 = null;
        boolean boolean20 = springMvcApiReader2.canReadApi(false, api19);
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeSet21);
    }

    @Test
    public void test9137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9137");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet10 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type type14 = null;
        java.lang.annotation.Annotation[] annotationArray15 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList16 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList16, annotationArray15);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList18 = springMvcApiReader13.getParameters(type14, (java.util.List<java.lang.annotation.Annotation>) annotationList16);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] { wildcardClass30 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader21.typesToSkip = typeSet32;
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader13.parseOperationPath("hi!", strMap37);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader13.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader13.parseOperationPath("hi!", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader49.typesToSkip;
        springMvcApiReader49.updateExtensionChain();
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type type55 = null;
        java.lang.annotation.Annotation[] annotationArray56 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList57 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList57, annotationArray56);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList59 = springMvcApiReader54.getParameters(type55, (java.util.List<java.lang.annotation.Annotation>) annotationList57);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader54.parseResponseHeaders(responseHeaderArray60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        springMvcApiReader54.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        springMvcApiReader49.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        springMvcApiReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader13.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader13.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet68;
        io.swagger.models.Swagger swagger70 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource72 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger73 = springMvcApiReader2.read(springResource72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(typeSet9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(parameterList18);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(responseHeaderArray27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(annotationArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(parameterList59);
        org.junit.Assert.assertNotNull(responseHeaderArray60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNull(swagger70);
    }

    @Test
    public void test9138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9138");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        springMvcApiReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = springMvcApiReader21.swagger;
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] { wildcardClass34 };
        java.util.ArrayList<java.lang.reflect.Type> typeList36 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList36, typeArray35);
        springMvcApiReader21.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList36);
        java.util.Set<java.lang.reflect.Type> typeSet39 = null;
        springMvcApiReader21.setTypesToSkip(typeSet39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList48 = springMvcApiReader43.getParameters(type44, (java.util.List<java.lang.annotation.Annotation>) annotationList46);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray49 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] { wildcardClass52 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet54 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet54, typeArray53);
        springMvcApiReader43.typesToSkip = typeSet54;
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader43.typesToSkip;
        springMvcApiReader21.typesToSkip = typeSet57;
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader21.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet59);
        io.swagger.models.Operation operation61 = null;
        io.swagger.annotations.ApiOperation apiOperation62 = null;
        springMvcApiReader2.updateTagsForOperation(operation61, apiOperation62);
        io.swagger.models.Operation operation66 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "hi!", operation66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(responseHeaderArray27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(parameterList48);
        org.junit.Assert.assertNotNull(responseHeaderArray49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(typeSet59);
    }

    @Test
    public void test9139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9139");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.annotations.Api api11 = null;
        boolean boolean12 = springMvcApiReader2.canReadApi(true, api11);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        java.lang.String str15 = springMvcApiReader2.parseOperationPath("/hi!", strMap14);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "/hi!" + "'", str15, "/hi!");
    }

    @Test
    public void test9140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9140");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        io.swagger.models.Swagger swagger9 = springMvcApiReader8.swagger;
        io.swagger.models.Swagger swagger10 = springMvcApiReader8.swagger;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader13.typesToSkip;
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray21 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap22 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray23 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList24 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList24, securityRequirementArray23);
        io.swagger.models.Operation operation26 = null;
        springMvcApiReader13.updateOperation(strArray18, strArray21, strMap22, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList24, operation26);
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader13.typesToSkip;
        springMvcApiReader8.setTypesToSkip(typeSet28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader32.parseResponseHeaders(responseHeaderArray33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        springMvcApiReader32.LOG = logAdapter39;
        io.swagger.models.Swagger swagger41 = null;
        springMvcApiReader32.swagger = swagger41;
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        io.swagger.models.Swagger swagger46 = null;
        springMvcApiReader45.swagger = swagger46;
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type type51 = null;
        java.lang.annotation.Annotation[] annotationArray52 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList53 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList53, annotationArray52);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList55 = springMvcApiReader50.getParameters(type51, (java.util.List<java.lang.annotation.Annotation>) annotationList53);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray56 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap57 = springMvcApiReader50.parseResponseHeaders(responseHeaderArray56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] { wildcardClass59 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet61 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet61, typeArray60);
        springMvcApiReader50.typesToSkip = typeSet61;
        springMvcApiReader45.typesToSkip = typeSet61;
        springMvcApiReader32.typesToSkip = typeSet61;
        springMvcApiReader8.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet61);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type type70 = null;
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList74 = springMvcApiReader69.getParameters(type70, (java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray75 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap76 = springMvcApiReader69.parseResponseHeaders(responseHeaderArray75);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray75);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap78 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray75);
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation80 = null;
        io.swagger.annotations.ApiResponses apiResponses81 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation80, apiResponses81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNull(swagger9);
        org.junit.Assert.assertNull(swagger10);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(securityRequirementArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(parameterList55);
        org.junit.Assert.assertNotNull(responseHeaderArray56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(parameterList74);
        org.junit.Assert.assertNotNull(responseHeaderArray75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(typeSet79);
    }

    @Test
    public void test9141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9141");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation4 = null;
        io.swagger.annotations.ApiOperation apiOperation5 = null;
        springMvcApiReader2.updateTagsForOperation(operation4, apiOperation5);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        io.swagger.models.Swagger swagger10 = springMvcApiReader9.swagger;
        io.swagger.models.Swagger swagger11 = springMvcApiReader9.swagger;
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader14.typesToSkip;
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray22 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap23 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray24 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList25 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList25, securityRequirementArray24);
        io.swagger.models.Operation operation27 = null;
        springMvcApiReader14.updateOperation(strArray19, strArray22, strMap23, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList25, operation27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader14.typesToSkip;
        springMvcApiReader9.setTypesToSkip(typeSet29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader33.typesToSkip;
        springMvcApiReader33.updateExtensionChain();
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader38.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader38.getTypesToSkip();
        springMvcApiReader33.setTypesToSkip(typeSet40);
        springMvcApiReader9.setTypesToSkip(typeSet40);
        springMvcApiReader2.typesToSkip = typeSet40;
        springMvcApiReader2.updateExtensionChain();
        java.lang.reflect.Method method45 = null;
        io.swagger.models.Operation operation46 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method45, operation46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger10);
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(securityRequirementArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(typeSet40);
    }

    @Test
    public void test9142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9142");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        springMvcApiReader25.LOG = logAdapter32;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray37 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap38 = springMvcApiReader36.parseResponseHeaders(responseHeaderArray37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type type42 = null;
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader41.getParameters(type42, (java.util.List<java.lang.annotation.Annotation>) annotationList44);
        boolean boolean47 = springMvcApiReader36.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList44);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader36.getTypesToSkip();
        springMvcApiReader25.setTypesToSkip(typeSet48);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = springMvcApiReader25.LOG;
        java.lang.String[] strArray51 = null;
        java.lang.String[] strArray52 = null;
        io.swagger.models.Operation operation53 = null;
        java.lang.String[] strArray54 = springMvcApiReader25.updateOperationConsumes(strArray51, strArray52, operation53);
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader25.getTypesToSkip();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        springMvcApiReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type type62 = null;
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList66 = springMvcApiReader61.getParameters(type62, (java.util.List<java.lang.annotation.Annotation>) annotationList64);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray67 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap68 = springMvcApiReader61.parseResponseHeaders(responseHeaderArray67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray72 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap73 = springMvcApiReader71.parseResponseHeaders(responseHeaderArray72);
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        java.lang.reflect.Type type77 = null;
        java.lang.annotation.Annotation[] annotationArray78 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList79 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList79, annotationArray78);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList81 = springMvcApiReader76.getParameters(type77, (java.util.List<java.lang.annotation.Annotation>) annotationList79);
        boolean boolean82 = springMvcApiReader71.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        boolean boolean83 = springMvcApiReader61.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        boolean boolean84 = springMvcApiReader25.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        boolean boolean85 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        io.swagger.models.Swagger swagger86 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api88 = null;
        boolean boolean89 = springMvcApiReader2.canReadApi(true, api88);
        java.util.Map<java.lang.String, java.lang.String> strMap91 = null;
        java.lang.String str92 = springMvcApiReader2.parseOperationPath("/hi!", strMap91);
        io.swagger.annotations.Api api94 = null;
        boolean boolean95 = springMvcApiReader2.canReadApi(false, api94);
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNull(logAdapter50);
        org.junit.Assert.assertNull(strArray54);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(parameterList66);
        org.junit.Assert.assertNotNull(responseHeaderArray67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(annotationArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(parameterList81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(swagger86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "/hi!" + "'", str92, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test9143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9143");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray31);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray31);
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader2.swagger = swagger34;
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet38 = springMvcApiReader2.extractTags(api37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(typeSet36);
    }

    @Test
    public void test9144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9144");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(true, api8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader13.typesToSkip;
        springMvcApiReader13.updateExtensionChain();
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray24 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap25 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList41 = springMvcApiReader36.getParameters(type37, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean42 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader13.getParameters((java.lang.reflect.Type) wildcardClass27, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        java.lang.reflect.Type type44 = null;
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList48 = springMvcApiReader13.getParameters(type44, (java.util.List<java.lang.annotation.Annotation>) annotationList46);
        boolean boolean49 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList46);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger51 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(logAdapter10);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertNotNull(responseHeaderArray24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(parameterList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(parameterList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNull(swagger51);
    }

    @Test
    public void test9145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9145");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type type16 = null;
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList20 = springMvcApiReader15.getParameters(type16, (java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = springMvcApiReader23.getParameters(type24, (java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] { wildcardClass32 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader23.typesToSkip = typeSet34;
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader15.parseOperationPath("hi!", strMap39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray41);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray41);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger45 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader2.parseOperationPath("/hi!", strMap51);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader2.parseOperationPath("", strMap55);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap57 = null;
        io.swagger.annotations.Api api58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap59 = springMvcApiReader2.updateTagsForApi(strMap57, api58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(parameterList20);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(parameterList28);
        org.junit.Assert.assertNotNull(responseHeaderArray29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(typeSet44);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertNull(typeSet46);
        org.junit.Assert.assertNull(logAdapter49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
    }

    @Test
    public void test9146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9146");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type type36 = null;
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList40 = springMvcApiReader35.getParameters(type36, (java.util.List<java.lang.annotation.Annotation>) annotationList38);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader35.parseResponseHeaders(responseHeaderArray41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass44 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader35.typesToSkip = typeSet46;
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader27.parseOperationPath("hi!", strMap51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray53 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray53);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger57 = null;
        springMvcApiReader2.swagger = swagger57;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        java.lang.Class<?> wildcardClass61 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(parameterList40);
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(logAdapter56);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test9147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9147");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        java.lang.String str23 = springMvcApiReader2.parseOperationPath("/hi!", strMap22);
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api36 = null;
        boolean boolean37 = springMvcApiReader2.canReadApi(false, api36);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/hi!" + "'", str23, "/hi!");
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNull(logAdapter32);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test9148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9148");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader12.typesToSkip;
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader12.updateTagsForOperation(operation28, apiOperation29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        springMvcApiReader12.LOG = logAdapter31;
        java.lang.Class<?> wildcardClass33 = springMvcApiReader12.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        io.swagger.models.Operation operation35 = null;
        io.swagger.annotations.ApiOperation apiOperation36 = null;
        springMvcApiReader2.updateTagsForOperation(operation35, apiOperation36);
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader2.canReadApi(false, api39);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api43 = null;
        boolean boolean44 = springMvcApiReader2.canReadApi(false, api43);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test9149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9149");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader47.typesToSkip;
        springMvcApiReader47.updateExtensionChain();
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.reflect.Type type53 = null;
        java.lang.annotation.Annotation[] annotationArray54 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList55 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList55, annotationArray54);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList57 = springMvcApiReader52.getParameters(type53, (java.util.List<java.lang.annotation.Annotation>) annotationList55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray58 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap59 = springMvcApiReader52.parseResponseHeaders(responseHeaderArray58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        springMvcApiReader52.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader65.parseResponseHeaders(responseHeaderArray66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type type71 = null;
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList75 = springMvcApiReader70.getParameters(type71, (java.util.List<java.lang.annotation.Annotation>) annotationList73);
        boolean boolean76 = springMvcApiReader65.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList77 = springMvcApiReader47.getParameters((java.lang.reflect.Type) wildcardClass61, (java.util.List<java.lang.annotation.Annotation>) annotationList73);
        boolean boolean78 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        java.util.Map<java.lang.String, java.lang.String> strMap80 = null;
        java.lang.String str81 = springMvcApiReader2.parseOperationPath("", strMap80);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = null;
        java.lang.String str85 = springMvcApiReader2.parseOperationPath("hi!", strMap84);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(annotationArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(parameterList57);
        org.junit.Assert.assertNotNull(responseHeaderArray58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(parameterList75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(parameterList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "/hi!" + "'", str85, "/hi!");
    }

    @Test
    public void test9150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9150");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet4 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        springMvcApiReader2.LOG = logAdapter7;
        io.swagger.annotations.Api api10 = null;
        boolean boolean11 = springMvcApiReader2.canReadApi(false, api10);
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet4);
        org.junit.Assert.assertNull(logAdapter5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test9151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9151");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader2.parseOperationPath("hi!", strMap19);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = springMvcApiReader23.getParameters(type24, (java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray34 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap35 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader38.getParameters(type39, (java.util.List<java.lang.annotation.Annotation>) annotationList41);
        boolean boolean44 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList41);
        boolean boolean45 = springMvcApiReader23.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList53 = springMvcApiReader48.getParameters(type49, (java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type type57 = null;
        java.lang.annotation.Annotation[] annotationArray58 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList59 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList59, annotationArray58);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList61 = springMvcApiReader56.getParameters(type57, (java.util.List<java.lang.annotation.Annotation>) annotationList59);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray62 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] { wildcardClass65 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet67 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet67, typeArray66);
        springMvcApiReader56.typesToSkip = typeSet67;
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet67);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        java.lang.String str73 = springMvcApiReader48.parseOperationPath("hi!", strMap72);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray74 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray74);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap76 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray74);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray74);
        io.swagger.models.Swagger swagger78 = null;
        springMvcApiReader2.swagger = swagger78;
        java.util.Map<java.lang.String, java.lang.String> strMap81 = null;
        java.lang.String str82 = springMvcApiReader2.parseOperationPath("hi!", strMap81);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNull(swagger17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(parameterList28);
        org.junit.Assert.assertNotNull(responseHeaderArray29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(parameterList53);
        org.junit.Assert.assertNotNull(annotationArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(parameterList61);
        org.junit.Assert.assertNotNull(responseHeaderArray62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/hi!" + "'", str73, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "/hi!" + "'", str82, "/hi!");
    }

    @Test
    public void test9152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9152");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(false, api17);
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        java.lang.String str21 = springMvcApiReader2.parseOperationPath("/hi!", strMap20);
        io.swagger.models.Swagger swagger22 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader2.parseOperationPath("/hi!", strMap24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/hi!" + "'", str21, "/hi!");
        org.junit.Assert.assertNull(swagger22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertNotNull(typeSet26);
    }

    @Test
    public void test9153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9153");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader21.typesToSkip = typeSet27;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader21.parseOperationPath("/hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] { wildcardClass51 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader42.typesToSkip = typeSet53;
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader34.parseOperationPath("hi!", strMap58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray60);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader2.canReadApi(false, api65);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger69 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        java.lang.String str73 = springMvcApiReader2.parseOperationPath("", strMap72);
        io.swagger.annotations.Api api75 = null;
        boolean boolean76 = springMvcApiReader2.canReadApi(true, api75);
        io.swagger.annotations.Api api77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet78 = springMvcApiReader2.extractTags(api77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNull(swagger69);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test9154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9154");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader23.typesToSkip;
        springMvcApiReader23.updateExtensionChain();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader23.setTypesToSkip(typeSet30);
        springMvcApiReader2.setTypesToSkip(typeSet30);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader2.canReadApi(false, api34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger37 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNull(swagger37);
    }

    @Test
    public void test9155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9155");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation61 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "hi!", operation61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(logAdapter57);
    }

    @Test
    public void test9156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9156");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.lang.reflect.Type type7 = null;
        java.lang.annotation.Annotation[] annotationArray8 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList9 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList9, annotationArray8);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList11 = springMvcApiReader6.getParameters(type7, (java.util.List<java.lang.annotation.Annotation>) annotationList9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type type15 = null;
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList19 = springMvcApiReader14.getParameters(type15, (java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray20 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap21 = springMvcApiReader14.parseResponseHeaders(responseHeaderArray20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] { wildcardClass23 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader14.typesToSkip = typeSet25;
        springMvcApiReader6.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader6.parseOperationPath("hi!", strMap30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader6.parseResponseHeaders(responseHeaderArray32);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray32);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList42 = springMvcApiReader37.getParameters(type38, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray43 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = springMvcApiReader37.LOG;
        io.swagger.models.Swagger swagger46 = springMvcApiReader37.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader37.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet47;
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader51.parseResponseHeaders(responseHeaderArray52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type type57 = null;
        java.lang.annotation.Annotation[] annotationArray58 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList59 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList59, annotationArray58);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList61 = springMvcApiReader56.getParameters(type57, (java.util.List<java.lang.annotation.Annotation>) annotationList59);
        boolean boolean62 = springMvcApiReader51.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList59);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader51.getTypesToSkip();
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader51.swagger = swagger64;
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader51.parseOperationPath("hi!", strMap67);
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader51.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet69;
        io.swagger.models.Operation operation71 = null;
        io.swagger.annotations.ApiResponses apiResponses72 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation71, apiResponses72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(parameterList11);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(parameterList19);
        org.junit.Assert.assertNotNull(responseHeaderArray20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(parameterList42);
        org.junit.Assert.assertNotNull(responseHeaderArray43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(logAdapter45);
        org.junit.Assert.assertNull(swagger46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(annotationArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(parameterList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "/hi!" + "'", str68, "/hi!");
        org.junit.Assert.assertNotNull(typeSet69);
    }

    @Test
    public void test9157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9157");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        springMvcApiReader2.LOG = logAdapter6;
        io.swagger.models.Swagger swagger8 = null;
        springMvcApiReader2.swagger = swagger8;
        java.util.Set<java.lang.reflect.Type> typeSet10 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray15 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap16 = springMvcApiReader14.parseResponseHeaders(responseHeaderArray15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader14.swagger = swagger17;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = springMvcApiReader14.LOG;
        springMvcApiReader14.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        springMvcApiReader14.LOG = logAdapter21;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader14.LOG;
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader14.swagger = swagger24;
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList33 = springMvcApiReader28.getParameters(type29, (java.util.List<java.lang.annotation.Annotation>) annotationList31);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray34 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap35 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray34);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader28.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader28.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader28.LOG;
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader42.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader42.getTypesToSkip();
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type type48 = null;
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList52 = springMvcApiReader47.getParameters(type48, (java.util.List<java.lang.annotation.Annotation>) annotationList50);
        java.util.Set<java.lang.reflect.Type> typeSet53 = null;
        springMvcApiReader47.typesToSkip = typeSet53;
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        java.lang.String str57 = springMvcApiReader47.parseOperationPath("/hi!", strMap56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type type61 = null;
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader60.getParameters(type61, (java.util.List<java.lang.annotation.Annotation>) annotationList63);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        java.lang.reflect.Type type69 = null;
        java.lang.annotation.Annotation[] annotationArray70 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList71 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList71, annotationArray70);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList73 = springMvcApiReader68.getParameters(type69, (java.util.List<java.lang.annotation.Annotation>) annotationList71);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray74 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader68.parseResponseHeaders(responseHeaderArray74);
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] { wildcardClass77 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet79 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet79, typeArray78);
        springMvcApiReader68.typesToSkip = typeSet79;
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet79);
        java.util.Map<java.lang.String, java.lang.String> strMap84 = null;
        java.lang.String str85 = springMvcApiReader60.parseOperationPath("hi!", strMap84);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray86 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap87 = springMvcApiReader60.parseResponseHeaders(responseHeaderArray86);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap88 = springMvcApiReader47.parseResponseHeaders(responseHeaderArray86);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap89 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray86);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap90 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray86);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap91 = springMvcApiReader14.parseResponseHeaders(responseHeaderArray86);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap92 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray86);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(logAdapter19);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(parameterList33);
        org.junit.Assert.assertNotNull(responseHeaderArray34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(parameterList52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertNotNull(annotationArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(parameterList73);
        org.junit.Assert.assertNotNull(responseHeaderArray74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "/hi!" + "'", str85, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNull(strMap92);
    }

    @Test
    public void test9158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9158");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        boolean boolean31 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        springMvcApiReader2.LOG = logAdapter34;
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type type40 = null;
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList44 = springMvcApiReader39.getParameters(type40, (java.util.List<java.lang.annotation.Annotation>) annotationList42);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray45 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap46 = springMvcApiReader39.parseResponseHeaders(responseHeaderArray45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        springMvcApiReader39.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass48);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = springMvcApiReader39.LOG;
        springMvcApiReader39.updateExtensionChain();
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray55 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap56 = springMvcApiReader54.parseResponseHeaders(responseHeaderArray55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        springMvcApiReader54.LOG = logAdapter61;
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader65.parseResponseHeaders(responseHeaderArray66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type type71 = null;
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList75 = springMvcApiReader70.getParameters(type71, (java.util.List<java.lang.annotation.Annotation>) annotationList73);
        boolean boolean76 = springMvcApiReader65.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader65.getTypesToSkip();
        springMvcApiReader54.setTypesToSkip(typeSet77);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = springMvcApiReader54.LOG;
        io.swagger.models.Swagger swagger80 = null;
        springMvcApiReader54.swagger = swagger80;
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader84 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger82, logAdapter83);
        java.lang.reflect.Type type85 = null;
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList89 = springMvcApiReader84.getParameters(type85, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray90 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap91 = springMvcApiReader84.parseResponseHeaders(responseHeaderArray90);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap92 = springMvcApiReader54.parseResponseHeaders(responseHeaderArray90);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap93 = springMvcApiReader39.parseResponseHeaders(responseHeaderArray90);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap94 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray90);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter95 = springMvcApiReader2.LOG;
        java.lang.Class<?> wildcardClass96 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(parameterList44);
        org.junit.Assert.assertNotNull(responseHeaderArray45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNull(logAdapter50);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(parameterList75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNull(logAdapter79);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(parameterList89);
        org.junit.Assert.assertNotNull(responseHeaderArray90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNull(strMap92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertNull(logAdapter95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test9159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9159");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        springMvcApiReader2.swagger = swagger3;
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api7 = null;
        boolean boolean8 = springMvcApiReader2.canReadApi(false, api7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        io.swagger.models.Swagger swagger12 = springMvcApiReader11.swagger;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader15.typesToSkip;
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray23 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap24 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray25 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList26 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList26, securityRequirementArray25);
        io.swagger.models.Operation operation28 = null;
        springMvcApiReader15.updateOperation(strArray20, strArray23, strMap24, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList26, operation28);
        java.lang.Class<?> wildcardClass30 = strArray20.getClass();
        springMvcApiReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        java.lang.String str34 = springMvcApiReader11.parseOperationPath("", strMap33);
        io.swagger.models.Operation operation35 = null;
        io.swagger.annotations.ApiOperation apiOperation36 = null;
        springMvcApiReader11.updateTagsForOperation(operation35, apiOperation36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        io.swagger.models.Swagger swagger41 = springMvcApiReader40.swagger;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader44.typesToSkip;
        java.lang.String[] strArray49 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray52 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap53 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray54 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList55 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList55, securityRequirementArray54);
        io.swagger.models.Operation operation57 = null;
        springMvcApiReader44.updateOperation(strArray49, strArray52, strMap53, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList55, operation57);
        java.lang.Class<?> wildcardClass59 = strArray49.getClass();
        springMvcApiReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type type64 = null;
        java.lang.annotation.Annotation[] annotationArray65 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList66 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList66, annotationArray65);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList68 = springMvcApiReader63.getParameters(type64, (java.util.List<java.lang.annotation.Annotation>) annotationList66);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader63.parseResponseHeaders(responseHeaderArray69);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray69);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader11.parseResponseHeaders(responseHeaderArray69);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        springMvcApiReader11.LOG = logAdapter73;
        java.lang.Class<?> wildcardClass75 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        io.swagger.models.Operation operation77 = null;
        io.swagger.annotations.ApiOperation apiOperation78 = null;
        springMvcApiReader2.updateTagsForOperation(operation77, apiOperation78);
        io.swagger.models.Swagger swagger80 = null;
        springMvcApiReader2.swagger = swagger80;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(swagger12);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(securityRequirementArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(swagger41);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(securityRequirementArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(annotationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(parameterList68);
        org.junit.Assert.assertNotNull(responseHeaderArray69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test9160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9160");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader21.typesToSkip;
        springMvcApiReader21.updateExtensionChain();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type type27 = null;
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList31 = springMvcApiReader26.getParameters(type27, (java.util.List<java.lang.annotation.Annotation>) annotationList29);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass35, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader51.parseResponseHeaders(responseHeaderArray52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type type57 = null;
        java.lang.annotation.Annotation[] annotationArray58 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList59 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList59, annotationArray58);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList61 = springMvcApiReader56.getParameters(type57, (java.util.List<java.lang.annotation.Annotation>) annotationList59);
        boolean boolean62 = springMvcApiReader51.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList59);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader51.getTypesToSkip();
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader51.swagger = swagger64;
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader51.parseOperationPath("hi!", strMap67);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader51.parseOperationPath("", strMap70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type type75 = null;
        java.lang.annotation.Annotation[] annotationArray76 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList77 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList77, annotationArray76);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList79 = springMvcApiReader74.getParameters(type75, (java.util.List<java.lang.annotation.Annotation>) annotationList77);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray80 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap81 = springMvcApiReader74.parseResponseHeaders(responseHeaderArray80);
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        springMvcApiReader74.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass83);
        io.swagger.models.Swagger swagger85 = springMvcApiReader74.swagger;
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] { wildcardClass87 };
        java.util.ArrayList<java.lang.reflect.Type> typeList89 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList89, typeArray88);
        springMvcApiReader74.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        springMvcApiReader51.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        io.swagger.annotations.Api api94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList95 = springMvcApiReader2.getSecurityRequirements(api94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(parameterList31);
        org.junit.Assert.assertNotNull(responseHeaderArray32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(annotationArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(parameterList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "/hi!" + "'", str68, "/hi!");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(annotationArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(parameterList79);
        org.junit.Assert.assertNotNull(responseHeaderArray80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNull(swagger85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test9161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9161");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet5 = null;
        springMvcApiReader2.setTypesToSkip(typeSet5);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.util.Set<java.lang.reflect.Type> typeSet10 = springMvcApiReader9.typesToSkip;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray17 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap18 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray19 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList20 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList20, securityRequirementArray19);
        io.swagger.models.Operation operation22 = null;
        springMvcApiReader9.updateOperation(strArray14, strArray17, strMap18, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList20, operation22);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader9.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = springMvcApiReader9.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader9.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet26;
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.annotations.ApiOperation apiOperation31 = null;
        io.swagger.models.Operation operation32 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation31, operation32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(securityRequirementArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNull(logAdapter25);
        org.junit.Assert.assertNotNull(typeSet26);
    }

    @Test
    public void test9162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9162");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(false, api17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger21 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] { wildcardClass33 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader24.typesToSkip = typeSet35;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader24.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        springMvcApiReader24.LOG = logAdapter39;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet41;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        springMvcApiReader2.LOG = logAdapter43;
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type type48 = null;
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList52 = springMvcApiReader47.getParameters(type48, (java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray53 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader47.parseResponseHeaders(responseHeaderArray53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = springMvcApiReader47.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader47.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader47.typesToSkip;
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type type61 = null;
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader60.getParameters(type61, (java.util.List<java.lang.annotation.Annotation>) annotationList63);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader60.parseResponseHeaders(responseHeaderArray66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        springMvcApiReader60.LOG = logAdapter68;
        java.lang.Class<?> wildcardClass70 = springMvcApiReader60.getClass();
        springMvcApiReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = springMvcApiReader47.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader2.parseOperationPath("hi!", strMap75);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNull(swagger21);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(parameterList52);
        org.junit.Assert.assertNotNull(responseHeaderArray53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(logAdapter55);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertNotNull(responseHeaderArray66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
    }

    @Test
    public void test9163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9163");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Operation operation11 = null;
        io.swagger.annotations.ApiOperation apiOperation12 = null;
        springMvcApiReader2.updateTagsForOperation(operation11, apiOperation12);
        io.swagger.models.Swagger swagger14 = null;
        springMvcApiReader2.swagger = swagger14;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray19 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap20 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader18.LOG = logAdapter25;
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        boolean boolean40 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader29.getTypesToSkip();
        springMvcApiReader18.setTypesToSkip(typeSet41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader18.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet43);
        io.swagger.models.Swagger swagger45 = null;
        springMvcApiReader2.swagger = swagger45;
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray55 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap56 = springMvcApiReader49.parseResponseHeaders(responseHeaderArray55);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        springMvcApiReader49.LOG = logAdapter57;
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type type62 = null;
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList66 = springMvcApiReader61.getParameters(type62, (java.util.List<java.lang.annotation.Annotation>) annotationList64);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray67 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap68 = springMvcApiReader61.parseResponseHeaders(responseHeaderArray67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        springMvcApiReader61.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        io.swagger.models.Swagger swagger72 = springMvcApiReader61.swagger;
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] { wildcardClass74 };
        java.util.ArrayList<java.lang.reflect.Type> typeList76 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList76, typeArray75);
        springMvcApiReader61.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        springMvcApiReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger82 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        springMvcApiReader2.LOG = logAdapter83;
        java.util.List<java.lang.reflect.Type> typeList85 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.setTypesToSkip(typeList85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertNotNull(responseHeaderArray55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(parameterList66);
        org.junit.Assert.assertNotNull(responseHeaderArray67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNull(swagger72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(logAdapter81);
        org.junit.Assert.assertNull(swagger82);
    }

    @Test
    public void test9164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9164");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        boolean boolean31 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass16, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNull(logAdapter33);
    }

    @Test
    public void test9165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9165");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList41 = springMvcApiReader36.getParameters(type37, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean42 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean43 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type type62 = null;
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList66 = springMvcApiReader61.getParameters(type62, (java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean67 = springMvcApiReader56.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean68 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean69 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader21.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet70;
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger73 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader2.parseOperationPath("hi!", strMap75);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(responseHeaderArray27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(parameterList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(parameterList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNull(swagger73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
    }

    @Test
    public void test9166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9166");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        springMvcApiReader2.LOG = logAdapter6;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger9 = null;
        springMvcApiReader2.swagger = swagger9;
        io.swagger.models.Operation operation11 = null;
        io.swagger.annotations.ApiOperation apiOperation12 = null;
        springMvcApiReader2.updateTagsForOperation(operation11, apiOperation12);
        io.swagger.annotations.Api api14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet15 = springMvcApiReader2.extractTags(api14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNull(swagger8);
    }

    @Test
    public void test9167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9167");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet5 = null;
        springMvcApiReader2.setTypesToSkip(typeSet5);
        io.swagger.models.Swagger swagger7 = null;
        springMvcApiReader2.swagger = swagger7;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type type12 = null;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList16 = springMvcApiReader11.getParameters(type12, (java.util.List<java.lang.annotation.Annotation>) annotationList14);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray17 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap18 = springMvcApiReader11.parseResponseHeaders(responseHeaderArray17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        springMvcApiReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader11.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader11.LOG = logAdapter23;
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        springMvcApiReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type type42 = null;
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader41.getParameters(type42, (java.util.List<java.lang.annotation.Annotation>) annotationList44);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray55 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap56 = springMvcApiReader49.parseResponseHeaders(responseHeaderArray55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass58 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader49.typesToSkip = typeSet60;
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader41.parseOperationPath("hi!", strMap65);
        java.lang.annotation.Annotation[] annotationArray67 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList68 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList68, annotationArray67);
        boolean boolean70 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList68);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList71 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass36, (java.util.List<java.lang.annotation.Annotation>) annotationList68);
        io.swagger.models.Swagger swagger72 = springMvcApiReader2.swagger;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass73 = swagger72.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(parameterList16);
        org.junit.Assert.assertNotNull(responseHeaderArray17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertNotNull(responseHeaderArray55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!" + "'", str66, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(parameterList71);
        org.junit.Assert.assertNull(swagger72);
    }

    @Test
    public void test9168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9168");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        io.swagger.models.Swagger swagger16 = null;
        springMvcApiReader15.swagger = swagger16;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList25 = springMvcApiReader20.getParameters(type21, (java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass29 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader20.typesToSkip = typeSet31;
        springMvcApiReader15.typesToSkip = typeSet31;
        springMvcApiReader2.typesToSkip = typeSet31;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader38.getParameters(type39, (java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray44 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap45 = springMvcApiReader38.parseResponseHeaders(responseHeaderArray44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray49 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type type54 = null;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList58 = springMvcApiReader53.getParameters(type54, (java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean60 = springMvcApiReader38.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader63.typesToSkip;
        springMvcApiReader63.updateExtensionChain();
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        java.lang.reflect.Type type69 = null;
        java.lang.annotation.Annotation[] annotationArray70 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList71 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList71, annotationArray70);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList73 = springMvcApiReader68.getParameters(type69, (java.util.List<java.lang.annotation.Annotation>) annotationList71);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray74 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader68.parseResponseHeaders(responseHeaderArray74);
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        springMvcApiReader68.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        springMvcApiReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        io.swagger.annotations.Api api82 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList83 = springMvcApiReader2.getSecurityRequirements(api82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(parameterList25);
        org.junit.Assert.assertNotNull(responseHeaderArray26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(responseHeaderArray44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(parameterList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(annotationArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(parameterList73);
        org.junit.Assert.assertNotNull(responseHeaderArray74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test9169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9169");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(false, api29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader2.canReadApi(false, api33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        springMvcApiReader2.LOG = logAdapter36;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeSet38);
    }

    @Test
    public void test9170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9170");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        boolean boolean31 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass16, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader2.swagger = swagger34;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type type42 = null;
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader41.getParameters(type42, (java.util.List<java.lang.annotation.Annotation>) annotationList44);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray55 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap56 = springMvcApiReader49.parseResponseHeaders(responseHeaderArray55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass58 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader49.typesToSkip = typeSet60;
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader41.parseOperationPath("hi!", strMap65);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray67 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap68 = springMvcApiReader41.parseResponseHeaders(responseHeaderArray67);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap69 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray67);
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation73 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "hi!", operation73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertNotNull(responseHeaderArray55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!" + "'", str66, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(typeSet70);
    }

    @Test
    public void test9171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9171");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        io.swagger.models.Swagger swagger45 = null;
        springMvcApiReader2.swagger = swagger45;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        springMvcApiReader2.LOG = logAdapter47;
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type type52 = null;
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList56 = springMvcApiReader51.getParameters(type52, (java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type type60 = null;
        java.lang.annotation.Annotation[] annotationArray61 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList62 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList62, annotationArray61);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList64 = springMvcApiReader59.getParameters(type60, (java.util.List<java.lang.annotation.Annotation>) annotationList62);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray65 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap66 = springMvcApiReader59.parseResponseHeaders(responseHeaderArray65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.reflect.Type[] typeArray69 = new java.lang.reflect.Type[] { wildcardClass68 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet70 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet70, typeArray69);
        springMvcApiReader59.typesToSkip = typeSet70;
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet70);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader51.parseOperationPath("hi!", strMap75);
        java.lang.annotation.Annotation[] annotationArray77 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList78 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList78, annotationArray77);
        boolean boolean80 = springMvcApiReader51.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader51.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = springMvcApiReader51.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        springMvcApiReader51.LOG = logAdapter83;
        java.lang.Class<?> wildcardClass85 = springMvcApiReader51.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass85);
        io.swagger.models.Operation operation87 = null;
        io.swagger.annotations.ApiOperation apiOperation88 = null;
        springMvcApiReader2.updateTagsForOperation(operation87, apiOperation88);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList90 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap91 = null;
        io.swagger.models.Operation operation92 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList90, strMap91, operation92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(parameterList56);
        org.junit.Assert.assertNotNull(annotationArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(parameterList64);
        org.junit.Assert.assertNotNull(responseHeaderArray65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNull(logAdapter82);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test9172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9172");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] { wildcardClass33 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader24.typesToSkip = typeSet35;
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader16.parseOperationPath("hi!", strMap40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray42);
        io.swagger.models.Operation operation44 = null;
        io.swagger.annotations.ApiOperation apiOperation45 = null;
        springMvcApiReader16.updateTagsForOperation(operation44, apiOperation45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        java.util.Set<java.lang.reflect.Type> typeSet55 = null;
        springMvcApiReader49.typesToSkip = typeSet55;
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader49.parseOperationPath("/hi!", strMap58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader49.typesToSkip;
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type type64 = null;
        java.lang.annotation.Annotation[] annotationArray65 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList66 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList66, annotationArray65);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList68 = springMvcApiReader63.getParameters(type64, (java.util.List<java.lang.annotation.Annotation>) annotationList66);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader63.parseResponseHeaders(responseHeaderArray69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        springMvcApiReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList77 = springMvcApiReader49.getParameters((java.lang.reflect.Type) wildcardClass72, (java.util.List<java.lang.annotation.Annotation>) annotationList75);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        io.swagger.models.Swagger swagger80 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger81 = null;
        springMvcApiReader2.swagger = swagger81;
        io.swagger.models.Swagger swagger83 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api85 = null;
        boolean boolean86 = springMvcApiReader2.canReadApi(true, api85);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger88 = null;
        springMvcApiReader2.swagger = swagger88;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter90 = null;
        springMvcApiReader2.LOG = logAdapter90;
        io.swagger.models.Swagger swagger92 = null;
        springMvcApiReader2.swagger = swagger92;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter94 = null;
        springMvcApiReader2.LOG = logAdapter94;
        io.swagger.annotations.Api api96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet97 = springMvcApiReader2.extractTags(api96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/hi!" + "'", str41, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNull(typeSet60);
        org.junit.Assert.assertNotNull(annotationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(parameterList68);
        org.junit.Assert.assertNotNull(responseHeaderArray69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(parameterList77);
        org.junit.Assert.assertNull(swagger80);
        org.junit.Assert.assertNull(swagger83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test9173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9173");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        boolean boolean24 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader13.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        java.lang.String[] strArray28 = null;
        java.lang.String[] strArray29 = null;
        io.swagger.models.Operation operation30 = null;
        java.lang.String[] strArray31 = springMvcApiReader2.updateOperationConsumes(strArray28, strArray29, operation30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray35 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap36 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray35);
        io.swagger.models.Swagger swagger37 = null;
        springMvcApiReader34.swagger = swagger37;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader41.typesToSkip;
        springMvcApiReader41.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader41.typesToSkip;
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader47.typesToSkip;
        java.lang.String[] strArray52 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray55 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap56 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray57 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList58 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList58, securityRequirementArray57);
        io.swagger.models.Operation operation60 = null;
        springMvcApiReader47.updateOperation(strArray52, strArray55, strMap56, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList58, operation60);
        io.swagger.models.Swagger swagger62 = null;
        springMvcApiReader47.swagger = swagger62;
        java.lang.annotation.Annotation[] annotationArray64 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList65 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList65, annotationArray64);
        boolean boolean67 = springMvcApiReader47.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        boolean boolean68 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        boolean boolean69 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        boolean boolean70 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        io.swagger.models.Operation operation71 = null;
        io.swagger.annotations.ApiOperation apiOperation72 = null;
        springMvcApiReader2.updateTagsForOperation(operation71, apiOperation72);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        springMvcApiReader2.LOG = logAdapter74;
        io.swagger.models.Swagger swagger76 = null;
        springMvcApiReader2.swagger = swagger76;
        io.swagger.models.Swagger swagger78 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader80 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger78, logAdapter79);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray81 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap82 = springMvcApiReader80.parseResponseHeaders(responseHeaderArray81);
        io.swagger.models.Swagger swagger83 = springMvcApiReader80.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader80.typesToSkip;
        java.lang.Class<?> wildcardClass85 = typeSet84.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass85);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNull(strArray31);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(securityRequirementArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(annotationArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(swagger83);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test9174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9174");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        io.swagger.models.Swagger swagger16 = null;
        springMvcApiReader15.swagger = swagger16;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList25 = springMvcApiReader20.getParameters(type21, (java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass29 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader20.typesToSkip = typeSet31;
        springMvcApiReader15.typesToSkip = typeSet31;
        springMvcApiReader2.typesToSkip = typeSet31;
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(parameterList25);
        org.junit.Assert.assertNotNull(responseHeaderArray26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeSet37);
    }

    @Test
    public void test9175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9175");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet4 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api6 = null;
        boolean boolean7 = springMvcApiReader2.canReadApi(false, api6);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader10.typesToSkip;
        springMvcApiReader10.updateExtensionChain();
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type type16 = null;
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList20 = springMvcApiReader15.getParameters(type16, (java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        springMvcApiReader15.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        springMvcApiReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList34 = springMvcApiReader29.getParameters(type30, (java.util.List<java.lang.annotation.Annotation>) annotationList32);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray35 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap36 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray40 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap41 = springMvcApiReader39.parseResponseHeaders(responseHeaderArray40);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type type45 = null;
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList49 = springMvcApiReader44.getParameters(type45, (java.util.List<java.lang.annotation.Annotation>) annotationList47);
        boolean boolean50 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList47);
        boolean boolean51 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList47);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type type55 = null;
        java.lang.annotation.Annotation[] annotationArray56 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList57 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList57, annotationArray56);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList59 = springMvcApiReader54.getParameters(type55, (java.util.List<java.lang.annotation.Annotation>) annotationList57);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader54.parseResponseHeaders(responseHeaderArray60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray65 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap66 = springMvcApiReader64.parseResponseHeaders(responseHeaderArray65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type type70 = null;
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList74 = springMvcApiReader69.getParameters(type70, (java.util.List<java.lang.annotation.Annotation>) annotationList72);
        boolean boolean75 = springMvcApiReader64.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        boolean boolean76 = springMvcApiReader54.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        boolean boolean77 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        java.util.Set<java.lang.reflect.Type> typeSet78 = springMvcApiReader29.getTypesToSkip();
        springMvcApiReader10.typesToSkip = typeSet78;
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader10.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet80);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap85 = null;
        java.lang.String str86 = springMvcApiReader2.parseOperationPath("hi!", strMap85);
        io.swagger.annotations.ApiOperation apiOperation87 = null;
        io.swagger.models.Operation operation88 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation87, operation88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(parameterList20);
        org.junit.Assert.assertNotNull(responseHeaderArray21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(parameterList34);
        org.junit.Assert.assertNotNull(responseHeaderArray35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(parameterList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(parameterList59);
        org.junit.Assert.assertNotNull(responseHeaderArray60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(parameterList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "/hi!" + "'", str86, "/hi!");
    }

    @Test
    public void test9176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9176");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray24 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap25 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader18.typesToSkip;
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader32.typesToSkip;
        springMvcApiReader18.typesToSkip = typeSet33;
        io.swagger.annotations.Api api36 = null;
        boolean boolean37 = springMvcApiReader18.canReadApi(false, api36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray46 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap47 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        springMvcApiReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        io.swagger.models.Swagger swagger51 = springMvcApiReader40.swagger;
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] { wildcardClass53 };
        java.util.ArrayList<java.lang.reflect.Type> typeList55 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList55, typeArray54);
        springMvcApiReader40.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        springMvcApiReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNull(swagger15);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertNotNull(responseHeaderArray24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(responseHeaderArray46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(swagger51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNull(logAdapter61);
    }

    @Test
    public void test9177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9177");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray12 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap13 = springMvcApiReader11.parseResponseHeaders(responseHeaderArray12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        boolean boolean22 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList19);
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader11.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet23);
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(false, api26);
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger29 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation32 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "", operation32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNull(swagger29);
    }

    @Test
    public void test9178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9178");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        io.swagger.annotations.Api api18 = null;
        boolean boolean19 = springMvcApiReader2.canReadApi(false, api18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        springMvcApiReader2.LOG = logAdapter20;
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet22);
    }

    @Test
    public void test9179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9179");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader7.typesToSkip;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray15 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap16 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray17 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList18 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList18, securityRequirementArray17);
        io.swagger.models.Operation operation20 = null;
        springMvcApiReader7.updateOperation(strArray12, strArray15, strMap16, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList18, operation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader7.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = null;
        springMvcApiReader2.setTypesToSkip(typeSet24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        springMvcApiReader28.LOG = logAdapter35;
        io.swagger.models.Swagger swagger37 = null;
        springMvcApiReader28.swagger = swagger37;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        io.swagger.models.Swagger swagger42 = null;
        springMvcApiReader41.swagger = swagger42;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] { wildcardClass55 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader46.typesToSkip = typeSet57;
        springMvcApiReader41.typesToSkip = typeSet57;
        springMvcApiReader28.typesToSkip = typeSet57;
        springMvcApiReader2.typesToSkip = typeSet57;
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader2.parseOperationPath("", strMap64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        springMvcApiReader2.LOG = logAdapter66;
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation69 = null;
        io.swagger.annotations.ApiOperation apiOperation70 = null;
        springMvcApiReader2.updateTagsForOperation(operation69, apiOperation70);
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader75 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger73, logAdapter74);
        java.lang.reflect.Type type76 = null;
        java.lang.annotation.Annotation[] annotationArray77 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList78 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList78, annotationArray77);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList80 = springMvcApiReader75.getParameters(type76, (java.util.List<java.lang.annotation.Annotation>) annotationList78);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray81 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap82 = springMvcApiReader75.parseResponseHeaders(responseHeaderArray81);
        io.swagger.models.Swagger swagger83 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader85 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger83, logAdapter84);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray86 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap87 = springMvcApiReader85.parseResponseHeaders(responseHeaderArray86);
        io.swagger.models.Swagger swagger88 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter89 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader90 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger88, logAdapter89);
        java.lang.reflect.Type type91 = null;
        java.lang.annotation.Annotation[] annotationArray92 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList93 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList93, annotationArray92);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList95 = springMvcApiReader90.getParameters(type91, (java.util.List<java.lang.annotation.Annotation>) annotationList93);
        boolean boolean96 = springMvcApiReader85.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList93);
        boolean boolean97 = springMvcApiReader75.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList93);
        boolean boolean98 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList93);
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger4);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(securityRequirementArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNotNull(annotationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(parameterList80);
        org.junit.Assert.assertNotNull(responseHeaderArray81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNotNull(annotationArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(parameterList95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test9180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9180");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader2.parseOperationPath("hi!", strMap21);
        io.swagger.models.Operation operation23 = null;
        io.swagger.annotations.ApiOperation apiOperation24 = null;
        springMvcApiReader2.updateTagsForOperation(operation23, apiOperation24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource27 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger28 = springMvcApiReader2.read(springResource27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/hi!" + "'", str22, "/hi!");
        org.junit.Assert.assertNotNull(typeSet26);
    }

    @Test
    public void test9181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9181");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader2.canReadApi(false, api59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger62 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation63 = null;
        io.swagger.annotations.ApiOperation apiOperation64 = null;
        springMvcApiReader2.updateTagsForOperation(operation63, apiOperation64);
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        boolean boolean69 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        io.swagger.models.Operation operation70 = null;
        io.swagger.annotations.ApiOperation apiOperation71 = null;
        springMvcApiReader2.updateTagsForOperation(operation70, apiOperation71);
        io.swagger.models.Swagger swagger73 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader2.swagger = swagger75;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        springMvcApiReader2.LOG = logAdapter77;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(typeSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(typeSet61);
        org.junit.Assert.assertNull(swagger62);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(swagger73);
        org.junit.Assert.assertNull(typeSet74);
    }

    @Test
    public void test9182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9182");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("hi!", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        java.lang.annotation.Annotation[] annotationArray14 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList15 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList15, annotationArray14);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList17 = springMvcApiReader12.getParameters(type13, (java.util.List<java.lang.annotation.Annotation>) annotationList15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList25 = springMvcApiReader20.getParameters(type21, (java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass29 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader20.typesToSkip = typeSet31;
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader12.parseOperationPath("hi!", strMap36);
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        boolean boolean41 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean42 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray46 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap47 = springMvcApiReader45.parseResponseHeaders(responseHeaderArray46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type type51 = null;
        java.lang.annotation.Annotation[] annotationArray52 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList53 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList53, annotationArray52);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList55 = springMvcApiReader50.getParameters(type51, (java.util.List<java.lang.annotation.Annotation>) annotationList53);
        boolean boolean56 = springMvcApiReader45.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList53);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader45.getTypesToSkip();
        io.swagger.models.Swagger swagger58 = null;
        springMvcApiReader45.swagger = swagger58;
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        java.lang.String str62 = springMvcApiReader45.parseOperationPath("hi!", strMap61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader65.parseResponseHeaders(responseHeaderArray66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type type71 = null;
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList75 = springMvcApiReader70.getParameters(type71, (java.util.List<java.lang.annotation.Annotation>) annotationList73);
        boolean boolean76 = springMvcApiReader65.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader65.getTypesToSkip();
        springMvcApiReader45.setTypesToSkip(typeSet77);
        springMvcApiReader2.setTypesToSkip(typeSet77);
        io.swagger.models.Swagger swagger80 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader82 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger80, logAdapter81);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray83 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap84 = springMvcApiReader82.parseResponseHeaders(responseHeaderArray83);
        io.swagger.models.Swagger swagger85 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader87 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger85, logAdapter86);
        java.lang.reflect.Type type88 = null;
        java.lang.annotation.Annotation[] annotationArray89 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList90 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList90, annotationArray89);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList92 = springMvcApiReader87.getParameters(type88, (java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean93 = springMvcApiReader82.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean94 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        java.util.Set<java.lang.reflect.Type> typeSet95 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter96 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/hi!" + "'", str9, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(parameterList17);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(parameterList25);
        org.junit.Assert.assertNotNull(responseHeaderArray26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(annotationArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(parameterList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "/hi!" + "'", str62, "/hi!");
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(parameterList75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(annotationArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(parameterList92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNull(logAdapter96);
    }

    @Test
    public void test9183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9183");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray28 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap29 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray28);
        io.swagger.annotations.Api api31 = null;
        boolean boolean32 = springMvcApiReader2.canReadApi(true, api31);
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet38 = springMvcApiReader2.extractTags(api37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test9184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9184");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList41 = springMvcApiReader36.getParameters(type37, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean42 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean43 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type type62 = null;
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList66 = springMvcApiReader61.getParameters(type62, (java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean67 = springMvcApiReader56.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean68 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean69 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader21.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet70;
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api75 = null;
        boolean boolean76 = springMvcApiReader2.canReadApi(true, api75);
        io.swagger.models.Operation operation77 = null;
        io.swagger.annotations.ApiOperation apiOperation78 = null;
        springMvcApiReader2.updateTagsForOperation(operation77, apiOperation78);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api83 = null;
        boolean boolean84 = springMvcApiReader2.canReadApi(false, api83);
        java.util.Set<java.lang.reflect.Type> typeSet85 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger86 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(responseHeaderArray27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(parameterList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(parameterList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNull(logAdapter73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNull(swagger86);
    }

    @Test
    public void test9185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9185");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation21 = null;
        io.swagger.annotations.ApiOperation apiOperation22 = null;
        springMvcApiReader2.updateTagsForOperation(operation21, apiOperation22);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        io.swagger.models.Operation operation26 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation25, operation26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
    }

    @Test
    public void test9186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9186");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(true, api29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader33.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader33.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        springMvcApiReader2.LOG = logAdapter37;
        java.lang.String[] strArray39 = null;
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader55.typesToSkip;
        java.lang.String[] strArray60 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray63 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap64 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray65 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList66 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList66, securityRequirementArray65);
        io.swagger.models.Operation operation68 = null;
        springMvcApiReader55.updateOperation(strArray60, strArray63, strMap64, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList66, operation68);
        java.lang.String[] strArray75 = new java.lang.String[] { "/hi!", "", "", "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader79.typesToSkip;
        java.lang.String[] strArray84 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray87 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap88 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray89 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList90 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList90, securityRequirementArray89);
        io.swagger.models.Operation operation92 = null;
        springMvcApiReader79.updateOperation(strArray84, strArray87, strMap88, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList90, operation92);
        io.swagger.models.Operation operation94 = null;
        springMvcApiReader42.updateOperation(strArray63, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList90, operation94);
        io.swagger.models.Operation operation96 = null;
        java.lang.String[] strArray97 = springMvcApiReader2.updateOperationProduces(strArray39, strArray63, operation96);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(securityRequirementArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(securityRequirementArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(strArray97);
    }

    @Test
    public void test9187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9187");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type type23 = null;
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList27 = springMvcApiReader22.getParameters(type23, (java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray28 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap29 = springMvcApiReader22.parseResponseHeaders(responseHeaderArray28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader32.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList42 = springMvcApiReader37.getParameters(type38, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        boolean boolean43 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        boolean boolean44 = springMvcApiReader22.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        springMvcApiReader22.LOG = logAdapter45;
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray55 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap56 = springMvcApiReader49.parseResponseHeaders(responseHeaderArray55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        springMvcApiReader49.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass58);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type type63 = null;
        java.lang.annotation.Annotation[] annotationArray64 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList65 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList65, annotationArray64);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList67 = springMvcApiReader62.getParameters(type63, (java.util.List<java.lang.annotation.Annotation>) annotationList65);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray68 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap69 = springMvcApiReader62.parseResponseHeaders(responseHeaderArray68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        springMvcApiReader62.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        io.swagger.models.Swagger swagger73 = springMvcApiReader62.swagger;
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.reflect.Type[] typeArray76 = new java.lang.reflect.Type[] { wildcardClass75 };
        java.util.ArrayList<java.lang.reflect.Type> typeList77 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList77, typeArray76);
        springMvcApiReader62.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        springMvcApiReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        springMvcApiReader22.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap83 = null;
        io.swagger.annotations.Api api84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap85 = springMvcApiReader2.updateTagsForApi(strMap83, api84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(parameterList27);
        org.junit.Assert.assertNotNull(responseHeaderArray28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(parameterList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertNotNull(responseHeaderArray55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(annotationArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(parameterList67);
        org.junit.Assert.assertNotNull(responseHeaderArray68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNull(swagger73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test9188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9188");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray24 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap25 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader18.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader18.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet30);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        java.lang.String str34 = springMvcApiReader2.parseOperationPath("/hi!", strMap33);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource35 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger36 = springMvcApiReader2.read(springResource35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertNotNull(responseHeaderArray24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/hi!" + "'", str34, "/hi!");
    }

    @Test
    public void test9189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9189");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        springMvcApiReader2.swagger = swagger3;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        springMvcApiReader2.LOG = logAdapter5;
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        io.swagger.models.Swagger swagger10 = springMvcApiReader9.swagger;
        io.swagger.models.Swagger swagger11 = springMvcApiReader9.swagger;
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader14.typesToSkip;
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray22 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap23 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray24 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList25 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList25, securityRequirementArray24);
        io.swagger.models.Operation operation27 = null;
        springMvcApiReader14.updateOperation(strArray19, strArray22, strMap23, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList25, operation27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader14.typesToSkip;
        springMvcApiReader9.setTypesToSkip(typeSet29);
        springMvcApiReader2.setTypesToSkip(typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        springMvcApiReader2.swagger = swagger32;
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        springMvcApiReader2.LOG = logAdapter35;
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type type40 = null;
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList44 = springMvcApiReader39.getParameters(type40, (java.util.List<java.lang.annotation.Annotation>) annotationList42);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type type48 = null;
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList52 = springMvcApiReader47.getParameters(type48, (java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray53 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader47.parseResponseHeaders(responseHeaderArray53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] { wildcardClass56 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader47.typesToSkip = typeSet58;
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader39.parseOperationPath("hi!", strMap63);
        io.swagger.models.Operation operation65 = null;
        io.swagger.annotations.ApiOperation apiOperation66 = null;
        springMvcApiReader39.updateTagsForOperation(operation65, apiOperation66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type type71 = null;
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList75 = springMvcApiReader70.getParameters(type71, (java.util.List<java.lang.annotation.Annotation>) annotationList73);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray76 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader70.parseResponseHeaders(responseHeaderArray76);
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        springMvcApiReader70.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        springMvcApiReader39.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader39.getTypesToSkip();
        io.swagger.models.Operation operation83 = null;
        io.swagger.annotations.ApiOperation apiOperation84 = null;
        springMvcApiReader39.updateTagsForOperation(operation83, apiOperation84);
        java.util.Map<java.lang.String, java.lang.String> strMap87 = null;
        java.lang.String str88 = springMvcApiReader39.parseOperationPath("hi!", strMap87);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter89 = springMvcApiReader39.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet90 = springMvcApiReader39.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet90);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap92 = null;
        io.swagger.annotations.Api api93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap94 = springMvcApiReader2.updateTagsForApi(strMap92, api93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger10);
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(securityRequirementArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(parameterList44);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(parameterList52);
        org.junit.Assert.assertNotNull(responseHeaderArray53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(parameterList75);
        org.junit.Assert.assertNotNull(responseHeaderArray76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "/hi!" + "'", str88, "/hi!");
        org.junit.Assert.assertNull(logAdapter89);
        org.junit.Assert.assertNotNull(typeSet90);
    }

    @Test
    public void test9190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9190");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader2.parseOperationPath("hi!", strMap19);
        io.swagger.models.Operation operation21 = null;
        io.swagger.annotations.ApiOperation apiOperation22 = null;
        springMvcApiReader2.updateTagsForOperation(operation21, apiOperation22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        springMvcApiReader26.LOG = logAdapter33;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader37.getTypesToSkip();
        springMvcApiReader26.setTypesToSkip(typeSet49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader26.LOG;
        java.lang.String[] strArray52 = null;
        java.lang.String[] strArray53 = null;
        io.swagger.models.Operation operation54 = null;
        java.lang.String[] strArray55 = springMvcApiReader26.updateOperationConsumes(strArray52, strArray53, operation54);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader26.getTypesToSkip();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        springMvcApiReader26.LOG = logAdapter60;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray62 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray62);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap64 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray62);
        io.swagger.models.Operation operation65 = null;
        io.swagger.annotations.ApiOperation apiOperation66 = null;
        springMvcApiReader2.updateTagsForOperation(operation65, apiOperation66);
        io.swagger.models.Swagger swagger68 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api71 = null;
        boolean boolean72 = springMvcApiReader2.canReadApi(false, api71);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNull(swagger17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertNull(strArray55);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(responseHeaderArray62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(swagger68);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test9191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9191");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation4 = null;
        io.swagger.annotations.ApiOperation apiOperation5 = null;
        springMvcApiReader2.updateTagsForOperation(operation4, apiOperation5);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.util.Set<java.lang.reflect.Type> typeSet10 = springMvcApiReader9.typesToSkip;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray17 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap18 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray19 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList20 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList20, securityRequirementArray19);
        io.swagger.models.Operation operation22 = null;
        springMvcApiReader9.updateOperation(strArray14, strArray17, strMap18, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList20, operation22);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader9.swagger = swagger24;
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader28.typesToSkip;
        springMvcApiReader28.updateExtensionChain();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader28.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type type48 = null;
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList52 = springMvcApiReader47.getParameters(type48, (java.util.List<java.lang.annotation.Annotation>) annotationList50);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList53 = springMvcApiReader9.getParameters((java.lang.reflect.Type) wildcardClass42, (java.util.List<java.lang.annotation.Annotation>) annotationList50);
        boolean boolean54 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        springMvcApiReader2.LOG = logAdapter56;
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        io.swagger.models.Swagger swagger61 = springMvcApiReader60.swagger;
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader64.typesToSkip;
        java.lang.String[] strArray69 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray72 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap73 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray74 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList75 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList75, securityRequirementArray74);
        io.swagger.models.Operation operation77 = null;
        springMvcApiReader64.updateOperation(strArray69, strArray72, strMap73, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList75, operation77);
        java.lang.Class<?> wildcardClass79 = strArray69.getClass();
        springMvcApiReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        java.lang.Class<?> wildcardClass81 = springMvcApiReader60.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation84 = null;
        io.swagger.annotations.ApiOperation apiOperation85 = null;
        springMvcApiReader2.updateTagsForOperation(operation84, apiOperation85);
        io.swagger.models.Operation operation87 = null;
        io.swagger.annotations.ApiOperation apiOperation88 = null;
        springMvcApiReader2.updateTagsForOperation(operation87, apiOperation88);
        io.swagger.models.Operation operation92 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "/hi!", operation92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(securityRequirementArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(parameterList52);
        org.junit.Assert.assertNotNull(parameterList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(logAdapter55);
        org.junit.Assert.assertNull(swagger61);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(securityRequirementArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test9192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9192");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet17;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        io.swagger.models.Swagger swagger35 = springMvcApiReader24.swagger;
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] { wildcardClass37 };
        java.util.ArrayList<java.lang.reflect.Type> typeList39 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList39, typeArray38);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList39);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList39);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader2.canReadApi(true, api44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        springMvcApiReader2.LOG = logAdapter46;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        springMvcApiReader2.LOG = logAdapter48;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNull(swagger35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test9193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9193");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        boolean boolean31 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass16, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.lang.reflect.Type type33 = null;
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList37 = springMvcApiReader2.getParameters(type33, (java.util.List<java.lang.annotation.Annotation>) annotationList35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList53 = springMvcApiReader48.getParameters(type49, (java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray54 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] { wildcardClass57 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader48.typesToSkip = typeSet59;
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader40.parseOperationPath("hi!", strMap64);
        io.swagger.annotations.Api api67 = null;
        boolean boolean68 = springMvcApiReader40.canReadApi(false, api67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.reflect.Type type72 = null;
        java.lang.annotation.Annotation[] annotationArray73 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList74 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList74, annotationArray73);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList76 = springMvcApiReader71.getParameters(type72, (java.util.List<java.lang.annotation.Annotation>) annotationList74);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray77 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap78 = springMvcApiReader71.parseResponseHeaders(responseHeaderArray77);
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        springMvcApiReader71.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        springMvcApiReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet85 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet86 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap88 = null;
        java.lang.String str89 = springMvcApiReader2.parseOperationPath("", strMap88);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter90 = null;
        springMvcApiReader2.LOG = logAdapter90;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(parameterList37);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(parameterList53);
        org.junit.Assert.assertNotNull(responseHeaderArray54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "/hi!" + "'", str65, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(annotationArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(parameterList76);
        org.junit.Assert.assertNotNull(responseHeaderArray77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
    }

    @Test
    public void test9194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9194");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type type16 = null;
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList20 = springMvcApiReader15.getParameters(type16, (java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = springMvcApiReader23.getParameters(type24, (java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] { wildcardClass32 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader23.typesToSkip = typeSet34;
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader15.parseOperationPath("hi!", strMap39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray41);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray41);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader46.typesToSkip;
        java.lang.String[] strArray51 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray54 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray56 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList57 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList57, securityRequirementArray56);
        io.swagger.models.Operation operation59 = null;
        springMvcApiReader46.updateOperation(strArray51, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList57, operation59);
        io.swagger.models.Swagger swagger61 = null;
        springMvcApiReader46.swagger = swagger61;
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader65.typesToSkip;
        springMvcApiReader65.updateExtensionChain();
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type type71 = null;
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList75 = springMvcApiReader70.getParameters(type71, (java.util.List<java.lang.annotation.Annotation>) annotationList73);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray76 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader70.parseResponseHeaders(responseHeaderArray76);
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        springMvcApiReader70.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        springMvcApiReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader84 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger82, logAdapter83);
        java.lang.reflect.Type type85 = null;
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList89 = springMvcApiReader84.getParameters(type85, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList90 = springMvcApiReader46.getParameters((java.lang.reflect.Type) wildcardClass79, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean91 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        java.util.Map<java.lang.String, java.lang.String> strMap93 = null;
        java.lang.String str94 = springMvcApiReader2.parseOperationPath("", strMap93);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter95 = null;
        springMvcApiReader2.LOG = logAdapter95;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet99 = springMvcApiReader2.extractTags(api98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(parameterList20);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(parameterList28);
        org.junit.Assert.assertNotNull(responseHeaderArray29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(securityRequirementArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(parameterList75);
        org.junit.Assert.assertNotNull(responseHeaderArray76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(parameterList89);
        org.junit.Assert.assertNotNull(parameterList90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
    }

    @Test
    public void test9195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9195");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        boolean boolean31 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("hi!", strMap34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader38.typesToSkip;
        springMvcApiReader38.updateExtensionChain();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList48 = springMvcApiReader43.getParameters(type44, (java.util.List<java.lang.annotation.Annotation>) annotationList46);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray49 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        springMvcApiReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader2.parseOperationPath("/hi!", strMap58);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(parameterList48);
        org.junit.Assert.assertNotNull(responseHeaderArray49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
    }

    @Test
    public void test9196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9196");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type type36 = null;
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList40 = springMvcApiReader35.getParameters(type36, (java.util.List<java.lang.annotation.Annotation>) annotationList38);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader35.parseResponseHeaders(responseHeaderArray41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass44 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader35.typesToSkip = typeSet46;
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader27.parseOperationPath("hi!", strMap51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray53 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray53);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray53);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader2.parseOperationPath("/hi!", strMap57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger60 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(parameterList40);
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "/hi!" + "'", str58, "/hi!");
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertNull(swagger60);
        org.junit.Assert.assertNotNull(typeSet61);
    }

    @Test
    public void test9197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9197");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        boolean boolean31 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass16, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.lang.reflect.Type type33 = null;
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList37 = springMvcApiReader2.getParameters(type33, (java.util.List<java.lang.annotation.Annotation>) annotationList35);
        io.swagger.models.Swagger swagger38 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type type42 = null;
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader41.getParameters(type42, (java.util.List<java.lang.annotation.Annotation>) annotationList44);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray55 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap56 = springMvcApiReader49.parseResponseHeaders(responseHeaderArray55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass58 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader49.typesToSkip = typeSet60;
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader41.parseOperationPath("hi!", strMap65);
        io.swagger.models.Operation operation67 = null;
        io.swagger.annotations.ApiOperation apiOperation68 = null;
        springMvcApiReader41.updateTagsForOperation(operation67, apiOperation68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type type73 = null;
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList77 = springMvcApiReader72.getParameters(type73, (java.util.List<java.lang.annotation.Annotation>) annotationList75);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray78 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap79 = springMvcApiReader72.parseResponseHeaders(responseHeaderArray78);
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        springMvcApiReader72.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        springMvcApiReader41.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader41.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet84;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = null;
        springMvcApiReader2.LOG = logAdapter86;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(parameterList37);
        org.junit.Assert.assertNull(swagger38);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertNotNull(responseHeaderArray55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!" + "'", str66, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(parameterList77);
        org.junit.Assert.assertNotNull(responseHeaderArray78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeSet84);
    }

    @Test
    public void test9198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9198");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader59.parseResponseHeaders(responseHeaderArray60);
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet63 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet63, typeArray62);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet63);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader68.parseResponseHeaders(responseHeaderArray69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.reflect.Type type74 = null;
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList78 = springMvcApiReader73.getParameters(type74, (java.util.List<java.lang.annotation.Annotation>) annotationList76);
        boolean boolean79 = springMvcApiReader68.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader68.getTypesToSkip();
        springMvcApiReader59.setTypesToSkip(typeSet80);
        springMvcApiReader2.setTypesToSkip(typeSet80);
        java.util.Set<java.lang.reflect.Type> typeSet83 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = null;
        springMvcApiReader2.LOG = logAdapter84;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(parameterList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(typeSet83);
    }

    @Test
    public void test9199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9199");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        springMvcApiReader2.LOG = logAdapter19;
        io.swagger.models.Swagger swagger21 = null;
        springMvcApiReader2.swagger = swagger21;
        io.swagger.models.Operation operation25 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "hi!", operation25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNull(swagger17);
        org.junit.Assert.assertNull(logAdapter18);
    }

    @Test
    public void test9200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9200");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type type36 = null;
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList40 = springMvcApiReader35.getParameters(type36, (java.util.List<java.lang.annotation.Annotation>) annotationList38);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader35.parseResponseHeaders(responseHeaderArray41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass44 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader35.typesToSkip = typeSet46;
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader27.parseOperationPath("hi!", strMap51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray53 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray53);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray53);
        io.swagger.annotations.Api api57 = null;
        boolean boolean58 = springMvcApiReader2.canReadApi(true, api57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader2.LOG;
        io.swagger.annotations.ApiOperation apiOperation60 = null;
        io.swagger.models.Operation operation61 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation60, operation61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(parameterList40);
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter59);
    }

    @Test
    public void test9201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9201");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        springMvcApiReader2.LOG = logAdapter15;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader19.typesToSkip;
        springMvcApiReader19.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader19.typesToSkip;
        springMvcApiReader19.updateExtensionChain();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        io.swagger.models.Swagger swagger27 = springMvcApiReader26.swagger;
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader30.typesToSkip;
        java.lang.String[] strArray35 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray38 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap39 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray40 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList41 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList41, securityRequirementArray40);
        io.swagger.models.Operation operation43 = null;
        springMvcApiReader30.updateOperation(strArray35, strArray38, strMap39, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList41, operation43);
        java.lang.Class<?> wildcardClass45 = strArray35.getClass();
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader26.parseOperationPath("/hi!", strMap48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.reflect.Type type53 = null;
        java.lang.annotation.Annotation[] annotationArray54 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList55 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList55, annotationArray54);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList57 = springMvcApiReader52.getParameters(type53, (java.util.List<java.lang.annotation.Annotation>) annotationList55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray58 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap59 = springMvcApiReader52.parseResponseHeaders(responseHeaderArray58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        springMvcApiReader52.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.reflect.Type type66 = null;
        java.lang.annotation.Annotation[] annotationArray67 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList68 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList68, annotationArray67);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList70 = springMvcApiReader65.getParameters(type66, (java.util.List<java.lang.annotation.Annotation>) annotationList68);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray71 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader65.parseResponseHeaders(responseHeaderArray71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        springMvcApiReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        io.swagger.models.Swagger swagger76 = springMvcApiReader65.swagger;
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] { wildcardClass78 };
        java.util.ArrayList<java.lang.reflect.Type> typeList80 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList80, typeArray79);
        springMvcApiReader65.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList80);
        springMvcApiReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList80);
        springMvcApiReader26.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList80);
        springMvcApiReader19.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList80);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList80);
        io.swagger.annotations.Api api87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet88 = springMvcApiReader2.extractTags(api87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNull(swagger27);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(securityRequirementArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/hi!" + "'", str49, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(parameterList57);
        org.junit.Assert.assertNotNull(responseHeaderArray58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(annotationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(parameterList70);
        org.junit.Assert.assertNotNull(responseHeaderArray71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNull(swagger76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test9202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9202");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray28 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap29 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray28);
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader27.swagger = swagger30;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = springMvcApiReader27.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader27.parseOperationPath("", strMap34);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        springMvcApiReader27.LOG = logAdapter36;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        springMvcApiReader27.LOG = logAdapter38;
        springMvcApiReader27.updateExtensionChain();
        java.lang.Class<?> wildcardClass41 = springMvcApiReader27.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(logAdapter32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test9203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9203");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type type54 = null;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList58 = springMvcApiReader53.getParameters(type54, (java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        springMvcApiReader2.LOG = logAdapter61;
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader2.parseOperationPath("", strMap65);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(parameterList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
    }

    @Test
    public void test9204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9204");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader26.typesToSkip;
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader26.swagger = swagger28;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader26.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet30;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        springMvcApiReader2.LOG = logAdapter32;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList41 = springMvcApiReader36.getParameters(type37, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader44.typesToSkip;
        springMvcApiReader44.updateExtensionChain();
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray55 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap56 = springMvcApiReader49.parseResponseHeaders(responseHeaderArray55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        springMvcApiReader49.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass58);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray63 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap64 = springMvcApiReader62.parseResponseHeaders(responseHeaderArray63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type type68 = null;
        java.lang.annotation.Annotation[] annotationArray69 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList70 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList70, annotationArray69);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList72 = springMvcApiReader67.getParameters(type68, (java.util.List<java.lang.annotation.Annotation>) annotationList70);
        boolean boolean73 = springMvcApiReader62.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList70);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList74 = springMvcApiReader44.getParameters((java.lang.reflect.Type) wildcardClass58, (java.util.List<java.lang.annotation.Annotation>) annotationList70);
        springMvcApiReader44.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader44.getTypesToSkip();
        java.lang.Class<?> wildcardClass77 = typeSet76.getClass();
        springMvcApiReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        springMvcApiReader36.updateExtensionChain();
        io.swagger.models.Swagger swagger80 = null;
        springMvcApiReader36.swagger = swagger80;
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader36.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet82;
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(parameterList41);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertNotNull(responseHeaderArray55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(annotationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(parameterList72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(parameterList74);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeSet82);
    }

    @Test
    public void test9205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9205");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        boolean boolean24 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader13.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        springMvcApiReader29.LOG = logAdapter36;
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type type46 = null;
        java.lang.annotation.Annotation[] annotationArray47 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList48 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList48, annotationArray47);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList50 = springMvcApiReader45.getParameters(type46, (java.util.List<java.lang.annotation.Annotation>) annotationList48);
        boolean boolean51 = springMvcApiReader40.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList48);
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader40.getTypesToSkip();
        springMvcApiReader29.setTypesToSkip(typeSet52);
        springMvcApiReader2.setTypesToSkip(typeSet52);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api57 = null;
        boolean boolean58 = springMvcApiReader2.canReadApi(false, api57);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader2.parseOperationPath("", strMap60);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(annotationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(parameterList50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test9206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9206");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation12 = null;
        io.swagger.annotations.ApiOperation apiOperation13 = null;
        springMvcApiReader2.updateTagsForOperation(operation12, apiOperation13);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(logAdapter7);
    }

    @Test
    public void test9207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9207");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] { wildcardClass33 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader24.typesToSkip = typeSet35;
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader16.parseOperationPath("hi!", strMap40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray42);
        io.swagger.models.Operation operation44 = null;
        io.swagger.annotations.ApiOperation apiOperation45 = null;
        springMvcApiReader16.updateTagsForOperation(operation44, apiOperation45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        java.util.Set<java.lang.reflect.Type> typeSet55 = null;
        springMvcApiReader49.typesToSkip = typeSet55;
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader49.parseOperationPath("/hi!", strMap58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader49.typesToSkip;
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type type64 = null;
        java.lang.annotation.Annotation[] annotationArray65 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList66 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList66, annotationArray65);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList68 = springMvcApiReader63.getParameters(type64, (java.util.List<java.lang.annotation.Annotation>) annotationList66);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader63.parseResponseHeaders(responseHeaderArray69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        springMvcApiReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList77 = springMvcApiReader49.getParameters((java.lang.reflect.Type) wildcardClass72, (java.util.List<java.lang.annotation.Annotation>) annotationList75);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        io.swagger.models.Swagger swagger80 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap82 = null;
        java.lang.String str83 = springMvcApiReader2.parseOperationPath("hi!", strMap82);
        io.swagger.models.Operation operation84 = null;
        io.swagger.annotations.ApiOperation apiOperation85 = null;
        springMvcApiReader2.updateTagsForOperation(operation84, apiOperation85);
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet88 = null;
        springMvcApiReader2.typesToSkip = typeSet88;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/hi!" + "'", str41, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNull(typeSet60);
        org.junit.Assert.assertNotNull(annotationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(parameterList68);
        org.junit.Assert.assertNotNull(responseHeaderArray69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(parameterList77);
        org.junit.Assert.assertNull(swagger80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "/hi!" + "'", str83, "/hi!");
        org.junit.Assert.assertNotNull(typeSet87);
    }

    @Test
    public void test9208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9208");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader21.typesToSkip;
        springMvcApiReader21.updateExtensionChain();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type type27 = null;
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList31 = springMvcApiReader26.getParameters(type27, (java.util.List<java.lang.annotation.Annotation>) annotationList29);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass35, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger49 = null;
        springMvcApiReader2.swagger = swagger49;
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation52 = null;
        io.swagger.annotations.ApiResponses apiResponses53 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation52, apiResponses53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(parameterList31);
        org.junit.Assert.assertNotNull(responseHeaderArray32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertNotNull(typeSet51);
    }

    @Test
    public void test9209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9209");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader23.typesToSkip;
        springMvcApiReader23.updateExtensionChain();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader23.setTypesToSkip(typeSet30);
        springMvcApiReader2.setTypesToSkip(typeSet30);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader2.canReadApi(false, api34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger37 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader2.parseOperationPath("/hi!", strMap39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api43 = null;
        boolean boolean44 = springMvcApiReader2.canReadApi(false, api43);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource45 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger46 = springMvcApiReader2.read(springResource45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNull(swagger37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test9210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9210");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray28 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap29 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray28);
        io.swagger.annotations.Api api31 = null;
        boolean boolean32 = springMvcApiReader2.canReadApi(true, api31);
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger37 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(swagger37);
    }

    @Test
    public void test9211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9211");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type type6 = null;
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList10 = springMvcApiReader5.getParameters(type6, (java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type type14 = null;
        java.lang.annotation.Annotation[] annotationArray15 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList16 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList16, annotationArray15);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList18 = springMvcApiReader13.getParameters(type14, (java.util.List<java.lang.annotation.Annotation>) annotationList16);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray19 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap20 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] { wildcardClass22 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader13.typesToSkip = typeSet24;
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader5.parseOperationPath("hi!", strMap29);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader5.parseResponseHeaders(responseHeaderArray31);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader35.typesToSkip;
        springMvcApiReader35.updateExtensionChain();
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray46 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap47 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        springMvcApiReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray54 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader53.parseResponseHeaders(responseHeaderArray54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type type59 = null;
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader58.getParameters(type59, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean64 = springMvcApiReader53.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader35.getParameters((java.lang.reflect.Type) wildcardClass49, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean66 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean67 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        springMvcApiReader2.LOG = logAdapter70;
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(parameterList10);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(parameterList18);
        org.junit.Assert.assertNotNull(responseHeaderArray19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(responseHeaderArray46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(logAdapter68);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(typeSet72);
    }

    @Test
    public void test9212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9212");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet4 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList13 = springMvcApiReader8.getParameters(type9, (java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader8.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        springMvcApiReader8.LOG = logAdapter20;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader8.LOG;
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        io.swagger.models.Swagger swagger26 = springMvcApiReader25.swagger;
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader29.typesToSkip;
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray37 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap38 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray39 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList40 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList40, securityRequirementArray39);
        io.swagger.models.Operation operation42 = null;
        springMvcApiReader29.updateOperation(strArray34, strArray37, strMap38, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList40, operation42);
        java.lang.Class<?> wildcardClass44 = strArray34.getClass();
        springMvcApiReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader25.parseOperationPath("/hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type type52 = null;
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList56 = springMvcApiReader51.getParameters(type52, (java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader51.parseResponseHeaders(responseHeaderArray57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        springMvcApiReader51.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList69 = springMvcApiReader64.getParameters(type65, (java.util.List<java.lang.annotation.Annotation>) annotationList67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray70 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader64.parseResponseHeaders(responseHeaderArray70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        springMvcApiReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        io.swagger.models.Swagger swagger75 = springMvcApiReader64.swagger;
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] { wildcardClass77 };
        java.util.ArrayList<java.lang.reflect.Type> typeList79 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList79, typeArray78);
        springMvcApiReader64.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        springMvcApiReader51.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        springMvcApiReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        springMvcApiReader8.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet4);
        org.junit.Assert.assertNull(logAdapter5);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parameterList13);
        org.junit.Assert.assertNotNull(responseHeaderArray14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertNull(swagger26);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(securityRequirementArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(parameterList56);
        org.junit.Assert.assertNotNull(responseHeaderArray57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(parameterList69);
        org.junit.Assert.assertNotNull(responseHeaderArray70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNull(swagger75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test9213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9213");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader2.canReadApi(false, api59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger62 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation63 = null;
        io.swagger.annotations.ApiOperation apiOperation64 = null;
        springMvcApiReader2.updateTagsForOperation(operation63, apiOperation64);
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        boolean boolean69 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        io.swagger.models.Operation operation70 = null;
        io.swagger.annotations.ApiOperation apiOperation71 = null;
        springMvcApiReader2.updateTagsForOperation(operation70, apiOperation71);
        io.swagger.models.Swagger swagger73 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(typeSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(typeSet61);
        org.junit.Assert.assertNull(swagger62);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(swagger73);
        org.junit.Assert.assertNull(typeSet74);
    }

    @Test
    public void test9214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9214");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        boolean boolean22 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        springMvcApiReader25.LOG = logAdapter33;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList42 = springMvcApiReader37.getParameters(type38, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray43 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        springMvcApiReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Swagger swagger48 = springMvcApiReader37.swagger;
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass50 };
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        springMvcApiReader37.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        springMvcApiReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        io.swagger.models.Swagger swagger56 = null;
        springMvcApiReader25.swagger = swagger56;
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        io.swagger.models.Swagger swagger61 = null;
        springMvcApiReader60.swagger = swagger61;
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.reflect.Type type66 = null;
        java.lang.annotation.Annotation[] annotationArray67 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList68 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList68, annotationArray67);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList70 = springMvcApiReader65.getParameters(type66, (java.util.List<java.lang.annotation.Annotation>) annotationList68);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray71 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader65.parseResponseHeaders(responseHeaderArray71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] { wildcardClass74 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet76 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet76, typeArray75);
        springMvcApiReader65.typesToSkip = typeSet76;
        springMvcApiReader60.typesToSkip = typeSet76;
        springMvcApiReader25.typesToSkip = typeSet76;
        springMvcApiReader2.typesToSkip = typeSet76;
        io.swagger.models.Swagger swagger82 = springMvcApiReader2.swagger;
        java.util.List<java.lang.reflect.Type> typeList83 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.setTypesToSkip(typeList83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(parameterList42);
        org.junit.Assert.assertNotNull(responseHeaderArray43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(swagger48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(annotationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(parameterList70);
        org.junit.Assert.assertNotNull(responseHeaderArray71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(swagger82);
    }

    @Test
    public void test9215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9215");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        io.swagger.models.Swagger swagger16 = null;
        springMvcApiReader15.swagger = swagger16;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList25 = springMvcApiReader20.getParameters(type21, (java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass29 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader20.typesToSkip = typeSet31;
        springMvcApiReader15.typesToSkip = typeSet31;
        springMvcApiReader2.typesToSkip = typeSet31;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        springMvcApiReader2.LOG = logAdapter36;
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader2.canReadApi(true, api39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation42 = null;
        io.swagger.annotations.ApiOperation apiOperation43 = null;
        springMvcApiReader2.updateTagsForOperation(operation42, apiOperation43);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(parameterList25);
        org.junit.Assert.assertNotNull(responseHeaderArray26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet41);
    }

    @Test
    public void test9216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9216");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        springMvcApiReader2.swagger = swagger3;
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api7 = null;
        boolean boolean8 = springMvcApiReader2.canReadApi(false, api7);
        java.lang.String[] strArray9 = null;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        java.lang.annotation.Annotation[] annotationArray14 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList15 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList15, annotationArray14);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList17 = springMvcApiReader12.getParameters(type13, (java.util.List<java.lang.annotation.Annotation>) annotationList15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList25 = springMvcApiReader20.getParameters(type21, (java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass29 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader20.typesToSkip = typeSet31;
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader12.parseOperationPath("hi!", strMap36);
        io.swagger.models.Operation operation38 = null;
        io.swagger.annotations.ApiOperation apiOperation39 = null;
        springMvcApiReader12.updateTagsForOperation(operation38, apiOperation39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList48 = springMvcApiReader43.getParameters(type44, (java.util.List<java.lang.annotation.Annotation>) annotationList46);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray49 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        springMvcApiReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader12.getTypesToSkip();
        java.lang.String[] strArray56 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "/hi!", "hi!", "/hi!", "", "/hi!" };
        io.swagger.models.Operation operation63 = null;
        java.lang.String[] strArray64 = springMvcApiReader12.updateOperationProduces(strArray56, strArray62, operation63);
        io.swagger.models.Operation operation65 = null;
        java.lang.String[] strArray66 = springMvcApiReader2.updateOperationConsumes(strArray9, strArray62, operation65);
        io.swagger.models.Swagger swagger67 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        springMvcApiReader2.LOG = logAdapter68;
        io.swagger.models.Operation operation72 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "/hi!", operation72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(parameterList17);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(parameterList25);
        org.junit.Assert.assertNotNull(responseHeaderArray26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(parameterList48);
        org.junit.Assert.assertNotNull(responseHeaderArray49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNull(swagger67);
    }

    @Test
    public void test9217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9217");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type type54 = null;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList58 = springMvcApiReader53.getParameters(type54, (java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        io.swagger.models.Swagger swagger60 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        springMvcApiReader2.LOG = logAdapter62;
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader2.swagger = swagger64;
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        io.swagger.models.Swagger swagger69 = null;
        springMvcApiReader68.swagger = swagger69;
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.reflect.Type type74 = null;
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList78 = springMvcApiReader73.getParameters(type74, (java.util.List<java.lang.annotation.Annotation>) annotationList76);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray79 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap80 = springMvcApiReader73.parseResponseHeaders(responseHeaderArray79);
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.reflect.Type[] typeArray83 = new java.lang.reflect.Type[] { wildcardClass82 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet84 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet84, typeArray83);
        springMvcApiReader73.typesToSkip = typeSet84;
        springMvcApiReader68.typesToSkip = typeSet84;
        io.swagger.models.Swagger swagger88 = null;
        springMvcApiReader68.swagger = swagger88;
        io.swagger.models.Swagger swagger90 = springMvcApiReader68.swagger;
        io.swagger.models.Operation operation91 = null;
        io.swagger.annotations.ApiOperation apiOperation92 = null;
        springMvcApiReader68.updateTagsForOperation(operation91, apiOperation92);
        java.util.Set<java.lang.reflect.Type> typeSet94 = springMvcApiReader68.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet94);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(parameterList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(swagger60);
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(parameterList78);
        org.junit.Assert.assertNotNull(responseHeaderArray79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(swagger90);
        org.junit.Assert.assertNotNull(typeSet94);
    }

    @Test
    public void test9218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9218");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader23.typesToSkip;
        springMvcApiReader23.updateExtensionChain();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader23.setTypesToSkip(typeSet30);
        springMvcApiReader2.setTypesToSkip(typeSet30);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader2.canReadApi(false, api34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger37 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation38 = null;
        io.swagger.annotations.ApiOperation apiOperation39 = null;
        springMvcApiReader2.updateTagsForOperation(operation38, apiOperation39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader2.parseOperationPath("", strMap42);
        java.lang.Class<?> wildcardClass44 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNull(swagger37);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test9219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9219");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet17;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader24.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        springMvcApiReader24.LOG = logAdapter36;
        java.lang.Class<?> wildcardClass38 = springMvcApiReader24.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader2.canReadApi(false, api41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api45 = null;
        boolean boolean46 = springMvcApiReader2.canReadApi(false, api45);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(typeSet48);
    }

    @Test
    public void test9220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9220");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray28 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap29 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray28);
        io.swagger.models.Operation operation30 = null;
        io.swagger.annotations.ApiOperation apiOperation31 = null;
        springMvcApiReader2.updateTagsForOperation(operation30, apiOperation31);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type type36 = null;
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList40 = springMvcApiReader35.getParameters(type36, (java.util.List<java.lang.annotation.Annotation>) annotationList38);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader35.parseResponseHeaders(responseHeaderArray41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader35.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader35.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader2.parseOperationPath("/hi!", strMap47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger50 = null;
        springMvcApiReader2.swagger = swagger50;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(parameterList40);
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNull(swagger49);
    }

    @Test
    public void test9221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9221");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray21);
        io.swagger.models.Swagger swagger23 = springMvcApiReader20.swagger;
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader20.swagger = swagger24;
        io.swagger.models.Swagger swagger26 = springMvcApiReader20.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader20.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet27);
        io.swagger.models.Operation operation31 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "/hi!", operation31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(swagger23);
        org.junit.Assert.assertNull(swagger26);
        org.junit.Assert.assertNotNull(typeSet27);
    }

    @Test
    public void test9222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9222");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Operation operation11 = null;
        io.swagger.annotations.ApiOperation apiOperation12 = null;
        springMvcApiReader2.updateTagsForOperation(operation11, apiOperation12);
        io.swagger.models.Swagger swagger14 = null;
        springMvcApiReader2.swagger = swagger14;
        io.swagger.models.Swagger swagger16 = null;
        springMvcApiReader2.swagger = swagger16;
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(typeSet18);
    }

    @Test
    public void test9223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9223");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader21.typesToSkip = typeSet27;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader21.parseOperationPath("/hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] { wildcardClass51 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader42.typesToSkip = typeSet53;
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader34.parseOperationPath("hi!", strMap58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader2.parseOperationPath("hi!", strMap65);
        io.swagger.models.Swagger swagger67 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader2.parseOperationPath("", strMap71);
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader75 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger73, logAdapter74);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray76 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader75.parseResponseHeaders(responseHeaderArray76);
        io.swagger.models.Swagger swagger78 = null;
        springMvcApiReader75.swagger = swagger78;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = springMvcApiReader75.LOG;
        springMvcApiReader75.updateExtensionChain();
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader84 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger82, logAdapter83);
        java.lang.reflect.Type type85 = null;
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList89 = springMvcApiReader84.getParameters(type85, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray90 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap91 = springMvcApiReader84.parseResponseHeaders(responseHeaderArray90);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter92 = springMvcApiReader84.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet93 = springMvcApiReader84.typesToSkip;
        springMvcApiReader75.typesToSkip = typeSet93;
        springMvcApiReader2.typesToSkip = typeSet93;
        io.swagger.annotations.Api api96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList97 = springMvcApiReader2.getSecurityRequirements(api96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!" + "'", str66, "/hi!");
        org.junit.Assert.assertNull(swagger67);
        org.junit.Assert.assertNull(logAdapter68);
        org.junit.Assert.assertNull(logAdapter69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(logAdapter80);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(parameterList89);
        org.junit.Assert.assertNotNull(responseHeaderArray90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNull(logAdapter92);
        org.junit.Assert.assertNotNull(typeSet93);
    }

    @Test
    public void test9224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9224");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(false, api29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader2.canReadApi(false, api33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray36 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap37 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray36);
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader2.canReadApi(false, api39);
        io.swagger.annotations.Api api42 = null;
        boolean boolean43 = springMvcApiReader2.canReadApi(false, api42);
        io.swagger.annotations.Api api44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet45 = springMvcApiReader2.extractTags(api44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test9225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9225");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader2.parseOperationPath("", strMap24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(logAdapter26);
    }

    @Test
    public void test9226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9226");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet17;
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        springMvcApiReader2.LOG = logAdapter21;
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] { wildcardClass42 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader33.typesToSkip = typeSet44;
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader25.parseOperationPath("hi!", strMap49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray51 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap52 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray51);
        io.swagger.models.Operation operation53 = null;
        io.swagger.annotations.ApiOperation apiOperation54 = null;
        springMvcApiReader25.updateTagsForOperation(operation53, apiOperation54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type type59 = null;
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader58.getParameters(type59, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray64 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap65 = springMvcApiReader58.parseResponseHeaders(responseHeaderArray64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = springMvcApiReader58.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader58.getTypesToSkip();
        springMvcApiReader25.setTypesToSkip(typeSet67);
        springMvcApiReader2.typesToSkip = typeSet67;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation71 = null;
        io.swagger.annotations.ApiOperation apiOperation72 = null;
        springMvcApiReader2.updateTagsForOperation(operation71, apiOperation72);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader2.parseOperationPath("/hi!", strMap75);
        io.swagger.models.Operation operation77 = null;
        io.swagger.annotations.ApiOperation apiOperation78 = null;
        springMvcApiReader2.updateTagsForOperation(operation77, apiOperation78);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "/hi!" + "'", str50, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertNotNull(responseHeaderArray64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(logAdapter66);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNull(logAdapter70);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
    }

    @Test
    public void test9227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9227");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader7.typesToSkip;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray15 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap16 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray17 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList18 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList18, securityRequirementArray17);
        io.swagger.models.Operation operation20 = null;
        springMvcApiReader7.updateOperation(strArray12, strArray15, strMap16, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList18, operation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader7.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader2.swagger = swagger27;
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger4);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(securityRequirementArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNull(logAdapter26);
    }

    @Test
    public void test9228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9228");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        boolean boolean31 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass16, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        io.swagger.annotations.Api api37 = null;
        boolean boolean38 = springMvcApiReader2.canReadApi(false, api37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader41.parseResponseHeaders(responseHeaderArray42);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader41.swagger = swagger44;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        io.swagger.models.Swagger swagger50 = springMvcApiReader41.swagger;
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader53.typesToSkip;
        java.lang.String[] strArray58 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray61 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap62 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray63 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList64 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList64, securityRequirementArray63);
        io.swagger.models.Operation operation66 = null;
        springMvcApiReader53.updateOperation(strArray58, strArray61, strMap62, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList64, operation66);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader53.parseOperationPath("hi!", strMap69);
        io.swagger.models.Swagger swagger71 = null;
        springMvcApiReader53.swagger = swagger71;
        java.lang.Class<?> wildcardClass73 = springMvcApiReader53.getClass();
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader76.typesToSkip;
        springMvcApiReader76.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader76.typesToSkip;
        io.swagger.models.Swagger swagger80 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader82 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger80, logAdapter81);
        java.lang.reflect.Type type83 = null;
        java.lang.annotation.Annotation[] annotationArray84 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList85 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList85, annotationArray84);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList87 = springMvcApiReader82.getParameters(type83, (java.util.List<java.lang.annotation.Annotation>) annotationList85);
        boolean boolean88 = springMvcApiReader76.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList85);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList89 = springMvcApiReader41.getParameters((java.lang.reflect.Type) wildcardClass73, (java.util.List<java.lang.annotation.Annotation>) annotationList85);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = null;
        io.swagger.models.Operation operation91 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList89, strMap90, operation91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(swagger50);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(securityRequirementArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(annotationArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(parameterList87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(parameterList89);
    }

    @Test
    public void test9229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9229");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type type54 = null;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList58 = springMvcApiReader53.getParameters(type54, (java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        springMvcApiReader2.LOG = logAdapter61;
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray67 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap68 = springMvcApiReader66.parseResponseHeaders(responseHeaderArray67);
        io.swagger.models.Swagger swagger69 = springMvcApiReader66.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        springMvcApiReader66.LOG = logAdapter70;
        io.swagger.models.Swagger swagger72 = null;
        springMvcApiReader66.swagger = swagger72;
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader66.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader66.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet75);
        java.lang.Class<?> wildcardClass77 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(parameterList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(swagger69);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test9230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9230");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("", strMap16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader2.parseOperationPath("", strMap19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNull(logAdapter14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(logAdapter21);
    }

    @Test
    public void test9231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9231");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation20 = null;
        io.swagger.annotations.ApiOperation apiOperation21 = null;
        springMvcApiReader2.updateTagsForOperation(operation20, apiOperation21);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(typeSet19);
    }

    @Test
    public void test9232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9232");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList13 = springMvcApiReader8.getParameters(type9, (java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray22 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap23 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass25 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader16.typesToSkip = typeSet27;
        springMvcApiReader8.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader8.parseOperationPath("hi!", strMap32);
        io.swagger.models.Operation operation34 = null;
        io.swagger.annotations.ApiOperation apiOperation35 = null;
        springMvcApiReader8.updateTagsForOperation(operation34, apiOperation35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader8.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet37;
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger4);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parameterList13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(responseHeaderArray22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/hi!" + "'", str33, "/hi!");
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(typeSet39);
    }

    @Test
    public void test9233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9233");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet17;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api21 = null;
        boolean boolean22 = springMvcApiReader2.canReadApi(false, api21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader2.parseOperationPath("", strMap24);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test9234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9234");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        springMvcApiReader2.LOG = logAdapter20;
        io.swagger.models.Operation operation22 = null;
        io.swagger.annotations.ApiOperation apiOperation23 = null;
        springMvcApiReader2.updateTagsForOperation(operation22, apiOperation23);
        io.swagger.models.Operation operation25 = null;
        io.swagger.annotations.ApiOperation apiOperation26 = null;
        springMvcApiReader2.updateTagsForOperation(operation25, apiOperation26);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
    }

    @Test
    public void test9235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9235");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader7.typesToSkip;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray15 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap16 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray17 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList18 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList18, securityRequirementArray17);
        io.swagger.models.Operation operation20 = null;
        springMvcApiReader7.updateOperation(strArray12, strArray15, strMap16, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList18, operation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader7.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader26.typesToSkip;
        springMvcApiReader26.updateExtensionChain();
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader31.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader31.getTypesToSkip();
        springMvcApiReader26.setTypesToSkip(typeSet33);
        springMvcApiReader2.setTypesToSkip(typeSet33);
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        springMvcApiReader2.updateTagsForOperation(operation36, apiOperation37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation40 = null;
        io.swagger.annotations.ApiOperation apiOperation41 = null;
        springMvcApiReader2.updateTagsForOperation(operation40, apiOperation41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api46 = null;
        boolean boolean47 = springMvcApiReader2.canReadApi(false, api46);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type type52 = null;
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList56 = springMvcApiReader51.getParameters(type52, (java.util.List<java.lang.annotation.Annotation>) annotationList54);
        java.util.Set<java.lang.reflect.Type> typeSet57 = null;
        springMvcApiReader51.typesToSkip = typeSet57;
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader51.parseOperationPath("/hi!", strMap60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader51.typesToSkip;
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.reflect.Type type66 = null;
        java.lang.annotation.Annotation[] annotationArray67 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList68 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList68, annotationArray67);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList70 = springMvcApiReader65.getParameters(type66, (java.util.List<java.lang.annotation.Annotation>) annotationList68);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray71 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader65.parseResponseHeaders(responseHeaderArray71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        springMvcApiReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        java.lang.annotation.Annotation[] annotationArray76 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList77 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList77, annotationArray76);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList79 = springMvcApiReader51.getParameters((java.lang.reflect.Type) wildcardClass74, (java.util.List<java.lang.annotation.Annotation>) annotationList77);
        java.util.Map<java.lang.String, java.lang.String> strMap80 = null;
        io.swagger.models.Operation operation81 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList79, strMap80, operation81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger4);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(securityRequirementArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(parameterList56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "/hi!" + "'", str61, "/hi!");
        org.junit.Assert.assertNull(typeSet62);
        org.junit.Assert.assertNotNull(annotationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(parameterList70);
        org.junit.Assert.assertNotNull(responseHeaderArray71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(annotationArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(parameterList79);
    }

    @Test
    public void test9236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9236");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Operation operation11 = null;
        io.swagger.annotations.ApiOperation apiOperation12 = null;
        springMvcApiReader2.updateTagsForOperation(operation11, apiOperation12);
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(logAdapter17);
    }

    @Test
    public void test9237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9237");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader22.typesToSkip;
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader22.updateTagsForOperation(operation24, apiOperation25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader29.typesToSkip;
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray37 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap38 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray39 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList40 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList40, securityRequirementArray39);
        io.swagger.models.Operation operation42 = null;
        springMvcApiReader29.updateOperation(strArray34, strArray37, strMap38, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList40, operation42);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader29.swagger = swagger44;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader48.typesToSkip;
        springMvcApiReader48.updateExtensionChain();
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type type54 = null;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList58 = springMvcApiReader53.getParameters(type54, (java.util.List<java.lang.annotation.Annotation>) annotationList56);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray59 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap60 = springMvcApiReader53.parseResponseHeaders(responseHeaderArray59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        springMvcApiReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        springMvcApiReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type type68 = null;
        java.lang.annotation.Annotation[] annotationArray69 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList70 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList70, annotationArray69);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList72 = springMvcApiReader67.getParameters(type68, (java.util.List<java.lang.annotation.Annotation>) annotationList70);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList73 = springMvcApiReader29.getParameters((java.lang.reflect.Type) wildcardClass62, (java.util.List<java.lang.annotation.Annotation>) annotationList70);
        boolean boolean74 = springMvcApiReader22.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList70);
        boolean boolean75 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList70);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        springMvcApiReader2.LOG = logAdapter76;
        io.swagger.models.Swagger swagger78 = springMvcApiReader2.swagger;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass79 = swagger78.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(securityRequirementArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(parameterList58);
        org.junit.Assert.assertNotNull(responseHeaderArray59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(annotationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(parameterList72);
        org.junit.Assert.assertNotNull(parameterList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(swagger78);
    }

    @Test
    public void test9238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9238");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader16.typesToSkip;
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray24 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap25 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray26 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList27 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList27, securityRequirementArray26);
        io.swagger.models.Operation operation29 = null;
        springMvcApiReader16.updateOperation(strArray21, strArray24, strMap25, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList27, operation29);
        io.swagger.models.Swagger swagger31 = null;
        springMvcApiReader16.swagger = swagger31;
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type type36 = null;
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList40 = springMvcApiReader35.getParameters(type36, (java.util.List<java.lang.annotation.Annotation>) annotationList38);
        java.util.Set<java.lang.reflect.Type> typeSet41 = null;
        springMvcApiReader35.typesToSkip = typeSet41;
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader35.parseOperationPath("/hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList53 = springMvcApiReader48.getParameters(type49, (java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type type57 = null;
        java.lang.annotation.Annotation[] annotationArray58 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList59 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList59, annotationArray58);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList61 = springMvcApiReader56.getParameters(type57, (java.util.List<java.lang.annotation.Annotation>) annotationList59);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray62 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] { wildcardClass65 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet67 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet67, typeArray66);
        springMvcApiReader56.typesToSkip = typeSet67;
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet67);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        java.lang.String str73 = springMvcApiReader48.parseOperationPath("hi!", strMap72);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray74 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray74);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap76 = springMvcApiReader35.parseResponseHeaders(responseHeaderArray74);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray74);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader16.parseOperationPath("hi!", strMap79);
        io.swagger.models.Swagger swagger81 = springMvcApiReader16.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = springMvcApiReader16.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = springMvcApiReader16.LOG;
        java.lang.Class<?> wildcardClass84 = springMvcApiReader16.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(securityRequirementArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(parameterList40);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(parameterList53);
        org.junit.Assert.assertNotNull(annotationArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(parameterList61);
        org.junit.Assert.assertNotNull(responseHeaderArray62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/hi!" + "'", str73, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "/hi!" + "'", str80, "/hi!");
        org.junit.Assert.assertNull(swagger81);
        org.junit.Assert.assertNull(logAdapter82);
        org.junit.Assert.assertNull(logAdapter83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test9239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9239");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = null;
        springMvcApiReader2.swagger = swagger6;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type type14 = null;
        java.lang.annotation.Annotation[] annotationArray15 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList16 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList16, annotationArray15);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList18 = springMvcApiReader13.getParameters(type14, (java.util.List<java.lang.annotation.Annotation>) annotationList16);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] { wildcardClass30 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader21.typesToSkip = typeSet32;
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader13.parseOperationPath("hi!", strMap37);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass10, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.annotations.Api api45 = null;
        boolean boolean46 = springMvcApiReader2.canReadApi(true, api45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(parameterList18);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(responseHeaderArray27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(typeSet47);
    }

    @Test
    public void test9240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9240");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        springMvcApiReader2.swagger = swagger3;
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api7 = null;
        boolean boolean8 = springMvcApiReader2.canReadApi(false, api7);
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger10 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] { wildcardClass33 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader24.typesToSkip = typeSet35;
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader16.parseOperationPath("hi!", strMap40);
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        boolean boolean45 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList43);
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader16.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader16.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        springMvcApiReader16.LOG = logAdapter48;
        io.swagger.annotations.Api api51 = null;
        boolean boolean52 = springMvcApiReader16.canReadApi(false, api51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type type56 = null;
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList60 = springMvcApiReader55.getParameters(type56, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        java.util.Set<java.lang.reflect.Type> typeSet61 = null;
        springMvcApiReader55.typesToSkip = typeSet61;
        springMvcApiReader55.updateExtensionChain();
        java.lang.Class<?> wildcardClass64 = springMvcApiReader55.getClass();
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader67.typesToSkip;
        java.lang.String[] strArray72 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray75 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader67.updateOperation(strArray72, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Swagger swagger82 = null;
        springMvcApiReader67.swagger = swagger82;
        java.lang.annotation.Annotation[] annotationArray84 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList85 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList85, annotationArray84);
        boolean boolean87 = springMvcApiReader67.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList85);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList88 = springMvcApiReader16.getParameters((java.lang.reflect.Type) wildcardClass64, (java.util.List<java.lang.annotation.Annotation>) annotationList85);
        java.util.Map<java.lang.String, java.lang.String> strMap89 = null;
        io.swagger.models.Operation operation90 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList88, strMap89, operation90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(typeSet9);
        org.junit.Assert.assertNull(swagger10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/hi!" + "'", str41, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(parameterList60);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(annotationArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(parameterList88);
    }

    @Test
    public void test9241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9241");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource17 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger18 = springMvcApiReader2.read(springResource17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(typeSet16);
    }

    @Test
    public void test9242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9242");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray22 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap23 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass25, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        springMvcApiReader2.LOG = logAdapter31;
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        io.swagger.annotations.Api api37 = null;
        boolean boolean38 = springMvcApiReader2.canReadApi(true, api37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type type42 = null;
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader41.getParameters(type42, (java.util.List<java.lang.annotation.Annotation>) annotationList44);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader41.parseResponseHeaders(responseHeaderArray47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = springMvcApiReader41.LOG;
        io.swagger.models.Swagger swagger50 = springMvcApiReader41.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader41.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet51);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger54 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList56 = springMvcApiReader2.getSecurityRequirements(api55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNull(typeSet13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(responseHeaderArray22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(logAdapter49);
        org.junit.Assert.assertNull(swagger50);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNull(swagger54);
    }

    @Test
    public void test9243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9243");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Operation operation11 = null;
        io.swagger.annotations.ApiOperation apiOperation12 = null;
        springMvcApiReader2.updateTagsForOperation(operation11, apiOperation12);
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("", strMap18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation21 = null;
        io.swagger.annotations.ApiOperation apiOperation22 = null;
        springMvcApiReader2.updateTagsForOperation(operation21, apiOperation22);
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        io.swagger.models.Operation operation29 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "hi!", operation29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(logAdapter20);
    }

    @Test
    public void test9244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9244");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader2.parseOperationPath("hi!", strMap21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader2.parseOperationPath("hi!", strMap24);
        io.swagger.models.Swagger swagger26 = null;
        springMvcApiReader2.swagger = swagger26;
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type type31 = null;
        java.lang.annotation.Annotation[] annotationArray32 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList33 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList33, annotationArray32);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList35 = springMvcApiReader30.getParameters(type31, (java.util.List<java.lang.annotation.Annotation>) annotationList33);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray36 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap37 = springMvcApiReader30.parseResponseHeaders(responseHeaderArray36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass39 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader30.typesToSkip = typeSet41;
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader30.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        springMvcApiReader30.LOG = logAdapter45;
        io.swagger.models.Operation operation47 = null;
        io.swagger.annotations.ApiOperation apiOperation48 = null;
        springMvcApiReader30.updateTagsForOperation(operation47, apiOperation48);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader30.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        springMvcApiReader30.LOG = logAdapter51;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader30.LOG;
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray57);
        io.swagger.models.Swagger swagger59 = springMvcApiReader56.swagger;
        io.swagger.models.Swagger swagger60 = null;
        springMvcApiReader56.swagger = swagger60;
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader56.typesToSkip;
        springMvcApiReader30.typesToSkip = typeSet62;
        springMvcApiReader2.typesToSkip = typeSet62;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList67 = springMvcApiReader2.getSecurityRequirements(api66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/hi!" + "'", str22, "/hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(parameterList35);
        org.junit.Assert.assertNotNull(responseHeaderArray36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(swagger59);
        org.junit.Assert.assertNotNull(typeSet62);
    }

    @Test
    public void test9245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9245");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader2.canReadApi(false, api59);
        io.swagger.models.Swagger swagger61 = null;
        springMvcApiReader2.swagger = swagger61;
        io.swagger.models.Swagger swagger63 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(typeSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(swagger63);
        org.junit.Assert.assertNull(typeSet65);
    }

    @Test
    public void test9246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9246");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader2.parseOperationPath("hi!", strMap17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList34 = springMvcApiReader29.getParameters(type30, (java.util.List<java.lang.annotation.Annotation>) annotationList32);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray35 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap36 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass38 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader29.typesToSkip = typeSet40;
        springMvcApiReader21.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader21.parseOperationPath("hi!", strMap45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray47);
        io.swagger.models.Operation operation49 = null;
        io.swagger.annotations.ApiOperation apiOperation50 = null;
        springMvcApiReader21.updateTagsForOperation(operation49, apiOperation50);
        io.swagger.models.Swagger swagger52 = springMvcApiReader21.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader21.getTypesToSkip();
        java.lang.Class<?> wildcardClass54 = typeSet53.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        java.util.Set<java.lang.reflect.Type> typeSet56 = null;
        springMvcApiReader2.typesToSkip = typeSet56;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/hi!" + "'", str18, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(parameterList34);
        org.junit.Assert.assertNotNull(responseHeaderArray35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(swagger52);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test9247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9247");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = null;
        springMvcApiReader2.swagger = swagger6;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader11.swagger = swagger12;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader11.LOG = logAdapter14;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        io.swagger.models.Swagger swagger19 = springMvcApiReader18.swagger;
        io.swagger.models.Swagger swagger20 = springMvcApiReader18.swagger;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader23.typesToSkip;
        java.lang.String[] strArray28 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray31 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap32 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray33 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList34 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList34, securityRequirementArray33);
        io.swagger.models.Operation operation36 = null;
        springMvcApiReader23.updateOperation(strArray28, strArray31, strMap32, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList34, operation36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader23.typesToSkip;
        springMvcApiReader18.setTypesToSkip(typeSet38);
        springMvcApiReader11.setTypesToSkip(typeSet38);
        springMvcApiReader2.typesToSkip = typeSet38;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type type45 = null;
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList49 = springMvcApiReader44.getParameters(type45, (java.util.List<java.lang.annotation.Annotation>) annotationList47);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray50 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap51 = springMvcApiReader44.parseResponseHeaders(responseHeaderArray50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader44.LOG;
        io.swagger.models.Swagger swagger53 = springMvcApiReader44.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader44.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet54;
        io.swagger.models.Swagger swagger56 = null;
        springMvcApiReader2.swagger = swagger56;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        springMvcApiReader2.LOG = logAdapter58;
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNull(swagger19);
        org.junit.Assert.assertNull(swagger20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(securityRequirementArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(parameterList49);
        org.junit.Assert.assertNotNull(responseHeaderArray50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertNull(swagger53);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(typeSet60);
    }

    @Test
    public void test9248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9248");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Operation operation11 = null;
        io.swagger.annotations.ApiOperation apiOperation12 = null;
        springMvcApiReader2.updateTagsForOperation(operation11, apiOperation12);
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        io.swagger.models.Swagger swagger17 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger18 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation21 = null;
        io.swagger.annotations.ApiOperation apiOperation22 = null;
        springMvcApiReader2.updateTagsForOperation(operation21, apiOperation22);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(swagger17);
        org.junit.Assert.assertNull(swagger18);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNull(logAdapter20);
    }

    @Test
    public void test9249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9249");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(false, api29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap32 = null;
        io.swagger.annotations.Api api33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = springMvcApiReader2.updateTagsForApi(strMap32, api33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter31);
    }

    @Test
    public void test9250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9250");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(true, api29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader33.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader33.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        springMvcApiReader2.LOG = logAdapter37;
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader2.parseOperationPath("", strMap40);
        io.swagger.annotations.Api api42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList43 = springMvcApiReader2.getSecurityRequirements(api42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test9251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9251");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api53 = null;
        boolean boolean54 = springMvcApiReader2.canReadApi(false, api53);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test9252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9252");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet5 = null;
        springMvcApiReader2.setTypesToSkip(typeSet5);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        java.lang.Class<?> wildcardClass10 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test9253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9253");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray28 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap29 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray28);
        io.swagger.models.Operation operation30 = null;
        io.swagger.annotations.ApiOperation apiOperation31 = null;
        springMvcApiReader2.updateTagsForOperation(operation30, apiOperation31);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader2.canReadApi(true, api34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader2.parseOperationPath("hi!", strMap37);
        io.swagger.models.Operation operation39 = null;
        io.swagger.annotations.ApiOperation apiOperation40 = null;
        springMvcApiReader2.updateTagsForOperation(operation39, apiOperation40);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.annotations.Api api43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap44 = springMvcApiReader2.updateTagsForApi(strMap42, api43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
    }

    @Test
    public void test9254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9254");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        springMvcApiReader2.LOG = logAdapter26;
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api30 = null;
        boolean boolean31 = springMvcApiReader2.canReadApi(true, api30);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test9255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9255");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("/hi!", strMap12);
        io.swagger.models.Swagger swagger14 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("hi!", strMap16);
        io.swagger.annotations.Api api19 = null;
        boolean boolean20 = springMvcApiReader2.canReadApi(false, api19);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/hi!" + "'", str13, "/hi!");
        org.junit.Assert.assertNull(swagger14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test9256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9256");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger18 = null;
        springMvcApiReader2.swagger = swagger18;
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray23 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap24 = springMvcApiReader22.parseResponseHeaders(responseHeaderArray23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        springMvcApiReader22.LOG = logAdapter29;
        io.swagger.models.Operation operation31 = null;
        io.swagger.annotations.ApiOperation apiOperation32 = null;
        springMvcApiReader22.updateTagsForOperation(operation31, apiOperation32);
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader22.swagger = swagger34;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader38.getParameters(type39, (java.util.List<java.lang.annotation.Annotation>) annotationList41);
        java.util.Set<java.lang.reflect.Type> typeSet44 = null;
        springMvcApiReader38.typesToSkip = typeSet44;
        springMvcApiReader38.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader38.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        springMvcApiReader38.LOG = logAdapter48;
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray53 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader52.parseResponseHeaders(responseHeaderArray53);
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet56 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet56, typeArray55);
        springMvcApiReader52.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        springMvcApiReader52.LOG = logAdapter59;
        io.swagger.models.Swagger swagger61 = null;
        springMvcApiReader52.swagger = swagger61;
        java.lang.Class<?> wildcardClass63 = springMvcApiReader52.getClass();
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        io.swagger.annotations.Api api68 = null;
        boolean boolean69 = springMvcApiReader66.canReadApi(false, api68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type type73 = null;
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList77 = springMvcApiReader72.getParameters(type73, (java.util.List<java.lang.annotation.Annotation>) annotationList75);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray78 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap79 = springMvcApiReader72.parseResponseHeaders(responseHeaderArray78);
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        springMvcApiReader72.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        java.util.Set<java.lang.reflect.Type> typeSet83 = springMvcApiReader72.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = null;
        springMvcApiReader72.LOG = logAdapter84;
        java.lang.Class<?> wildcardClass86 = springMvcApiReader72.getClass();
        java.lang.annotation.Annotation[] annotationArray87 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList88 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList88, annotationArray87);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList90 = springMvcApiReader66.getParameters((java.lang.reflect.Type) wildcardClass86, (java.util.List<java.lang.annotation.Annotation>) annotationList88);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList91 = springMvcApiReader38.getParameters((java.lang.reflect.Type) wildcardClass63, (java.util.List<java.lang.annotation.Annotation>) annotationList88);
        boolean boolean92 = springMvcApiReader22.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList88);
        boolean boolean93 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList88);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter94 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter95 = null;
        springMvcApiReader2.LOG = logAdapter95;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNull(typeSet47);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(parameterList77);
        org.junit.Assert.assertNotNull(responseHeaderArray78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(annotationArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(parameterList90);
        org.junit.Assert.assertNotNull(parameterList91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(logAdapter94);
    }

    @Test
    public void test9257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9257");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger21 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNull(swagger21);
        org.junit.Assert.assertNotNull(typeSet22);
    }

    @Test
    public void test9258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9258");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type type14 = null;
        java.lang.annotation.Annotation[] annotationArray15 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList16 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList16, annotationArray15);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList18 = springMvcApiReader13.getParameters(type14, (java.util.List<java.lang.annotation.Annotation>) annotationList16);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray19 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap20 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        springMvcApiReader13.LOG = logAdapter21;
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        springMvcApiReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass34);
        io.swagger.models.Swagger swagger36 = springMvcApiReader25.swagger;
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass38 };
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        springMvcApiReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        springMvcApiReader13.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader13.swagger = swagger44;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        io.swagger.models.Swagger swagger49 = null;
        springMvcApiReader48.swagger = swagger49;
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type type54 = null;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList58 = springMvcApiReader53.getParameters(type54, (java.util.List<java.lang.annotation.Annotation>) annotationList56);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray59 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap60 = springMvcApiReader53.parseResponseHeaders(responseHeaderArray59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] { wildcardClass62 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader53.typesToSkip = typeSet64;
        springMvcApiReader48.typesToSkip = typeSet64;
        springMvcApiReader13.typesToSkip = typeSet64;
        springMvcApiReader2.typesToSkip = typeSet64;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader2.canReadApi(false, api72);
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger75 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(parameterList18);
        org.junit.Assert.assertNotNull(responseHeaderArray19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNull(swagger36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(parameterList58);
        org.junit.Assert.assertNotNull(responseHeaderArray59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNull(swagger75);
        org.junit.Assert.assertNotNull(typeSet76);
    }

    @Test
    public void test9259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9259");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        java.lang.String str8 = springMvcApiReader2.parseOperationPath("hi!", strMap7);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet12 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/hi!" + "'", str8, "/hi!");
        org.junit.Assert.assertNotNull(typeSet12);
    }

    @Test
    public void test9260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9260");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        boolean boolean24 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader13.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        java.lang.String[] strArray28 = null;
        java.lang.String[] strArray29 = null;
        io.swagger.models.Operation operation30 = null;
        java.lang.String[] strArray31 = springMvcApiReader2.updateOperationConsumes(strArray28, strArray29, operation30);
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNull(strArray31);
        org.junit.Assert.assertNull(swagger32);
    }

    @Test
    public void test9261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9261");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type type20 = null;
        java.lang.annotation.Annotation[] annotationArray21 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList22 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList22, annotationArray21);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList24 = springMvcApiReader19.getParameters(type20, (java.util.List<java.lang.annotation.Annotation>) annotationList22);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray25 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap26 = springMvcApiReader19.parseResponseHeaders(responseHeaderArray25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader19.LOG;
        io.swagger.models.Swagger swagger28 = springMvcApiReader19.swagger;
        springMvcApiReader19.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader19.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        io.swagger.models.Swagger swagger35 = springMvcApiReader34.swagger;
        io.swagger.models.Swagger swagger36 = springMvcApiReader34.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader34.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader34.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation41 = null;
        io.swagger.annotations.ApiResponses apiResponses42 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation41, apiResponses42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNull(logAdapter16);
        org.junit.Assert.assertNotNull(annotationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(parameterList24);
        org.junit.Assert.assertNotNull(responseHeaderArray25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNull(swagger28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNull(swagger35);
        org.junit.Assert.assertNull(swagger36);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet40);
    }

    @Test
    public void test9262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9262");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        springMvcApiReader2.LOG = logAdapter18;
        io.swagger.models.Operation operation20 = null;
        io.swagger.annotations.ApiOperation apiOperation21 = null;
        springMvcApiReader2.updateTagsForOperation(operation20, apiOperation21);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation25 = null;
        io.swagger.annotations.ApiOperation apiOperation26 = null;
        springMvcApiReader2.updateTagsForOperation(operation25, apiOperation26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader2.parseOperationPath("/hi!", strMap29);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.ApiOperation apiOperation32 = null;
        io.swagger.models.Operation operation33 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation32, operation33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
    }

    @Test
    public void test9263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9263");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList13 = springMvcApiReader8.getParameters(type9, (java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader8.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        springMvcApiReader8.LOG = logAdapter20;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader8.LOG;
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        io.swagger.models.Swagger swagger26 = null;
        springMvcApiReader25.swagger = swagger26;
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type type31 = null;
        java.lang.annotation.Annotation[] annotationArray32 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList33 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList33, annotationArray32);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList35 = springMvcApiReader30.getParameters(type31, (java.util.List<java.lang.annotation.Annotation>) annotationList33);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray36 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap37 = springMvcApiReader30.parseResponseHeaders(responseHeaderArray36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass39 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader30.typesToSkip = typeSet41;
        springMvcApiReader25.typesToSkip = typeSet41;
        springMvcApiReader8.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        springMvcApiReader2.typesToSkip = typeSet41;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type type51 = null;
        java.lang.annotation.Annotation[] annotationArray52 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList53 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList53, annotationArray52);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList55 = springMvcApiReader50.getParameters(type51, (java.util.List<java.lang.annotation.Annotation>) annotationList53);
        java.util.Set<java.lang.reflect.Type> typeSet56 = null;
        springMvcApiReader50.typesToSkip = typeSet56;
        springMvcApiReader50.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader50.parseOperationPath("/hi!", strMap60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray65 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap66 = springMvcApiReader64.parseResponseHeaders(responseHeaderArray65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type type70 = null;
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList74 = springMvcApiReader69.getParameters(type70, (java.util.List<java.lang.annotation.Annotation>) annotationList72);
        boolean boolean75 = springMvcApiReader64.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        boolean boolean76 = springMvcApiReader50.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        boolean boolean77 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        java.util.Set<java.lang.reflect.Type> typeSet78 = null;
        springMvcApiReader2.typesToSkip = typeSet78;
        io.swagger.models.Operation operation80 = null;
        io.swagger.annotations.ApiOperation apiOperation81 = null;
        springMvcApiReader2.updateTagsForOperation(operation80, apiOperation81);
        io.swagger.annotations.Api api84 = null;
        boolean boolean85 = springMvcApiReader2.canReadApi(true, api84);
        java.util.Set<java.lang.reflect.Type> typeSet86 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parameterList13);
        org.junit.Assert.assertNotNull(responseHeaderArray14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(parameterList35);
        org.junit.Assert.assertNotNull(responseHeaderArray36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(annotationArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(parameterList55);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "/hi!" + "'", str61, "/hi!");
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(parameterList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(typeSet86);
    }

    @Test
    public void test9264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9264");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        io.swagger.annotations.Api api21 = null;
        boolean boolean22 = springMvcApiReader2.canReadApi(true, api21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        springMvcApiReader25.LOG = logAdapter33;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList42 = springMvcApiReader37.getParameters(type38, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray43 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        springMvcApiReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Swagger swagger48 = springMvcApiReader37.swagger;
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass50 };
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        springMvcApiReader37.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        springMvcApiReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(parameterList42);
        org.junit.Assert.assertNotNull(responseHeaderArray43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(swagger48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(logAdapter57);
    }

    @Test
    public void test9265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9265");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type type20 = null;
        java.lang.annotation.Annotation[] annotationArray21 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList22 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList22, annotationArray21);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList24 = springMvcApiReader19.getParameters(type20, (java.util.List<java.lang.annotation.Annotation>) annotationList22);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray25 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap26 = springMvcApiReader19.parseResponseHeaders(responseHeaderArray25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader19.LOG;
        io.swagger.models.Swagger swagger28 = springMvcApiReader19.swagger;
        springMvcApiReader19.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader19.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet30);
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader2.canReadApi(true, api33);
        io.swagger.models.Operation operation37 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "", operation37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNull(logAdapter16);
        org.junit.Assert.assertNotNull(annotationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(parameterList24);
        org.junit.Assert.assertNotNull(responseHeaderArray25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNull(swagger28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test9266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9266");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader15.typesToSkip;
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader15.swagger = swagger17;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader15.getTypesToSkip();
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        io.swagger.models.Swagger swagger23 = springMvcApiReader22.swagger;
        io.swagger.models.Swagger swagger24 = springMvcApiReader22.swagger;
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader27.typesToSkip;
        java.lang.String[] strArray32 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray35 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap36 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray37 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList38 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList38, securityRequirementArray37);
        io.swagger.models.Operation operation40 = null;
        springMvcApiReader27.updateOperation(strArray32, strArray35, strMap36, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList38, operation40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader27.typesToSkip;
        springMvcApiReader22.setTypesToSkip(typeSet42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        springMvcApiReader46.LOG = logAdapter53;
        io.swagger.models.Swagger swagger55 = null;
        springMvcApiReader46.swagger = swagger55;
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        io.swagger.models.Swagger swagger60 = null;
        springMvcApiReader59.swagger = swagger60;
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList69 = springMvcApiReader64.getParameters(type65, (java.util.List<java.lang.annotation.Annotation>) annotationList67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray70 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader64.parseResponseHeaders(responseHeaderArray70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.reflect.Type[] typeArray74 = new java.lang.reflect.Type[] { wildcardClass73 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet75 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet75, typeArray74);
        springMvcApiReader64.typesToSkip = typeSet75;
        springMvcApiReader59.typesToSkip = typeSet75;
        springMvcApiReader46.typesToSkip = typeSet75;
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet75);
        io.swagger.models.Swagger swagger81 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader83 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger81, logAdapter82);
        java.lang.reflect.Type type84 = null;
        java.lang.annotation.Annotation[] annotationArray85 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList86 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList86, annotationArray85);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList88 = springMvcApiReader83.getParameters(type84, (java.util.List<java.lang.annotation.Annotation>) annotationList86);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray89 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap90 = springMvcApiReader83.parseResponseHeaders(responseHeaderArray89);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap91 = springMvcApiReader22.parseResponseHeaders(responseHeaderArray89);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap92 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray89);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap93 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray89);
        java.util.Map<java.lang.String, java.lang.String> strMap95 = null;
        java.lang.String str96 = springMvcApiReader2.parseOperationPath("/hi!", strMap95);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNull(swagger23);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(securityRequirementArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(parameterList69);
        org.junit.Assert.assertNotNull(responseHeaderArray70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(annotationArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(parameterList88);
        org.junit.Assert.assertNotNull(responseHeaderArray89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNull(strMap92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "/hi!" + "'", str96, "/hi!");
    }

    @Test
    public void test9267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9267");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray24 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap25 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        boolean boolean39 = springMvcApiReader28.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        boolean boolean40 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList48 = springMvcApiReader43.getParameters(type44, (java.util.List<java.lang.annotation.Annotation>) annotationList46);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray49 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray54 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader53.parseResponseHeaders(responseHeaderArray54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type type59 = null;
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader58.getParameters(type59, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean64 = springMvcApiReader53.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean65 = springMvcApiReader43.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean66 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader18.getTypesToSkip();
        io.swagger.models.Swagger swagger68 = null;
        springMvcApiReader18.swagger = swagger68;
        io.swagger.models.Swagger swagger70 = springMvcApiReader18.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader18.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet71);
        io.swagger.models.Swagger swagger73 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation74 = null;
        io.swagger.annotations.ApiOperation apiOperation75 = null;
        springMvcApiReader2.updateTagsForOperation(operation74, apiOperation75);
        java.lang.reflect.Method method77 = null;
        io.swagger.models.Operation operation78 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method77, operation78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(logAdapter10);
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertNotNull(responseHeaderArray24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(parameterList48);
        org.junit.Assert.assertNotNull(responseHeaderArray49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNull(swagger70);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNull(swagger73);
    }

    @Test
    public void test9268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9268");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("hi!", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        java.lang.annotation.Annotation[] annotationArray14 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList15 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList15, annotationArray14);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList17 = springMvcApiReader12.getParameters(type13, (java.util.List<java.lang.annotation.Annotation>) annotationList15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList25 = springMvcApiReader20.getParameters(type21, (java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass29 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader20.typesToSkip = typeSet31;
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader12.parseOperationPath("hi!", strMap36);
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        boolean boolean41 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean42 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.models.Operation operation43 = null;
        io.swagger.annotations.ApiOperation apiOperation44 = null;
        springMvcApiReader2.updateTagsForOperation(operation43, apiOperation44);
        java.lang.Class<?> wildcardClass46 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "/hi!" + "'", str9, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(parameterList17);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(parameterList25);
        org.junit.Assert.assertNotNull(responseHeaderArray26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test9269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9269");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.reflect.Type type53 = null;
        java.lang.annotation.Annotation[] annotationArray54 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList55 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList55, annotationArray54);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList57 = springMvcApiReader52.getParameters(type53, (java.util.List<java.lang.annotation.Annotation>) annotationList55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray58 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap59 = springMvcApiReader52.parseResponseHeaders(responseHeaderArray58);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray63 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap64 = springMvcApiReader62.parseResponseHeaders(responseHeaderArray63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type type68 = null;
        java.lang.annotation.Annotation[] annotationArray69 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList70 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList70, annotationArray69);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList72 = springMvcApiReader67.getParameters(type68, (java.util.List<java.lang.annotation.Annotation>) annotationList70);
        boolean boolean73 = springMvcApiReader62.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList70);
        boolean boolean74 = springMvcApiReader52.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList70);
        boolean boolean75 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList70);
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.reflect.Type type79 = null;
        java.lang.annotation.Annotation[] annotationArray80 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList81 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList81, annotationArray80);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList83 = springMvcApiReader78.getParameters(type79, (java.util.List<java.lang.annotation.Annotation>) annotationList81);
        boolean boolean84 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList81);
        boolean boolean85 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList81);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter87 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api89 = null;
        boolean boolean90 = springMvcApiReader2.canReadApi(true, api89);
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(annotationArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(parameterList57);
        org.junit.Assert.assertNotNull(responseHeaderArray58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(annotationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(parameterList72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(annotationArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(parameterList83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(logAdapter86);
        org.junit.Assert.assertNull(logAdapter87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(typeSet91);
    }

    @Test
    public void test9270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9270");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type type16 = null;
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList20 = springMvcApiReader15.getParameters(type16, (java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = springMvcApiReader23.getParameters(type24, (java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] { wildcardClass32 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader23.typesToSkip = typeSet34;
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader15.parseOperationPath("hi!", strMap39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray41);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray41);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader46.typesToSkip;
        java.lang.String[] strArray51 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray54 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray56 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList57 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList57, securityRequirementArray56);
        io.swagger.models.Operation operation59 = null;
        springMvcApiReader46.updateOperation(strArray51, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList57, operation59);
        io.swagger.models.Swagger swagger61 = null;
        springMvcApiReader46.swagger = swagger61;
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader65.typesToSkip;
        springMvcApiReader65.updateExtensionChain();
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type type71 = null;
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList75 = springMvcApiReader70.getParameters(type71, (java.util.List<java.lang.annotation.Annotation>) annotationList73);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray76 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader70.parseResponseHeaders(responseHeaderArray76);
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        springMvcApiReader70.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        springMvcApiReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader84 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger82, logAdapter83);
        java.lang.reflect.Type type85 = null;
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList89 = springMvcApiReader84.getParameters(type85, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList90 = springMvcApiReader46.getParameters((java.lang.reflect.Type) wildcardClass79, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean91 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        java.util.Map<java.lang.String, java.lang.String> strMap93 = null;
        java.lang.String str94 = springMvcApiReader2.parseOperationPath("", strMap93);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter95 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap97 = null;
        java.lang.String str98 = springMvcApiReader2.parseOperationPath("", strMap97);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(parameterList20);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(parameterList28);
        org.junit.Assert.assertNotNull(responseHeaderArray29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(securityRequirementArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(parameterList75);
        org.junit.Assert.assertNotNull(responseHeaderArray76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(parameterList89);
        org.junit.Assert.assertNotNull(parameterList90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
        org.junit.Assert.assertNull(logAdapter95);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "" + "'", str98, "");
    }

    @Test
    public void test9271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9271");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type type14 = null;
        java.lang.annotation.Annotation[] annotationArray15 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList16 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList16, annotationArray15);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList18 = springMvcApiReader13.getParameters(type14, (java.util.List<java.lang.annotation.Annotation>) annotationList16);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray19 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap20 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray19);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray24 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap25 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList33 = springMvcApiReader28.getParameters(type29, (java.util.List<java.lang.annotation.Annotation>) annotationList31);
        boolean boolean34 = springMvcApiReader23.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList31);
        boolean boolean35 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList31);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader38.getParameters(type39, (java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray44 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap45 = springMvcApiReader38.parseResponseHeaders(responseHeaderArray44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray49 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type type54 = null;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList58 = springMvcApiReader53.getParameters(type54, (java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean60 = springMvcApiReader38.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean61 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader13.getTypesToSkip();
        io.swagger.models.Swagger swagger63 = null;
        springMvcApiReader13.swagger = swagger63;
        io.swagger.models.Swagger swagger65 = springMvcApiReader13.swagger;
        java.lang.Class<?> wildcardClass66 = springMvcApiReader13.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(logAdapter10);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(parameterList18);
        org.junit.Assert.assertNotNull(responseHeaderArray19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(parameterList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(responseHeaderArray44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(parameterList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNull(swagger65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeSet68);
    }

    @Test
    public void test9272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9272");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader47.typesToSkip;
        java.lang.String[] strArray52 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray55 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap56 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray57 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList58 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList58, securityRequirementArray57);
        io.swagger.models.Operation operation60 = null;
        springMvcApiReader47.updateOperation(strArray52, strArray55, strMap56, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList58, operation60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader47.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet62;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader2.parseOperationPath("", strMap65);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader2.parseOperationPath("hi!", strMap68);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        springMvcApiReader2.LOG = logAdapter70;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource74 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger75 = springMvcApiReader2.read(springResource74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(securityRequirementArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertNull(logAdapter72);
        org.junit.Assert.assertNotNull(typeSet73);
    }

    @Test
    public void test9273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9273");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray12 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap13 = springMvcApiReader11.parseResponseHeaders(responseHeaderArray12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        boolean boolean22 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList19);
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader11.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet23);
        io.swagger.models.Operation operation25 = null;
        io.swagger.annotations.ApiOperation apiOperation26 = null;
        springMvcApiReader2.updateTagsForOperation(operation25, apiOperation26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader2.parseOperationPath("/hi!", strMap29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        springMvcApiReader2.LOG = logAdapter31;
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader2.swagger = swagger33;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
    }

    @Test
    public void test9274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9274");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        boolean boolean31 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass16, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.lang.reflect.Type type33 = null;
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList37 = springMvcApiReader2.getParameters(type33, (java.util.List<java.lang.annotation.Annotation>) annotationList35);
        io.swagger.models.Swagger swagger38 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation39 = null;
        io.swagger.annotations.ApiOperation apiOperation40 = null;
        springMvcApiReader2.updateTagsForOperation(operation39, apiOperation40);
        io.swagger.models.Operation operation42 = null;
        io.swagger.annotations.ApiResponses apiResponses43 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation42, apiResponses43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(parameterList37);
        org.junit.Assert.assertNull(swagger38);
    }

    @Test
    public void test9275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9275");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray23 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap24 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray23);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger26 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader29.typesToSkip;
        io.swagger.models.Swagger swagger31 = null;
        springMvcApiReader29.swagger = swagger31;
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type type36 = null;
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList40 = springMvcApiReader35.getParameters(type36, (java.util.List<java.lang.annotation.Annotation>) annotationList38);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader35.parseResponseHeaders(responseHeaderArray41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        springMvcApiReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        springMvcApiReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        io.swagger.models.Swagger swagger47 = springMvcApiReader29.swagger;
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader50.typesToSkip;
        springMvcApiReader50.updateExtensionChain();
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type type56 = null;
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList60 = springMvcApiReader55.getParameters(type56, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray61 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader55.parseResponseHeaders(responseHeaderArray61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        springMvcApiReader55.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader68.parseResponseHeaders(responseHeaderArray69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.reflect.Type type74 = null;
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList78 = springMvcApiReader73.getParameters(type74, (java.util.List<java.lang.annotation.Annotation>) annotationList76);
        boolean boolean79 = springMvcApiReader68.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList80 = springMvcApiReader50.getParameters((java.lang.reflect.Type) wildcardClass64, (java.util.List<java.lang.annotation.Annotation>) annotationList76);
        java.lang.reflect.Type type81 = null;
        java.lang.annotation.Annotation[] annotationArray82 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList83 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList83, annotationArray82);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList85 = springMvcApiReader50.getParameters(type81, (java.util.List<java.lang.annotation.Annotation>) annotationList83);
        io.swagger.models.Operation operation86 = null;
        io.swagger.annotations.ApiOperation apiOperation87 = null;
        springMvcApiReader50.updateTagsForOperation(operation86, apiOperation87);
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader50.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet90 = springMvcApiReader50.getTypesToSkip();
        springMvcApiReader29.setTypesToSkip(typeSet90);
        springMvcApiReader2.setTypesToSkip(typeSet90);
        java.util.Set<java.lang.reflect.Type> typeSet93 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(swagger26);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(parameterList40);
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNull(swagger47);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(parameterList60);
        org.junit.Assert.assertNotNull(responseHeaderArray61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(parameterList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(parameterList80);
        org.junit.Assert.assertNotNull(annotationArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(parameterList85);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(typeSet93);
    }

    @Test
    public void test9276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9276");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        boolean boolean24 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader13.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        java.lang.String[] strArray28 = null;
        java.lang.String[] strArray29 = null;
        io.swagger.models.Operation operation30 = null;
        java.lang.String[] strArray31 = springMvcApiReader2.updateOperationConsumes(strArray28, strArray29, operation30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray35 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap36 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray35);
        io.swagger.models.Swagger swagger37 = null;
        springMvcApiReader34.swagger = swagger37;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader41.typesToSkip;
        springMvcApiReader41.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader41.typesToSkip;
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader47.typesToSkip;
        java.lang.String[] strArray52 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray55 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap56 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray57 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList58 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList58, securityRequirementArray57);
        io.swagger.models.Operation operation60 = null;
        springMvcApiReader47.updateOperation(strArray52, strArray55, strMap56, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList58, operation60);
        io.swagger.models.Swagger swagger62 = null;
        springMvcApiReader47.swagger = swagger62;
        java.lang.annotation.Annotation[] annotationArray64 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList65 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList65, annotationArray64);
        boolean boolean67 = springMvcApiReader47.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        boolean boolean68 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        boolean boolean69 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        boolean boolean70 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        io.swagger.models.Operation operation71 = null;
        io.swagger.annotations.ApiOperation apiOperation72 = null;
        springMvcApiReader2.updateTagsForOperation(operation71, apiOperation72);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        springMvcApiReader2.LOG = logAdapter74;
        io.swagger.models.Swagger swagger76 = null;
        springMvcApiReader2.swagger = swagger76;
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader2.parseOperationPath("", strMap79);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNull(strArray31);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(securityRequirementArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(annotationArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
    }

    @Test
    public void test9277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9277");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.reflect.Type type53 = null;
        java.lang.annotation.Annotation[] annotationArray54 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList55 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList55, annotationArray54);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList57 = springMvcApiReader52.getParameters(type53, (java.util.List<java.lang.annotation.Annotation>) annotationList55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray58 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap59 = springMvcApiReader52.parseResponseHeaders(responseHeaderArray58);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray63 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap64 = springMvcApiReader62.parseResponseHeaders(responseHeaderArray63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type type68 = null;
        java.lang.annotation.Annotation[] annotationArray69 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList70 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList70, annotationArray69);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList72 = springMvcApiReader67.getParameters(type68, (java.util.List<java.lang.annotation.Annotation>) annotationList70);
        boolean boolean73 = springMvcApiReader62.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList70);
        boolean boolean74 = springMvcApiReader52.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList70);
        boolean boolean75 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList70);
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.reflect.Type type79 = null;
        java.lang.annotation.Annotation[] annotationArray80 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList81 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList81, annotationArray80);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList83 = springMvcApiReader78.getParameters(type79, (java.util.List<java.lang.annotation.Annotation>) annotationList81);
        boolean boolean84 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList81);
        boolean boolean85 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList81);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger87 = null;
        springMvcApiReader2.swagger = swagger87;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(annotationArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(parameterList57);
        org.junit.Assert.assertNotNull(responseHeaderArray58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(annotationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(parameterList72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(annotationArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(parameterList83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(logAdapter86);
    }

    @Test
    public void test9278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9278");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader23.typesToSkip;
        springMvcApiReader23.updateExtensionChain();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader23.setTypesToSkip(typeSet30);
        springMvcApiReader2.setTypesToSkip(typeSet30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader2.swagger = swagger33;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        springMvcApiReader2.LOG = logAdapter35;
        io.swagger.models.Operation operation37 = null;
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        springMvcApiReader2.updateTagsForOperation(operation37, apiOperation38);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
    }

    @Test
    public void test9279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9279");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.util.Set<java.lang.reflect.Type> typeSet20 = null;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] { wildcardClass33 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader24.typesToSkip = typeSet35;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader24.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet38;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        springMvcApiReader2.LOG = logAdapter40;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNull(logAdapter42);
    }

    @Test
    public void test9280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9280");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        io.swagger.models.Swagger swagger17 = springMvcApiReader16.swagger;
        io.swagger.models.Swagger swagger18 = springMvcApiReader16.swagger;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader21.typesToSkip;
        java.lang.String[] strArray26 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray29 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap30 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray31 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList32 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList32, securityRequirementArray31);
        io.swagger.models.Operation operation34 = null;
        springMvcApiReader21.updateOperation(strArray26, strArray29, strMap30, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList32, operation34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader21.typesToSkip;
        springMvcApiReader16.setTypesToSkip(typeSet36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        springMvcApiReader40.LOG = logAdapter47;
        io.swagger.models.Swagger swagger49 = null;
        springMvcApiReader40.swagger = swagger49;
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        io.swagger.models.Swagger swagger54 = null;
        springMvcApiReader53.swagger = swagger54;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type type59 = null;
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader58.getParameters(type59, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray64 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap65 = springMvcApiReader58.parseResponseHeaders(responseHeaderArray64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] { wildcardClass67 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet69 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet69, typeArray68);
        springMvcApiReader58.typesToSkip = typeSet69;
        springMvcApiReader53.typesToSkip = typeSet69;
        springMvcApiReader40.typesToSkip = typeSet69;
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet69);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet69);
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger77 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api81 = null;
        boolean boolean82 = springMvcApiReader2.canReadApi(true, api81);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(swagger17);
        org.junit.Assert.assertNull(swagger18);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(securityRequirementArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertNotNull(responseHeaderArray64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNull(swagger77);
        org.junit.Assert.assertNull(logAdapter78);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test9281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9281");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        boolean boolean31 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass16, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.lang.reflect.Type type33 = null;
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList37 = springMvcApiReader2.getParameters(type33, (java.util.List<java.lang.annotation.Annotation>) annotationList35);
        io.swagger.models.Swagger swagger38 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type type42 = null;
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader41.getParameters(type42, (java.util.List<java.lang.annotation.Annotation>) annotationList44);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray55 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap56 = springMvcApiReader49.parseResponseHeaders(responseHeaderArray55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass58 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader49.typesToSkip = typeSet60;
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader41.parseOperationPath("hi!", strMap65);
        io.swagger.models.Operation operation67 = null;
        io.swagger.annotations.ApiOperation apiOperation68 = null;
        springMvcApiReader41.updateTagsForOperation(operation67, apiOperation68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type type73 = null;
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList77 = springMvcApiReader72.getParameters(type73, (java.util.List<java.lang.annotation.Annotation>) annotationList75);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray78 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap79 = springMvcApiReader72.parseResponseHeaders(responseHeaderArray78);
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        springMvcApiReader72.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        springMvcApiReader41.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader41.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet84;
        java.util.Map<java.lang.String, java.lang.String> strMap87 = null;
        java.lang.String str88 = springMvcApiReader2.parseOperationPath("/hi!", strMap87);
        io.swagger.models.Operation operation89 = null;
        io.swagger.annotations.ApiOperation apiOperation90 = null;
        springMvcApiReader2.updateTagsForOperation(operation89, apiOperation90);
        java.util.Set<java.lang.reflect.Type> typeSet92 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(parameterList37);
        org.junit.Assert.assertNull(swagger38);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertNotNull(responseHeaderArray55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!" + "'", str66, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(parameterList77);
        org.junit.Assert.assertNotNull(responseHeaderArray78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "/hi!" + "'", str88, "/hi!");
        org.junit.Assert.assertNotNull(typeSet92);
    }

    @Test
    public void test9282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9282");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("/hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        springMvcApiReader25.LOG = logAdapter32;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader25.parseOperationPath("", strMap35);
        java.lang.reflect.Type type37 = null;
        springMvcApiReader25.addTypeToSkippedTypes(type37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader41.parseResponseHeaders(responseHeaderArray42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        springMvcApiReader41.LOG = logAdapter48;
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray53 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader52.parseResponseHeaders(responseHeaderArray53);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type type58 = null;
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList62 = springMvcApiReader57.getParameters(type58, (java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean63 = springMvcApiReader52.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader52.getTypesToSkip();
        springMvcApiReader41.setTypesToSkip(typeSet64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = springMvcApiReader41.LOG;
        java.lang.String[] strArray67 = null;
        java.lang.String[] strArray68 = null;
        io.swagger.models.Operation operation69 = null;
        java.lang.String[] strArray70 = springMvcApiReader41.updateOperationConsumes(strArray67, strArray68, operation69);
        java.lang.Class<?> wildcardClass71 = springMvcApiReader41.getClass();
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader74.typesToSkip;
        springMvcApiReader74.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader74.typesToSkip;
        io.swagger.models.Swagger swagger78 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader80 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger78, logAdapter79);
        java.lang.reflect.Type type81 = null;
        java.lang.annotation.Annotation[] annotationArray82 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList83 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList83, annotationArray82);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList85 = springMvcApiReader80.getParameters(type81, (java.util.List<java.lang.annotation.Annotation>) annotationList83);
        boolean boolean86 = springMvcApiReader74.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList83);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList87 = springMvcApiReader25.getParameters((java.lang.reflect.Type) wildcardClass71, (java.util.List<java.lang.annotation.Annotation>) annotationList83);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = null;
        io.swagger.models.Operation operation89 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList87, strMap88, operation89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(parameterList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNull(logAdapter66);
        org.junit.Assert.assertNull(strArray70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(annotationArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(parameterList85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(parameterList87);
    }

    @Test
    public void test9283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9283");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        boolean boolean31 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("hi!", strMap34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader38.typesToSkip;
        springMvcApiReader38.updateExtensionChain();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList48 = springMvcApiReader43.getParameters(type44, (java.util.List<java.lang.annotation.Annotation>) annotationList46);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray49 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        springMvcApiReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader2.parseOperationPath("/hi!", strMap57);
        io.swagger.models.Operation operation59 = null;
        io.swagger.annotations.ApiOperation apiOperation60 = null;
        springMvcApiReader2.updateTagsForOperation(operation59, apiOperation60);
        io.swagger.models.Operation operation62 = null;
        io.swagger.annotations.ApiOperation apiOperation63 = null;
        springMvcApiReader2.updateTagsForOperation(operation62, apiOperation63);
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader2.getTypesToSkip();
        java.lang.reflect.Method method66 = null;
        io.swagger.models.Operation operation67 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method66, operation67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(parameterList48);
        org.junit.Assert.assertNotNull(responseHeaderArray49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "/hi!" + "'", str58, "/hi!");
        org.junit.Assert.assertNotNull(typeSet65);
    }

    @Test
    public void test9284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9284");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(false, api29);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.ApiOperation apiOperation32 = null;
        io.swagger.models.Operation operation33 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation32, operation33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test9285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9285");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Operation operation8 = null;
        io.swagger.annotations.ApiOperation apiOperation9 = null;
        springMvcApiReader2.updateTagsForOperation(operation8, apiOperation9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray23 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap24 = springMvcApiReader22.parseResponseHeaders(responseHeaderArray23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        boolean boolean33 = springMvcApiReader22.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader22.getTypesToSkip();
        springMvcApiReader13.setTypesToSkip(typeSet34);
        io.swagger.annotations.Api api37 = null;
        boolean boolean38 = springMvcApiReader13.canReadApi(false, api37);
        io.swagger.models.Operation operation39 = null;
        io.swagger.annotations.ApiOperation apiOperation40 = null;
        springMvcApiReader13.updateTagsForOperation(operation39, apiOperation40);
        java.lang.reflect.Type type42 = null;
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray46 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap47 = springMvcApiReader45.parseResponseHeaders(responseHeaderArray46);
        io.swagger.models.Swagger swagger48 = null;
        springMvcApiReader45.swagger = swagger48;
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader45.parseOperationPath("hi!", strMap51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type type56 = null;
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList60 = springMvcApiReader55.getParameters(type56, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type type64 = null;
        java.lang.annotation.Annotation[] annotationArray65 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList66 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList66, annotationArray65);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList68 = springMvcApiReader63.getParameters(type64, (java.util.List<java.lang.annotation.Annotation>) annotationList66);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader63.parseResponseHeaders(responseHeaderArray69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] { wildcardClass72 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        springMvcApiReader63.typesToSkip = typeSet74;
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet74);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader55.parseOperationPath("hi!", strMap79);
        java.lang.annotation.Annotation[] annotationArray81 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList82 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList82, annotationArray81);
        boolean boolean84 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        boolean boolean85 = springMvcApiReader45.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList86 = springMvcApiReader13.getParameters(type42, (java.util.List<java.lang.annotation.Annotation>) annotationList82);
        boolean boolean87 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        java.util.Set<java.lang.reflect.Type> typeSet88 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api90 = null;
        boolean boolean91 = springMvcApiReader2.canReadApi(true, api90);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(parameterList60);
        org.junit.Assert.assertNotNull(annotationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(parameterList68);
        org.junit.Assert.assertNotNull(responseHeaderArray69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "/hi!" + "'", str80, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(parameterList86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test9286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9286");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray28 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap29 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader32.typesToSkip;
        springMvcApiReader32.updateExtensionChain();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList42 = springMvcApiReader37.getParameters(type38, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray43 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        springMvcApiReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray51 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap52 = springMvcApiReader50.parseResponseHeaders(responseHeaderArray51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type type56 = null;
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList60 = springMvcApiReader55.getParameters(type56, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        boolean boolean61 = springMvcApiReader50.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList62 = springMvcApiReader32.getParameters((java.lang.reflect.Type) wildcardClass46, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        boolean boolean63 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader2.swagger = swagger64;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.reflect.Type type72 = null;
        java.lang.annotation.Annotation[] annotationArray73 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList74 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList74, annotationArray73);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList76 = springMvcApiReader71.getParameters(type72, (java.util.List<java.lang.annotation.Annotation>) annotationList74);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray77 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap78 = springMvcApiReader71.parseResponseHeaders(responseHeaderArray77);
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.reflect.Type[] typeArray81 = new java.lang.reflect.Type[] { wildcardClass80 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet82 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet82, typeArray81);
        springMvcApiReader71.typesToSkip = typeSet82;
        java.util.Set<java.lang.reflect.Type> typeSet85 = springMvcApiReader71.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap87 = null;
        java.lang.String str88 = springMvcApiReader71.parseOperationPath("hi!", strMap87);
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader71.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap91 = null;
        java.lang.String str92 = springMvcApiReader71.parseOperationPath("/hi!", strMap91);
        java.util.Set<java.lang.reflect.Type> typeSet93 = springMvcApiReader71.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet93;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(parameterList42);
        org.junit.Assert.assertNotNull(responseHeaderArray43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(parameterList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(parameterList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(logAdapter66);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(annotationArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(parameterList76);
        org.junit.Assert.assertNotNull(responseHeaderArray77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "/hi!" + "'", str88, "/hi!");
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "/hi!" + "'", str92, "/hi!");
        org.junit.Assert.assertNotNull(typeSet93);
    }

    @Test
    public void test9287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9287");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList53 = springMvcApiReader48.getParameters(type49, (java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray54 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        springMvcApiReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        springMvcApiReader2.LOG = logAdapter60;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader2.parseOperationPath("hi!", strMap63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray68 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap69 = springMvcApiReader67.parseResponseHeaders(responseHeaderArray68);
        io.swagger.models.Swagger swagger70 = null;
        springMvcApiReader67.swagger = swagger70;
        io.swagger.annotations.Api api73 = null;
        boolean boolean74 = springMvcApiReader67.canReadApi(true, api73);
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader67.swagger = swagger75;
        java.lang.Class<?> wildcardClass77 = springMvcApiReader67.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        springMvcApiReader2.LOG = logAdapter79;
        io.swagger.models.Swagger swagger81 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(parameterList53);
        org.junit.Assert.assertNotNull(responseHeaderArray54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNull(swagger81);
    }

    @Test
    public void test9288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9288");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger12 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        java.lang.String str15 = springMvcApiReader2.parseOperationPath("", strMap14);
        io.swagger.models.Operation operation16 = null;
        io.swagger.annotations.ApiOperation apiOperation17 = null;
        springMvcApiReader2.updateTagsForOperation(operation16, apiOperation17);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(logAdapter10);
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNull(swagger12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test9289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9289");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader2.parseOperationPath("", strMap17);
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader25.typesToSkip;
        java.lang.String[] strArray30 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray33 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray35 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList36 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList36, securityRequirementArray35);
        io.swagger.models.Operation operation38 = null;
        springMvcApiReader25.updateOperation(strArray30, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList36, operation38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader25.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet40;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(securityRequirementArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeSet40);
    }

    @Test
    public void test9290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9290");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        io.swagger.models.Swagger swagger16 = null;
        springMvcApiReader15.swagger = swagger16;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList25 = springMvcApiReader20.getParameters(type21, (java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass29 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader20.typesToSkip = typeSet31;
        springMvcApiReader15.typesToSkip = typeSet31;
        springMvcApiReader2.typesToSkip = typeSet31;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader38.getParameters(type39, (java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray44 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap45 = springMvcApiReader38.parseResponseHeaders(responseHeaderArray44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type type52 = null;
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList56 = springMvcApiReader51.getParameters(type52, (java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader51.parseResponseHeaders(responseHeaderArray57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        springMvcApiReader51.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger62 = springMvcApiReader51.swagger;
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] { wildcardClass64 };
        java.util.ArrayList<java.lang.reflect.Type> typeList66 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList66, typeArray65);
        springMvcApiReader51.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        springMvcApiReader2.LOG = logAdapter71;
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader75 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger73, logAdapter74);
        java.lang.reflect.Type type76 = null;
        java.lang.annotation.Annotation[] annotationArray77 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList78 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList78, annotationArray77);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList80 = springMvcApiReader75.getParameters(type76, (java.util.List<java.lang.annotation.Annotation>) annotationList78);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray81 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap82 = springMvcApiReader75.parseResponseHeaders(responseHeaderArray81);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = springMvcApiReader75.LOG;
        io.swagger.models.Swagger swagger84 = springMvcApiReader75.swagger;
        springMvcApiReader75.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet86 = springMvcApiReader75.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet86);
        io.swagger.annotations.Api api89 = null;
        boolean boolean90 = springMvcApiReader2.canReadApi(true, api89);
        io.swagger.models.Swagger swagger91 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter92 = null;
        springMvcApiReader2.LOG = logAdapter92;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter94 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(parameterList25);
        org.junit.Assert.assertNotNull(responseHeaderArray26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(responseHeaderArray44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(parameterList56);
        org.junit.Assert.assertNotNull(responseHeaderArray57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNull(swagger62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(annotationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(parameterList80);
        org.junit.Assert.assertNotNull(responseHeaderArray81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(logAdapter83);
        org.junit.Assert.assertNull(swagger84);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(swagger91);
        org.junit.Assert.assertNull(logAdapter94);
    }

    @Test
    public void test9291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9291");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("", strMap16);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader2.parseOperationPath("hi!", strMap19);
        io.swagger.models.Operation operation21 = null;
        io.swagger.annotations.ApiOperation apiOperation22 = null;
        springMvcApiReader2.updateTagsForOperation(operation21, apiOperation22);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        io.swagger.annotations.Api api29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet30 = springMvcApiReader2.extractTags(api29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test9292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9292");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        springMvcApiReader2.LOG = logAdapter32;
        io.swagger.models.Operation operation34 = null;
        io.swagger.annotations.ApiOperation apiOperation35 = null;
        springMvcApiReader2.updateTagsForOperation(operation34, apiOperation35);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(typeSet31);
    }

    @Test
    public void test9293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9293");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        springMvcApiReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = springMvcApiReader21.swagger;
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] { wildcardClass34 };
        java.util.ArrayList<java.lang.reflect.Type> typeList36 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList36, typeArray35);
        springMvcApiReader21.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList36);
        java.util.Set<java.lang.reflect.Type> typeSet39 = null;
        springMvcApiReader21.setTypesToSkip(typeSet39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList48 = springMvcApiReader43.getParameters(type44, (java.util.List<java.lang.annotation.Annotation>) annotationList46);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray49 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] { wildcardClass52 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet54 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet54, typeArray53);
        springMvcApiReader43.typesToSkip = typeSet54;
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader43.typesToSkip;
        springMvcApiReader21.typesToSkip = typeSet57;
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader21.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type type64 = null;
        java.lang.annotation.Annotation[] annotationArray65 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList66 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList66, annotationArray65);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList68 = springMvcApiReader63.getParameters(type64, (java.util.List<java.lang.annotation.Annotation>) annotationList66);
        java.util.Set<java.lang.reflect.Type> typeSet69 = null;
        springMvcApiReader63.typesToSkip = typeSet69;
        java.util.Set<java.lang.reflect.Type> typeSet71 = null;
        springMvcApiReader63.typesToSkip = typeSet71;
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader75 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger73, logAdapter74);
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader75.typesToSkip;
        springMvcApiReader75.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet78 = springMvcApiReader75.typesToSkip;
        io.swagger.models.Swagger swagger79 = null;
        springMvcApiReader75.swagger = swagger79;
        io.swagger.models.Swagger swagger81 = springMvcApiReader75.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader75.getTypesToSkip();
        springMvcApiReader63.setTypesToSkip(typeSet82);
        springMvcApiReader2.setTypesToSkip(typeSet82);
        java.util.Set<java.lang.reflect.Type> typeSet85 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet87 = springMvcApiReader2.extractTags(api86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(responseHeaderArray27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(parameterList48);
        org.junit.Assert.assertNotNull(responseHeaderArray49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(annotationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(parameterList68);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNull(swagger81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(typeSet85);
    }

    @Test
    public void test9294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9294");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type type36 = null;
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList40 = springMvcApiReader35.getParameters(type36, (java.util.List<java.lang.annotation.Annotation>) annotationList38);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader35.parseResponseHeaders(responseHeaderArray41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass44 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader35.typesToSkip = typeSet46;
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader27.parseOperationPath("hi!", strMap51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray53 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray53);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray53);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader2.parseOperationPath("/hi!", strMap57);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader2.parseOperationPath("", strMap60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader2.parseOperationPath("/hi!", strMap63);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(parameterList40);
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "/hi!" + "'", str58, "/hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertNull(logAdapter65);
    }

    @Test
    public void test9295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9295");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger4 = null;
        springMvcApiReader2.swagger = swagger4;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList13 = springMvcApiReader8.getParameters(type9, (java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        springMvcApiReader2.LOG = logAdapter20;
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader25.typesToSkip;
        springMvcApiReader25.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader25.typesToSkip;
        springMvcApiReader25.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        io.swagger.models.Swagger swagger33 = springMvcApiReader32.swagger;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader36.typesToSkip;
        java.lang.String[] strArray41 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray44 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap45 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray46 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList47 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList47, securityRequirementArray46);
        io.swagger.models.Operation operation49 = null;
        springMvcApiReader36.updateOperation(strArray41, strArray44, strMap45, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList47, operation49);
        java.lang.Class<?> wildcardClass51 = strArray41.getClass();
        springMvcApiReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        java.lang.String str55 = springMvcApiReader32.parseOperationPath("/hi!", strMap54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type type59 = null;
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader58.getParameters(type59, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray64 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap65 = springMvcApiReader58.parseResponseHeaders(responseHeaderArray64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        springMvcApiReader58.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.reflect.Type type72 = null;
        java.lang.annotation.Annotation[] annotationArray73 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList74 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList74, annotationArray73);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList76 = springMvcApiReader71.getParameters(type72, (java.util.List<java.lang.annotation.Annotation>) annotationList74);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray77 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap78 = springMvcApiReader71.parseResponseHeaders(responseHeaderArray77);
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        springMvcApiReader71.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        io.swagger.models.Swagger swagger82 = springMvcApiReader71.swagger;
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] { wildcardClass84 };
        java.util.ArrayList<java.lang.reflect.Type> typeList86 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList86, typeArray85);
        springMvcApiReader71.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        springMvcApiReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        springMvcApiReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        io.swagger.annotations.Api api94 = null;
        boolean boolean95 = springMvcApiReader2.canReadApi(true, api94);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parameterList13);
        org.junit.Assert.assertNotNull(responseHeaderArray14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNull(swagger33);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(securityRequirementArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "/hi!" + "'", str55, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertNotNull(responseHeaderArray64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(annotationArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(parameterList76);
        org.junit.Assert.assertNotNull(responseHeaderArray77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNull(swagger82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test9296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9296");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.util.Set<java.lang.reflect.Type> typeSet10 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type type16 = null;
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList20 = springMvcApiReader15.getParameters(type16, (java.util.List<java.lang.annotation.Annotation>) annotationList18);
        java.util.Set<java.lang.reflect.Type> typeSet21 = null;
        springMvcApiReader15.typesToSkip = typeSet21;
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] { wildcardClass42 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader33.typesToSkip = typeSet44;
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader25.parseOperationPath("hi!", strMap49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray51 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap52 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray51);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray51);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray51);
        io.swagger.models.Operation operation55 = null;
        io.swagger.annotations.ApiOperation apiOperation56 = null;
        springMvcApiReader2.updateTagsForOperation(operation55, apiOperation56);
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger59 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(parameterList20);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "/hi!" + "'", str50, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNull(swagger59);
    }

    @Test
    public void test9297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9297");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger14 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(logAdapter10);
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNull(swagger14);
    }

    @Test
    public void test9298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9298");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        io.swagger.models.Operation operation19 = null;
        io.swagger.annotations.ApiOperation apiOperation20 = null;
        springMvcApiReader2.updateTagsForOperation(operation19, apiOperation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger25 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.typesToSkip;
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        io.swagger.models.Operation operation30 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList28, strMap29, operation30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNull(swagger25);
        org.junit.Assert.assertNotNull(typeSet27);
    }

    @Test
    public void test9299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9299");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList25 = springMvcApiReader20.getParameters(type21, (java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        springMvcApiReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader20.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        springMvcApiReader20.LOG = logAdapter32;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList41 = springMvcApiReader36.getParameters(type37, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader36.parseResponseHeaders(responseHeaderArray42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        springMvcApiReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        springMvcApiReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray53 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader52.parseResponseHeaders(responseHeaderArray53);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type type58 = null;
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList62 = springMvcApiReader57.getParameters(type58, (java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean63 = springMvcApiReader52.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader52.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader52.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader52.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet66;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader2.parseOperationPath("/hi!", strMap69);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(parameterList25);
        org.junit.Assert.assertNotNull(responseHeaderArray26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(parameterList41);
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(parameterList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
    }

    @Test
    public void test9300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9300");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation46 = null;
        io.swagger.annotations.ApiOperation apiOperation47 = null;
        springMvcApiReader2.updateTagsForOperation(operation46, apiOperation47);
        io.swagger.models.Swagger swagger49 = null;
        springMvcApiReader2.swagger = swagger49;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation52 = null;
        io.swagger.annotations.ApiOperation apiOperation53 = null;
        springMvcApiReader2.updateTagsForOperation(operation52, apiOperation53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        springMvcApiReader2.LOG = logAdapter55;
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.getTypesToSkip();
        java.lang.reflect.Method method58 = null;
        io.swagger.models.Operation operation59 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method58, operation59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertNotNull(typeSet57);
    }

    @Test
    public void test9301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9301");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray12 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap13 = springMvcApiReader11.parseResponseHeaders(responseHeaderArray12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        boolean boolean22 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList19);
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader11.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet23);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader2.canReadApi(true, api27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api31 = null;
        boolean boolean32 = springMvcApiReader2.canReadApi(true, api31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(logAdapter33);
    }

    @Test
    public void test9302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9302");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        springMvcApiReader2.LOG = logAdapter19;
        io.swagger.models.Operation operation21 = null;
        io.swagger.annotations.ApiOperation apiOperation22 = null;
        springMvcApiReader2.updateTagsForOperation(operation21, apiOperation22);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap24 = null;
        io.swagger.annotations.Api api25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap26 = springMvcApiReader2.updateTagsForApi(strMap24, api25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(typeSet16);
    }

    @Test
    public void test9303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9303");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        boolean boolean31 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass16, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet34 = null;
        springMvcApiReader2.typesToSkip = typeSet34;
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger38 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList40 = springMvcApiReader2.getSecurityRequirements(api39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNull(typeSet36);
        org.junit.Assert.assertNull(swagger38);
    }

    @Test
    public void test9304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9304");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader23.typesToSkip;
        springMvcApiReader23.updateExtensionChain();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader23.setTypesToSkip(typeSet30);
        springMvcApiReader2.setTypesToSkip(typeSet30);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader2.canReadApi(false, api34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger37 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader41.parseResponseHeaders(responseHeaderArray42);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader41.swagger = swagger44;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        springMvcApiReader41.updateExtensionChain();
        io.swagger.annotations.Api api49 = null;
        boolean boolean50 = springMvcApiReader41.canReadApi(true, api49);
        springMvcApiReader41.updateExtensionChain();
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        io.swagger.models.Swagger swagger55 = springMvcApiReader54.swagger;
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader54.updateTagsForOperation(operation56, apiOperation57);
        java.lang.Class<?> wildcardClass59 = springMvcApiReader54.getClass();
        springMvcApiReader41.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNull(swagger37);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(swagger55);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test9305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9305");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(true, api17);
        io.swagger.models.Swagger swagger19 = null;
        springMvcApiReader2.swagger = swagger19;
        io.swagger.models.Operation operation21 = null;
        io.swagger.annotations.ApiOperation apiOperation22 = null;
        springMvcApiReader2.updateTagsForOperation(operation21, apiOperation22);
        java.lang.reflect.Method method24 = null;
        io.swagger.models.Operation operation25 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method24, operation25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test9306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9306");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation18 = null;
        io.swagger.annotations.ApiOperation apiOperation19 = null;
        springMvcApiReader2.updateTagsForOperation(operation18, apiOperation19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        springMvcApiReader2.LOG = logAdapter22;
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        io.swagger.models.Operation operation27 = null;
        io.swagger.annotations.ApiResponses apiResponses28 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation27, apiResponses28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNull(logAdapter21);
    }

    @Test
    public void test9307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9307");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type type36 = null;
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList40 = springMvcApiReader35.getParameters(type36, (java.util.List<java.lang.annotation.Annotation>) annotationList38);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader35.parseResponseHeaders(responseHeaderArray41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass44 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader35.typesToSkip = typeSet46;
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader27.parseOperationPath("hi!", strMap51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray53 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray53);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray53);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader2.parseOperationPath("/hi!", strMap57);
        io.swagger.models.Swagger swagger59 = null;
        springMvcApiReader2.swagger = swagger59;
        io.swagger.annotations.Api api62 = null;
        boolean boolean63 = springMvcApiReader2.canReadApi(false, api62);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type type67 = null;
        java.lang.annotation.Annotation[] annotationArray68 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList69 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList69, annotationArray68);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList71 = springMvcApiReader66.getParameters(type67, (java.util.List<java.lang.annotation.Annotation>) annotationList69);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray72 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap73 = springMvcApiReader66.parseResponseHeaders(responseHeaderArray72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        springMvcApiReader66.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader66.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        springMvcApiReader66.LOG = logAdapter78;
        java.util.Map<java.lang.String, java.lang.String> strMap81 = null;
        java.lang.String str82 = springMvcApiReader66.parseOperationPath("", strMap81);
        java.util.Set<java.lang.reflect.Type> typeSet83 = springMvcApiReader66.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet83;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(parameterList40);
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "/hi!" + "'", str58, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(annotationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(parameterList71);
        org.junit.Assert.assertNotNull(responseHeaderArray72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNotNull(typeSet83);
    }

    @Test
    public void test9308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9308");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList13 = springMvcApiReader8.getParameters(type9, (java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader8.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        springMvcApiReader8.LOG = logAdapter20;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader8.LOG;
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        io.swagger.models.Swagger swagger26 = null;
        springMvcApiReader25.swagger = swagger26;
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type type31 = null;
        java.lang.annotation.Annotation[] annotationArray32 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList33 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList33, annotationArray32);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList35 = springMvcApiReader30.getParameters(type31, (java.util.List<java.lang.annotation.Annotation>) annotationList33);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray36 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap37 = springMvcApiReader30.parseResponseHeaders(responseHeaderArray36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass39 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader30.typesToSkip = typeSet41;
        springMvcApiReader25.typesToSkip = typeSet41;
        springMvcApiReader8.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        springMvcApiReader2.typesToSkip = typeSet41;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger48 = null;
        springMvcApiReader2.swagger = swagger48;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parameterList13);
        org.junit.Assert.assertNotNull(responseHeaderArray14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(parameterList35);
        org.junit.Assert.assertNotNull(responseHeaderArray36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test9309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9309");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        io.swagger.models.Swagger swagger45 = null;
        springMvcApiReader2.swagger = swagger45;
        io.swagger.models.Swagger swagger47 = null;
        springMvcApiReader2.swagger = swagger47;
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader2.parseOperationPath("hi!", strMap50);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/hi!" + "'", str51, "/hi!");
    }

    @Test
    public void test9310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9310");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader23.typesToSkip;
        springMvcApiReader23.updateExtensionChain();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader23.setTypesToSkip(typeSet30);
        springMvcApiReader2.setTypesToSkip(typeSet30);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader2.canReadApi(true, api34);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        springMvcApiReader2.LOG = logAdapter36;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation40 = null;
        io.swagger.annotations.ApiOperation apiOperation41 = null;
        springMvcApiReader2.updateTagsForOperation(operation40, apiOperation41);
        io.swagger.models.Swagger swagger43 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type type55 = null;
        java.lang.annotation.Annotation[] annotationArray56 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList57 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList57, annotationArray56);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList59 = springMvcApiReader54.getParameters(type55, (java.util.List<java.lang.annotation.Annotation>) annotationList57);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader54.parseResponseHeaders(responseHeaderArray60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] { wildcardClass63 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader54.typesToSkip = typeSet65;
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader46.parseOperationPath("hi!", strMap70);
        io.swagger.annotations.Api api73 = null;
        boolean boolean74 = springMvcApiReader46.canReadApi(false, api73);
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader77 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger75, logAdapter76);
        java.lang.reflect.Type type78 = null;
        java.lang.annotation.Annotation[] annotationArray79 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList80 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList80, annotationArray79);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList82 = springMvcApiReader77.getParameters(type78, (java.util.List<java.lang.annotation.Annotation>) annotationList80);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray83 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap84 = springMvcApiReader77.parseResponseHeaders(responseHeaderArray83);
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        springMvcApiReader77.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass86);
        io.swagger.models.Swagger swagger88 = springMvcApiReader77.swagger;
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.reflect.Type[] typeArray91 = new java.lang.reflect.Type[] { wildcardClass90 };
        java.util.ArrayList<java.lang.reflect.Type> typeList92 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList92, typeArray91);
        springMvcApiReader77.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList92);
        springMvcApiReader46.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList92);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList92);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNull(swagger43);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(annotationArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(parameterList59);
        org.junit.Assert.assertNotNull(responseHeaderArray60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "/hi!" + "'", str71, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(annotationArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(parameterList82);
        org.junit.Assert.assertNotNull(responseHeaderArray83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNull(swagger88);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(typeArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test9311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9311");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader2.parseOperationPath("/hi!", strMap24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList33 = springMvcApiReader28.getParameters(type29, (java.util.List<java.lang.annotation.Annotation>) annotationList31);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray34 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap35 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        springMvcApiReader28.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type type42 = null;
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader41.getParameters(type42, (java.util.List<java.lang.annotation.Annotation>) annotationList44);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader41.parseResponseHeaders(responseHeaderArray47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        springMvcApiReader41.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        io.swagger.models.Swagger swagger52 = springMvcApiReader41.swagger;
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] { wildcardClass54 };
        java.util.ArrayList<java.lang.reflect.Type> typeList56 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList56, typeArray55);
        springMvcApiReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        springMvcApiReader28.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        io.swagger.models.Swagger swagger61 = null;
        springMvcApiReader2.swagger = swagger61;
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader2.parseOperationPath("", strMap64);
        io.swagger.models.Swagger swagger66 = null;
        springMvcApiReader2.swagger = swagger66;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader2.parseOperationPath("", strMap70);
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(parameterList33);
        org.junit.Assert.assertNotNull(responseHeaderArray34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNull(swagger52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
    }

    @Test
    public void test9312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9312");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader2.parseOperationPath("/hi!", strMap21);
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type type27 = null;
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList31 = springMvcApiReader26.getParameters(type27, (java.util.List<java.lang.annotation.Annotation>) annotationList29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray40 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap41 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] { wildcardClass43 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader34.typesToSkip = typeSet45;
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader26.parseOperationPath("hi!", strMap50);
        io.swagger.models.Operation operation52 = null;
        io.swagger.annotations.ApiOperation apiOperation53 = null;
        springMvcApiReader26.updateTagsForOperation(operation52, apiOperation53);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type type58 = null;
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList62 = springMvcApiReader57.getParameters(type58, (java.util.List<java.lang.annotation.Annotation>) annotationList60);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray63 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap64 = springMvcApiReader57.parseResponseHeaders(responseHeaderArray63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        springMvcApiReader26.LOG = logAdapter69;
        springMvcApiReader26.updateExtensionChain();
        io.swagger.annotations.Api api73 = null;
        boolean boolean74 = springMvcApiReader26.canReadApi(false, api73);
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader26.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet75);
        java.lang.String[] strArray77 = null;
        io.swagger.models.Swagger swagger78 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader80 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger78, logAdapter79);
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader80.typesToSkip;
        java.lang.String[] strArray85 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray88 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap89 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray90 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList91 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList91, securityRequirementArray90);
        io.swagger.models.Operation operation93 = null;
        springMvcApiReader80.updateOperation(strArray85, strArray88, strMap89, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList91, operation93);
        io.swagger.models.Operation operation95 = null;
        java.lang.String[] strArray96 = springMvcApiReader2.updateOperationProduces(strArray77, strArray88, operation95);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/hi!" + "'", str22, "/hi!");
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(parameterList31);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertNotNull(responseHeaderArray40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/hi!" + "'", str51, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(parameterList62);
        org.junit.Assert.assertNotNull(responseHeaderArray63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(securityRequirementArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(strArray96);
    }

    @Test
    public void test9313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9313");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet5 = null;
        springMvcApiReader2.setTypesToSkip(typeSet5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger9 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger10 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet12 = springMvcApiReader2.extractTags(api11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNull(typeSet7);
        org.junit.Assert.assertNull(typeSet8);
        org.junit.Assert.assertNull(swagger9);
        org.junit.Assert.assertNull(swagger10);
    }

    @Test
    public void test9314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9314");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger4 = null;
        springMvcApiReader2.swagger = swagger4;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList13 = springMvcApiReader8.getParameters(type9, (java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        io.swagger.models.Swagger swagger20 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader23.typesToSkip;
        springMvcApiReader23.updateExtensionChain();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList33 = springMvcApiReader28.getParameters(type29, (java.util.List<java.lang.annotation.Annotation>) annotationList31);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray34 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap35 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        springMvcApiReader28.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader41.parseResponseHeaders(responseHeaderArray42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        boolean boolean52 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList49);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList53 = springMvcApiReader23.getParameters((java.lang.reflect.Type) wildcardClass37, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        java.lang.reflect.Type type54 = null;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList58 = springMvcApiReader23.getParameters(type54, (java.util.List<java.lang.annotation.Annotation>) annotationList56);
        io.swagger.models.Operation operation59 = null;
        io.swagger.annotations.ApiOperation apiOperation60 = null;
        springMvcApiReader23.updateTagsForOperation(operation59, apiOperation60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader23.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader23.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet63);
        io.swagger.models.Operation operation67 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "hi!", operation67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parameterList13);
        org.junit.Assert.assertNotNull(responseHeaderArray14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNull(swagger20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(parameterList33);
        org.junit.Assert.assertNotNull(responseHeaderArray34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(parameterList53);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(parameterList58);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet63);
    }

    @Test
    public void test9315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9315");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Operation operation11 = null;
        io.swagger.annotations.ApiOperation apiOperation12 = null;
        springMvcApiReader2.updateTagsForOperation(operation11, apiOperation12);
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("", strMap18);
        io.swagger.models.Operation operation20 = null;
        io.swagger.annotations.ApiOperation apiOperation21 = null;
        springMvcApiReader2.updateTagsForOperation(operation20, apiOperation21);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(logAdapter23);
    }

    @Test
    public void test9316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9316");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader2.canReadApi(false, api59);
        io.swagger.models.Swagger swagger61 = null;
        springMvcApiReader2.swagger = swagger61;
        io.swagger.models.Swagger swagger63 = null;
        springMvcApiReader2.swagger = swagger63;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api67 = null;
        boolean boolean68 = springMvcApiReader2.canReadApi(false, api67);
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(typeSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(logAdapter65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(typeSet69);
        org.junit.Assert.assertNull(typeSet70);
    }

    @Test
    public void test9317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9317");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader15.typesToSkip;
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray23 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap24 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray25 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList26 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList26, securityRequirementArray25);
        io.swagger.models.Operation operation28 = null;
        springMvcApiReader15.updateOperation(strArray20, strArray23, strMap24, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList26, operation28);
        java.lang.String[] strArray35 = new java.lang.String[] { "/hi!", "", "", "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap36 = null;
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader39.typesToSkip;
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray47 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap48 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray49 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList50 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList50, securityRequirementArray49);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader39.updateOperation(strArray44, strArray47, strMap48, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList50, operation52);
        io.swagger.models.Operation operation54 = null;
        springMvcApiReader2.updateOperation(strArray23, strArray35, strMap36, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList50, operation54);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        springMvcApiReader2.LOG = logAdapter59;
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger62 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger63 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.ApiOperation apiOperation65 = null;
        io.swagger.models.Operation operation66 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation65, operation66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(securityRequirementArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(securityRequirementArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNull(swagger62);
        org.junit.Assert.assertNull(swagger63);
        org.junit.Assert.assertNotNull(typeSet64);
    }

    @Test
    public void test9318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9318");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api14 = null;
        boolean boolean15 = springMvcApiReader2.canReadApi(false, api14);
        io.swagger.models.Swagger swagger16 = null;
        springMvcApiReader2.swagger = swagger16;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray22 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap23 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader21.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        springMvcApiReader21.LOG = logAdapter28;
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader32.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList42 = springMvcApiReader37.getParameters(type38, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        boolean boolean43 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader32.getTypesToSkip();
        springMvcApiReader21.setTypesToSkip(typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader21.LOG;
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader49.typesToSkip;
        springMvcApiReader49.updateExtensionChain();
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type type55 = null;
        java.lang.annotation.Annotation[] annotationArray56 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList57 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList57, annotationArray56);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList59 = springMvcApiReader54.getParameters(type55, (java.util.List<java.lang.annotation.Annotation>) annotationList57);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader54.parseResponseHeaders(responseHeaderArray60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        springMvcApiReader54.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray68 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap69 = springMvcApiReader67.parseResponseHeaders(responseHeaderArray68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type type73 = null;
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList77 = springMvcApiReader72.getParameters(type73, (java.util.List<java.lang.annotation.Annotation>) annotationList75);
        boolean boolean78 = springMvcApiReader67.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList75);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList79 = springMvcApiReader49.getParameters((java.lang.reflect.Type) wildcardClass63, (java.util.List<java.lang.annotation.Annotation>) annotationList75);
        springMvcApiReader49.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader49.getTypesToSkip();
        java.lang.Class<?> wildcardClass82 = typeSet81.getClass();
        springMvcApiReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass82);
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader21.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet84;
        java.lang.Class<?> wildcardClass86 = typeSet84.getClass();
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNull(logAdapter12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(parameterList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(annotationArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(parameterList59);
        org.junit.Assert.assertNotNull(responseHeaderArray60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(parameterList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(parameterList79);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test9319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9319");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray31);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray31);
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader2.swagger = swagger34;
        io.swagger.annotations.Api api37 = null;
        boolean boolean38 = springMvcApiReader2.canReadApi(false, api37);
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger42 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger43 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        springMvcApiReader2.LOG = logAdapter44;
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNull(swagger42);
        org.junit.Assert.assertNull(swagger43);
    }

    @Test
    public void test9320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9320");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader2.canReadApi(false, api59);
        io.swagger.models.Swagger swagger61 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader2.parseOperationPath("hi!", strMap64);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(typeSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(swagger61);
        org.junit.Assert.assertNull(typeSet62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "/hi!" + "'", str65, "/hi!");
    }

    @Test
    public void test9321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9321");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger12 = springMvcApiReader2.swagger;
        java.lang.reflect.Type type13 = null;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader16.typesToSkip;
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray24 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap25 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray26 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList27 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList27, securityRequirementArray26);
        io.swagger.models.Operation operation29 = null;
        springMvcApiReader16.updateOperation(strArray21, strArray24, strMap25, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList27, operation29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader16.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        springMvcApiReader16.LOG = logAdapter32;
        io.swagger.models.Operation operation34 = null;
        io.swagger.annotations.ApiOperation apiOperation35 = null;
        springMvcApiReader16.updateTagsForOperation(operation34, apiOperation35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader39.typesToSkip;
        springMvcApiReader39.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader39.typesToSkip;
        io.swagger.models.Swagger swagger43 = null;
        springMvcApiReader39.swagger = swagger43;
        io.swagger.models.Swagger swagger45 = springMvcApiReader39.swagger;
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type type51 = null;
        java.lang.annotation.Annotation[] annotationArray52 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList53 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList53, annotationArray52);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList55 = springMvcApiReader50.getParameters(type51, (java.util.List<java.lang.annotation.Annotation>) annotationList53);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type type59 = null;
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader58.getParameters(type59, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray64 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap65 = springMvcApiReader58.parseResponseHeaders(responseHeaderArray64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] { wildcardClass67 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet69 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet69, typeArray68);
        springMvcApiReader58.typesToSkip = typeSet69;
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet69);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        java.lang.String str75 = springMvcApiReader50.parseOperationPath("hi!", strMap74);
        java.lang.annotation.Annotation[] annotationArray76 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList77 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList77, annotationArray76);
        boolean boolean79 = springMvcApiReader50.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList77);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList80 = springMvcApiReader39.getParameters((java.lang.reflect.Type) wildcardClass47, (java.util.List<java.lang.annotation.Annotation>) annotationList77);
        boolean boolean81 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList77);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList82 = springMvcApiReader2.getParameters(type13, (java.util.List<java.lang.annotation.Annotation>) annotationList77);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource83 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger84 = springMvcApiReader2.read(springResource83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(logAdapter10);
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNull(swagger12);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(securityRequirementArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(annotationArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(parameterList55);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertNotNull(responseHeaderArray64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/hi!" + "'", str75, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(parameterList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(parameterList82);
    }

    @Test
    public void test9322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9322");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader21.typesToSkip;
        springMvcApiReader21.updateExtensionChain();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type type27 = null;
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList31 = springMvcApiReader26.getParameters(type27, (java.util.List<java.lang.annotation.Annotation>) annotationList29);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList53 = springMvcApiReader48.getParameters(type49, (java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray54 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] { wildcardClass57 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader48.typesToSkip = typeSet59;
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader40.parseOperationPath("hi!", strMap64);
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        boolean boolean69 = springMvcApiReader40.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList70 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass35, (java.util.List<java.lang.annotation.Annotation>) annotationList67);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader73.typesToSkip;
        springMvcApiReader73.updateExtensionChain();
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader78.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader78.getTypesToSkip();
        springMvcApiReader73.setTypesToSkip(typeSet80);
        springMvcApiReader2.setTypesToSkip(typeSet80);
        io.swagger.models.Swagger swagger83 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap85 = null;
        java.lang.String str86 = springMvcApiReader2.parseOperationPath("", strMap85);
        io.swagger.models.Operation operation87 = null;
        io.swagger.annotations.ApiOperation apiOperation88 = null;
        springMvcApiReader2.updateTagsForOperation(operation87, apiOperation88);
        io.swagger.models.Swagger swagger90 = null;
        springMvcApiReader2.swagger = swagger90;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(parameterList31);
        org.junit.Assert.assertNotNull(responseHeaderArray32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(parameterList53);
        org.junit.Assert.assertNotNull(responseHeaderArray54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "/hi!" + "'", str65, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(parameterList70);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNull(swagger83);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
    }

    @Test
    public void test9323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9323");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader2.canReadApi(false, api59);
        io.swagger.models.Swagger swagger61 = null;
        springMvcApiReader2.swagger = swagger61;
        io.swagger.models.Swagger swagger63 = null;
        springMvcApiReader2.swagger = swagger63;
        io.swagger.models.Swagger swagger65 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api67 = null;
        boolean boolean68 = springMvcApiReader2.canReadApi(false, api67);
        io.swagger.models.Swagger swagger69 = null;
        springMvcApiReader2.swagger = swagger69;
        io.swagger.models.Operation operation71 = null;
        io.swagger.annotations.ApiOperation apiOperation72 = null;
        springMvcApiReader2.updateTagsForOperation(operation71, apiOperation72);
        io.swagger.models.Swagger swagger74 = null;
        springMvcApiReader2.swagger = swagger74;
        io.swagger.annotations.Api api76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet77 = springMvcApiReader2.extractTags(api76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(typeSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(swagger65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test9324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9324");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = null;
        springMvcApiReader2.swagger = swagger6;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader11.swagger = swagger12;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader11.LOG = logAdapter14;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        io.swagger.models.Swagger swagger19 = springMvcApiReader18.swagger;
        io.swagger.models.Swagger swagger20 = springMvcApiReader18.swagger;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader23.typesToSkip;
        java.lang.String[] strArray28 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray31 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap32 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray33 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList34 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList34, securityRequirementArray33);
        io.swagger.models.Operation operation36 = null;
        springMvcApiReader23.updateOperation(strArray28, strArray31, strMap32, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList34, operation36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader23.typesToSkip;
        springMvcApiReader18.setTypesToSkip(typeSet38);
        springMvcApiReader11.setTypesToSkip(typeSet38);
        springMvcApiReader2.typesToSkip = typeSet38;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type type45 = null;
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList49 = springMvcApiReader44.getParameters(type45, (java.util.List<java.lang.annotation.Annotation>) annotationList47);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray50 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap51 = springMvcApiReader44.parseResponseHeaders(responseHeaderArray50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader44.LOG;
        io.swagger.models.Swagger swagger53 = springMvcApiReader44.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader44.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet54;
        io.swagger.models.Swagger swagger56 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation57 = null;
        io.swagger.annotations.ApiOperation apiOperation58 = null;
        springMvcApiReader2.updateTagsForOperation(operation57, apiOperation58);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger61 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNull(swagger19);
        org.junit.Assert.assertNull(swagger20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(securityRequirementArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(parameterList49);
        org.junit.Assert.assertNotNull(responseHeaderArray50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertNull(swagger53);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNull(swagger56);
        org.junit.Assert.assertNull(swagger61);
    }

    @Test
    public void test9325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9325");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        springMvcApiReader2.swagger = swagger6;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray24 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap25 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] { wildcardClass27 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader18.typesToSkip = typeSet29;
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader10.parseOperationPath("hi!", strMap34);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray36 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap37 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader40.typesToSkip;
        springMvcApiReader40.updateExtensionChain();
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type type46 = null;
        java.lang.annotation.Annotation[] annotationArray47 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList48 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList48, annotationArray47);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList50 = springMvcApiReader45.getParameters(type46, (java.util.List<java.lang.annotation.Annotation>) annotationList48);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray51 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap52 = springMvcApiReader45.parseResponseHeaders(responseHeaderArray51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        springMvcApiReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray59 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap60 = springMvcApiReader58.parseResponseHeaders(responseHeaderArray59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type type64 = null;
        java.lang.annotation.Annotation[] annotationArray65 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList66 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList66, annotationArray65);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList68 = springMvcApiReader63.getParameters(type64, (java.util.List<java.lang.annotation.Annotation>) annotationList66);
        boolean boolean69 = springMvcApiReader58.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList66);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList70 = springMvcApiReader40.getParameters((java.lang.reflect.Type) wildcardClass54, (java.util.List<java.lang.annotation.Annotation>) annotationList66);
        boolean boolean71 = springMvcApiReader10.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList66);
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader10.getTypesToSkip();
        io.swagger.annotations.Api api74 = null;
        boolean boolean75 = springMvcApiReader10.canReadApi(false, api74);
        io.swagger.models.Swagger swagger76 = springMvcApiReader10.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader10.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet77);
        io.swagger.models.Operation operation79 = null;
        io.swagger.annotations.ApiOperation apiOperation80 = null;
        springMvcApiReader2.updateTagsForOperation(operation79, apiOperation80);
        io.swagger.models.Swagger swagger82 = null;
        springMvcApiReader2.swagger = swagger82;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertNotNull(responseHeaderArray24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(annotationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(parameterList50);
        org.junit.Assert.assertNotNull(responseHeaderArray51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(annotationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(parameterList68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(parameterList70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(swagger76);
        org.junit.Assert.assertNotNull(typeSet77);
    }

    @Test
    public void test9326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9326");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        boolean boolean31 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass16, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.lang.reflect.Type type33 = null;
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList37 = springMvcApiReader2.getParameters(type33, (java.util.List<java.lang.annotation.Annotation>) annotationList35);
        io.swagger.models.Swagger swagger38 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type type42 = null;
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader41.getParameters(type42, (java.util.List<java.lang.annotation.Annotation>) annotationList44);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray55 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap56 = springMvcApiReader49.parseResponseHeaders(responseHeaderArray55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass58 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader49.typesToSkip = typeSet60;
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader41.parseOperationPath("hi!", strMap65);
        io.swagger.models.Operation operation67 = null;
        io.swagger.annotations.ApiOperation apiOperation68 = null;
        springMvcApiReader41.updateTagsForOperation(operation67, apiOperation68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type type73 = null;
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList77 = springMvcApiReader72.getParameters(type73, (java.util.List<java.lang.annotation.Annotation>) annotationList75);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray78 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap79 = springMvcApiReader72.parseResponseHeaders(responseHeaderArray78);
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        springMvcApiReader72.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        springMvcApiReader41.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader41.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet84;
        java.util.Map<java.lang.String, java.lang.String> strMap87 = null;
        java.lang.String str88 = springMvcApiReader2.parseOperationPath("/hi!", strMap87);
        io.swagger.models.Operation operation89 = null;
        io.swagger.annotations.ApiOperation apiOperation90 = null;
        springMvcApiReader2.updateTagsForOperation(operation89, apiOperation90);
        java.util.Set<java.lang.reflect.Type> typeSet92 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter93 = null;
        springMvcApiReader2.LOG = logAdapter93;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(parameterList37);
        org.junit.Assert.assertNull(swagger38);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertNotNull(responseHeaderArray55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!" + "'", str66, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(parameterList77);
        org.junit.Assert.assertNotNull(responseHeaderArray78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "/hi!" + "'", str88, "/hi!");
        org.junit.Assert.assertNotNull(typeSet92);
    }

    @Test
    public void test9327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9327");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.annotations.Api api11 = null;
        boolean boolean12 = springMvcApiReader2.canReadApi(true, api11);
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader19.typesToSkip;
        springMvcApiReader19.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet22 = null;
        springMvcApiReader19.setTypesToSkip(typeSet22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader19.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader19.typesToSkip;
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader19.canReadApi(false, api27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type type32 = null;
        java.lang.annotation.Annotation[] annotationArray33 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList34 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList34, annotationArray33);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList36 = springMvcApiReader31.getParameters(type32, (java.util.List<java.lang.annotation.Annotation>) annotationList34);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray37 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap38 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader41.parseResponseHeaders(responseHeaderArray42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        boolean boolean52 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList49);
        boolean boolean53 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type type57 = null;
        java.lang.annotation.Annotation[] annotationArray58 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList59 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList59, annotationArray58);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList61 = springMvcApiReader56.getParameters(type57, (java.util.List<java.lang.annotation.Annotation>) annotationList59);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList69 = springMvcApiReader64.getParameters(type65, (java.util.List<java.lang.annotation.Annotation>) annotationList67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray70 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader64.parseResponseHeaders(responseHeaderArray70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.reflect.Type[] typeArray74 = new java.lang.reflect.Type[] { wildcardClass73 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet75 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet75, typeArray74);
        springMvcApiReader64.typesToSkip = typeSet75;
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet75);
        java.util.Map<java.lang.String, java.lang.String> strMap80 = null;
        java.lang.String str81 = springMvcApiReader56.parseOperationPath("hi!", strMap80);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray82 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap83 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray82);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap84 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray82);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap85 = springMvcApiReader19.parseResponseHeaders(responseHeaderArray82);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap86 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray82);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter87 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNull(typeSet24);
        org.junit.Assert.assertNull(typeSet25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(annotationArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(parameterList36);
        org.junit.Assert.assertNotNull(responseHeaderArray37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(annotationArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(parameterList61);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(parameterList69);
        org.junit.Assert.assertNotNull(responseHeaderArray70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "/hi!" + "'", str81, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray82);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNull(logAdapter87);
    }

    @Test
    public void test9328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9328");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray28 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap29 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader32.typesToSkip;
        springMvcApiReader32.updateExtensionChain();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList42 = springMvcApiReader37.getParameters(type38, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray43 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        springMvcApiReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray51 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap52 = springMvcApiReader50.parseResponseHeaders(responseHeaderArray51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type type56 = null;
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList60 = springMvcApiReader55.getParameters(type56, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        boolean boolean61 = springMvcApiReader50.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList62 = springMvcApiReader32.getParameters((java.lang.reflect.Type) wildcardClass46, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        boolean boolean63 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger65 = null;
        springMvcApiReader2.swagger = swagger65;
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type type70 = null;
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList74 = springMvcApiReader69.getParameters(type70, (java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray75 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap76 = springMvcApiReader69.parseResponseHeaders(responseHeaderArray75);
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        springMvcApiReader69.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass78);
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader69.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader69.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet81);
        io.swagger.models.Swagger swagger83 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation84 = null;
        io.swagger.annotations.ApiResponses apiResponses85 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation84, apiResponses85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(parameterList42);
        org.junit.Assert.assertNotNull(responseHeaderArray43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(parameterList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(parameterList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(parameterList74);
        org.junit.Assert.assertNotNull(responseHeaderArray75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNull(swagger83);
    }

    @Test
    public void test9329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9329");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray22 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap23 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass25, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        springMvcApiReader2.LOG = logAdapter31;
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader2.parseOperationPath("", strMap37);
        io.swagger.annotations.Api api40 = null;
        boolean boolean41 = springMvcApiReader2.canReadApi(true, api40);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        springMvcApiReader2.LOG = logAdapter44;
        io.swagger.annotations.Api api46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet47 = springMvcApiReader2.extractTags(api46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNull(typeSet13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(responseHeaderArray22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(typeSet43);
    }

    @Test
    public void test9330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9330");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] { wildcardClass33 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader24.typesToSkip = typeSet35;
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader16.parseOperationPath("hi!", strMap40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray42);
        io.swagger.models.Operation operation44 = null;
        io.swagger.annotations.ApiOperation apiOperation45 = null;
        springMvcApiReader16.updateTagsForOperation(operation44, apiOperation45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        java.util.Set<java.lang.reflect.Type> typeSet55 = null;
        springMvcApiReader49.typesToSkip = typeSet55;
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader49.parseOperationPath("/hi!", strMap58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader49.typesToSkip;
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type type64 = null;
        java.lang.annotation.Annotation[] annotationArray65 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList66 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList66, annotationArray65);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList68 = springMvcApiReader63.getParameters(type64, (java.util.List<java.lang.annotation.Annotation>) annotationList66);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader63.parseResponseHeaders(responseHeaderArray69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        springMvcApiReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList77 = springMvcApiReader49.getParameters((java.lang.reflect.Type) wildcardClass72, (java.util.List<java.lang.annotation.Annotation>) annotationList75);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        io.swagger.models.Swagger swagger80 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger81 = null;
        springMvcApiReader2.swagger = swagger81;
        io.swagger.models.Swagger swagger83 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api85 = null;
        boolean boolean86 = springMvcApiReader2.canReadApi(true, api85);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter87 = null;
        springMvcApiReader2.LOG = logAdapter87;
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet90 = springMvcApiReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass91 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/hi!" + "'", str41, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNull(typeSet60);
        org.junit.Assert.assertNotNull(annotationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(parameterList68);
        org.junit.Assert.assertNotNull(responseHeaderArray69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(parameterList77);
        org.junit.Assert.assertNull(swagger80);
        org.junit.Assert.assertNull(swagger83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test9331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9331");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        springMvcApiReader2.LOG = logAdapter28;
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader32.canReadApi(false, api34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader38.getParameters(type39, (java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray44 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap45 = springMvcApiReader38.parseResponseHeaders(responseHeaderArray44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader38.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        springMvcApiReader38.LOG = logAdapter50;
        java.lang.Class<?> wildcardClass52 = springMvcApiReader38.getClass();
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList56 = springMvcApiReader32.getParameters((java.lang.reflect.Type) wildcardClass52, (java.util.List<java.lang.annotation.Annotation>) annotationList54);
        boolean boolean57 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type type61 = null;
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader60.getParameters(type61, (java.util.List<java.lang.annotation.Annotation>) annotationList63);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader60.parseResponseHeaders(responseHeaderArray66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        springMvcApiReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass69);
        io.swagger.models.Swagger swagger71 = springMvcApiReader60.swagger;
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.reflect.Type[] typeArray74 = new java.lang.reflect.Type[] { wildcardClass73 };
        java.util.ArrayList<java.lang.reflect.Type> typeList75 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList75, typeArray74);
        springMvcApiReader60.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList75);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList75);
        io.swagger.models.Operation operation79 = null;
        io.swagger.annotations.ApiOperation apiOperation80 = null;
        springMvcApiReader2.updateTagsForOperation(operation79, apiOperation80);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader2.parseOperationPath("hi!", strMap83);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        springMvcApiReader2.LOG = logAdapter85;
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter88 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap90 = null;
        java.lang.String str91 = springMvcApiReader2.parseOperationPath("/hi!", strMap90);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(responseHeaderArray44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(parameterList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertNotNull(responseHeaderArray66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNull(swagger71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/hi!" + "'", str84, "/hi!");
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNull(logAdapter88);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "/hi!" + "'", str91, "/hi!");
    }

    @Test
    public void test9332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9332");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] { wildcardClass33 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader24.typesToSkip = typeSet35;
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader16.parseOperationPath("hi!", strMap40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray42);
        io.swagger.models.Operation operation44 = null;
        io.swagger.annotations.ApiOperation apiOperation45 = null;
        springMvcApiReader16.updateTagsForOperation(operation44, apiOperation45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        java.util.Set<java.lang.reflect.Type> typeSet55 = null;
        springMvcApiReader49.typesToSkip = typeSet55;
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader49.parseOperationPath("/hi!", strMap58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader49.typesToSkip;
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type type64 = null;
        java.lang.annotation.Annotation[] annotationArray65 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList66 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList66, annotationArray65);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList68 = springMvcApiReader63.getParameters(type64, (java.util.List<java.lang.annotation.Annotation>) annotationList66);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader63.parseResponseHeaders(responseHeaderArray69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        springMvcApiReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList77 = springMvcApiReader49.getParameters((java.lang.reflect.Type) wildcardClass72, (java.util.List<java.lang.annotation.Annotation>) annotationList75);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        io.swagger.models.Swagger swagger80 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger81 = null;
        springMvcApiReader2.swagger = swagger81;
        io.swagger.models.Swagger swagger83 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api85 = null;
        boolean boolean86 = springMvcApiReader2.canReadApi(true, api85);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter88 = null;
        springMvcApiReader2.LOG = logAdapter88;
        java.util.Set<java.lang.reflect.Type> typeSet90 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap92 = null;
        io.swagger.annotations.Api api93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap94 = springMvcApiReader2.updateTagsForApi(strMap92, api93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/hi!" + "'", str41, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNull(typeSet60);
        org.junit.Assert.assertNotNull(annotationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(parameterList68);
        org.junit.Assert.assertNotNull(responseHeaderArray69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(parameterList77);
        org.junit.Assert.assertNull(swagger80);
        org.junit.Assert.assertNull(swagger83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(typeSet91);
    }

    @Test
    public void test9333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9333");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray31);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray31);
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader2.swagger = swagger34;
        io.swagger.annotations.Api api37 = null;
        boolean boolean38 = springMvcApiReader2.canReadApi(false, api37);
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        io.swagger.models.Operation operation41 = null;
        io.swagger.annotations.ApiOperation apiOperation42 = null;
        springMvcApiReader2.updateTagsForOperation(operation41, apiOperation42);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(logAdapter44);
    }

    @Test
    public void test9334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9334");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        springMvcApiReader2.swagger = swagger3;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] { wildcardClass16 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader7.typesToSkip = typeSet18;
        springMvcApiReader2.typesToSkip = typeSet18;
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("", strMap23);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.ApiOperation apiOperation26 = null;
        io.swagger.models.Operation operation27 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation26, operation27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test9335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9335");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api16 = null;
        boolean boolean17 = springMvcApiReader2.canReadApi(true, api16);
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.ApiOperation apiOperation20 = null;
        io.swagger.models.Operation operation21 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation20, operation21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNotNull(typeSet19);
    }

    @Test
    public void test9336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9336");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        io.swagger.models.Swagger swagger13 = null;
        springMvcApiReader2.swagger = swagger13;
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        java.util.Set<java.lang.reflect.Type> typeSet24 = null;
        springMvcApiReader18.typesToSkip = typeSet24;
        springMvcApiReader18.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        java.lang.String str29 = springMvcApiReader18.parseOperationPath("/hi!", strMap28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader32.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList42 = springMvcApiReader37.getParameters(type38, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        boolean boolean43 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        boolean boolean44 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        boolean boolean45 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        springMvcApiReader2.LOG = logAdapter46;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNull(typeSet15);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "/hi!" + "'", str29, "/hi!");
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(parameterList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter48);
    }

    @Test
    public void test9337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9337");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader2.parseOperationPath("hi!", strMap19);
        io.swagger.models.Operation operation21 = null;
        io.swagger.annotations.ApiOperation apiOperation22 = null;
        springMvcApiReader2.updateTagsForOperation(operation21, apiOperation22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        springMvcApiReader26.LOG = logAdapter33;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader37.getTypesToSkip();
        springMvcApiReader26.setTypesToSkip(typeSet49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader26.LOG;
        java.lang.String[] strArray52 = null;
        java.lang.String[] strArray53 = null;
        io.swagger.models.Operation operation54 = null;
        java.lang.String[] strArray55 = springMvcApiReader26.updateOperationConsumes(strArray52, strArray53, operation54);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader26.getTypesToSkip();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        springMvcApiReader26.LOG = logAdapter60;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray62 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray62);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap64 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray62);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type type68 = null;
        java.lang.annotation.Annotation[] annotationArray69 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList70 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList70, annotationArray69);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList72 = springMvcApiReader67.getParameters(type68, (java.util.List<java.lang.annotation.Annotation>) annotationList70);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader67.parseResponseHeaders(responseHeaderArray73);
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.reflect.Type[] typeArray77 = new java.lang.reflect.Type[] { wildcardClass76 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet78 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet78, typeArray77);
        springMvcApiReader67.typesToSkip = typeSet78;
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader67.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader67.parseOperationPath("hi!", strMap83);
        java.util.Set<java.lang.reflect.Type> typeSet85 = springMvcApiReader67.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet85;
        java.util.Map<java.lang.String, java.lang.String> strMap88 = null;
        java.lang.String str89 = springMvcApiReader2.parseOperationPath("/hi!", strMap88);
        java.util.Map<java.lang.String, java.lang.String> strMap91 = null;
        java.lang.String str92 = springMvcApiReader2.parseOperationPath("/hi!", strMap91);
        java.util.Set<java.lang.reflect.Type> typeSet93 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api95 = null;
        boolean boolean96 = springMvcApiReader2.canReadApi(true, api95);
        io.swagger.models.Operation operation97 = null;
        io.swagger.annotations.ApiOperation apiOperation98 = null;
        springMvcApiReader2.updateTagsForOperation(operation97, apiOperation98);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNull(swagger17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "/hi!" + "'", str20, "/hi!");
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertNull(strArray55);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(responseHeaderArray62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(annotationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(parameterList72);
        org.junit.Assert.assertNotNull(responseHeaderArray73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/hi!" + "'", str84, "/hi!");
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "/hi!" + "'", str89, "/hi!");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "/hi!" + "'", str92, "/hi!");
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test9338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9338");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type type36 = null;
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList40 = springMvcApiReader35.getParameters(type36, (java.util.List<java.lang.annotation.Annotation>) annotationList38);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader35.parseResponseHeaders(responseHeaderArray41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass44 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader35.typesToSkip = typeSet46;
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader27.parseOperationPath("hi!", strMap51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray53 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray53);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray53);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        io.swagger.models.Swagger swagger60 = springMvcApiReader59.swagger;
        io.swagger.models.Swagger swagger61 = springMvcApiReader59.swagger;
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader64.typesToSkip;
        java.lang.String[] strArray69 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray72 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap73 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray74 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList75 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList75, securityRequirementArray74);
        io.swagger.models.Operation operation77 = null;
        springMvcApiReader64.updateOperation(strArray69, strArray72, strMap73, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList75, operation77);
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader64.typesToSkip;
        springMvcApiReader59.setTypesToSkip(typeSet79);
        io.swagger.models.Swagger swagger81 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader83 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger81, logAdapter82);
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader83.typesToSkip;
        springMvcApiReader83.updateExtensionChain();
        io.swagger.models.Swagger swagger86 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter87 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader88 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger86, logAdapter87);
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader88.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet90 = springMvcApiReader88.getTypesToSkip();
        springMvcApiReader83.setTypesToSkip(typeSet90);
        springMvcApiReader59.setTypesToSkip(typeSet90);
        java.util.Set<java.lang.reflect.Type> typeSet93 = springMvcApiReader59.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet93);
        io.swagger.annotations.Api api95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet96 = springMvcApiReader2.extractTags(api95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(parameterList40);
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(swagger60);
        org.junit.Assert.assertNull(swagger61);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(securityRequirementArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(typeSet93);
    }

    @Test
    public void test9339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9339");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger52 = null;
        springMvcApiReader2.swagger = swagger52;
        io.swagger.models.Swagger swagger54 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNull(swagger54);
        org.junit.Assert.assertNotNull(typeSet55);
    }

    @Test
    public void test9340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9340");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray28 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap29 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader32.typesToSkip;
        springMvcApiReader32.updateExtensionChain();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList42 = springMvcApiReader37.getParameters(type38, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray43 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        springMvcApiReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray51 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap52 = springMvcApiReader50.parseResponseHeaders(responseHeaderArray51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type type56 = null;
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList60 = springMvcApiReader55.getParameters(type56, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        boolean boolean61 = springMvcApiReader50.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList62 = springMvcApiReader32.getParameters((java.lang.reflect.Type) wildcardClass46, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        boolean boolean63 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader2.canReadApi(false, api66);
        io.swagger.models.Swagger swagger68 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(parameterList42);
        org.junit.Assert.assertNotNull(responseHeaderArray43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(parameterList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(parameterList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(swagger68);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNull(logAdapter70);
    }

    @Test
    public void test9341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9341");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger52 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger53 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        springMvcApiReader2.LOG = logAdapter54;
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader2.parseOperationPath("", strMap57);
        io.swagger.annotations.Api api60 = null;
        boolean boolean61 = springMvcApiReader2.canReadApi(true, api60);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource62 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger63 = springMvcApiReader2.read(springResource62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNull(swagger52);
        org.junit.Assert.assertNull(swagger53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test9342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9342");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader21.typesToSkip;
        springMvcApiReader21.updateExtensionChain();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type type27 = null;
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList31 = springMvcApiReader26.getParameters(type27, (java.util.List<java.lang.annotation.Annotation>) annotationList29);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass35, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger49 = null;
        springMvcApiReader2.swagger = swagger49;
        io.swagger.models.Operation operation51 = null;
        io.swagger.annotations.ApiOperation apiOperation52 = null;
        springMvcApiReader2.updateTagsForOperation(operation51, apiOperation52);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        springMvcApiReader2.LOG = logAdapter54;
        io.swagger.models.Swagger swagger56 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation59 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "", operation59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(parameterList31);
        org.junit.Assert.assertNotNull(responseHeaderArray32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertNull(swagger56);
    }

    @Test
    public void test9343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9343");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray16);
        io.swagger.models.Swagger swagger18 = springMvcApiReader15.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader15.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = springMvcApiReader15.LOG;
        io.swagger.models.Swagger swagger21 = springMvcApiReader15.swagger;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        io.swagger.models.Swagger swagger25 = springMvcApiReader24.swagger;
        io.swagger.models.Swagger swagger26 = springMvcApiReader24.swagger;
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader29.typesToSkip;
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray37 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap38 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray39 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList40 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList40, securityRequirementArray39);
        io.swagger.models.Operation operation42 = null;
        springMvcApiReader29.updateOperation(strArray34, strArray37, strMap38, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList40, operation42);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader29.typesToSkip;
        springMvcApiReader24.setTypesToSkip(typeSet44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray49 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        springMvcApiReader48.LOG = logAdapter55;
        io.swagger.models.Swagger swagger57 = null;
        springMvcApiReader48.swagger = swagger57;
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        io.swagger.models.Swagger swagger62 = null;
        springMvcApiReader61.swagger = swagger62;
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type type67 = null;
        java.lang.annotation.Annotation[] annotationArray68 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList69 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList69, annotationArray68);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList71 = springMvcApiReader66.getParameters(type67, (java.util.List<java.lang.annotation.Annotation>) annotationList69);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray72 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap73 = springMvcApiReader66.parseResponseHeaders(responseHeaderArray72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.reflect.Type[] typeArray76 = new java.lang.reflect.Type[] { wildcardClass75 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet77 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet77, typeArray76);
        springMvcApiReader66.typesToSkip = typeSet77;
        springMvcApiReader61.typesToSkip = typeSet77;
        springMvcApiReader48.typesToSkip = typeSet77;
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet77);
        io.swagger.models.Swagger swagger83 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader85 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger83, logAdapter84);
        java.lang.reflect.Type type86 = null;
        java.lang.annotation.Annotation[] annotationArray87 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList88 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList88, annotationArray87);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList90 = springMvcApiReader85.getParameters(type86, (java.util.List<java.lang.annotation.Annotation>) annotationList88);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray91 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap92 = springMvcApiReader85.parseResponseHeaders(responseHeaderArray91);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap93 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray91);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap94 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray91);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap95 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray91);
        java.util.Set<java.lang.reflect.Type> typeSet96 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap97 = null;
        io.swagger.annotations.Api api98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap99 = springMvcApiReader2.updateTagsForApi(strMap97, api98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(swagger18);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNull(logAdapter20);
        org.junit.Assert.assertNull(swagger21);
        org.junit.Assert.assertNull(swagger25);
        org.junit.Assert.assertNull(swagger26);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(securityRequirementArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(annotationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(parameterList71);
        org.junit.Assert.assertNotNull(responseHeaderArray72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(annotationArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(parameterList90);
        org.junit.Assert.assertNotNull(responseHeaderArray91);
        org.junit.Assert.assertNull(strMap92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertNull(strMap95);
        org.junit.Assert.assertNotNull(typeSet96);
    }

    @Test
    public void test9344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9344");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader7.typesToSkip;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray15 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap16 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray17 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList18 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList18, securityRequirementArray17);
        io.swagger.models.Operation operation20 = null;
        springMvcApiReader7.updateOperation(strArray12, strArray15, strMap16, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList18, operation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader7.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet26 = null;
        springMvcApiReader2.setTypesToSkip(typeSet26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.annotations.Api api31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList32 = springMvcApiReader2.getSecurityRequirements(api31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger4);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(securityRequirementArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet25);
    }

    @Test
    public void test9345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9345");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader2.canReadApi(false, api59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader2.parseOperationPath("/hi!", strMap63);
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader2.canReadApi(false, api66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        springMvcApiReader2.LOG = logAdapter68;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(typeSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(typeSet61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(logAdapter70);
    }

    @Test
    public void test9346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9346");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader21.typesToSkip = typeSet27;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader21.parseOperationPath("/hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] { wildcardClass51 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader42.typesToSkip = typeSet53;
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader34.parseOperationPath("hi!", strMap58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader2.parseOperationPath("hi!", strMap65);
        io.swagger.models.Operation operation67 = null;
        io.swagger.annotations.ApiOperation apiOperation68 = null;
        springMvcApiReader2.updateTagsForOperation(operation67, apiOperation68);
        io.swagger.models.Operation operation70 = null;
        io.swagger.annotations.ApiResponses apiResponses71 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation70, apiResponses71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!" + "'", str66, "/hi!");
    }

    @Test
    public void test9347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9347");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        springMvcApiReader2.LOG = logAdapter19;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader23.typesToSkip;
        springMvcApiReader23.updateExtensionChain();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader23.setTypesToSkip(typeSet30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader34.typesToSkip;
        springMvcApiReader34.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader34.typesToSkip;
        springMvcApiReader23.setTypesToSkip(typeSet37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        io.swagger.models.Swagger swagger42 = null;
        springMvcApiReader41.swagger = swagger42;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] { wildcardClass55 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader46.typesToSkip = typeSet57;
        springMvcApiReader41.typesToSkip = typeSet57;
        java.lang.Class<?> wildcardClass61 = typeSet57.getClass();
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList69 = springMvcApiReader64.getParameters(type65, (java.util.List<java.lang.annotation.Annotation>) annotationList67);
        java.util.Set<java.lang.reflect.Type> typeSet70 = null;
        springMvcApiReader64.typesToSkip = typeSet70;
        springMvcApiReader64.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        java.lang.String str75 = springMvcApiReader64.parseOperationPath("/hi!", strMap74);
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray79 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap80 = springMvcApiReader78.parseResponseHeaders(responseHeaderArray79);
        io.swagger.models.Swagger swagger81 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader83 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger81, logAdapter82);
        java.lang.reflect.Type type84 = null;
        java.lang.annotation.Annotation[] annotationArray85 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList86 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList86, annotationArray85);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList88 = springMvcApiReader83.getParameters(type84, (java.util.List<java.lang.annotation.Annotation>) annotationList86);
        boolean boolean89 = springMvcApiReader78.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList86);
        boolean boolean90 = springMvcApiReader64.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList86);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList91 = springMvcApiReader23.getParameters((java.lang.reflect.Type) wildcardClass61, (java.util.List<java.lang.annotation.Annotation>) annotationList86);
        java.util.Map<java.lang.String, java.lang.String> strMap92 = null;
        io.swagger.models.Operation operation93 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList91, strMap92, operation93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(logAdapter10);
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(parameterList69);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/hi!" + "'", str75, "/hi!");
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(annotationArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(parameterList88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(parameterList91);
    }

    @Test
    public void test9348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9348");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(false, api29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader2.parseOperationPath("/hi!", strMap32);
        io.swagger.annotations.Api api35 = null;
        boolean boolean36 = springMvcApiReader2.canReadApi(false, api35);
        io.swagger.annotations.Api api38 = null;
        boolean boolean39 = springMvcApiReader2.canReadApi(true, api38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/hi!" + "'", str33, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test9349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9349");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        java.util.Set<java.lang.reflect.Type> typeSet16 = null;
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.models.Swagger swagger18 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = springMvcApiReader23.getParameters(type24, (java.util.List<java.lang.annotation.Annotation>) annotationList26);
        java.util.Set<java.lang.reflect.Type> typeSet29 = null;
        springMvcApiReader23.typesToSkip = typeSet29;
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader23.parseOperationPath("/hi!", strMap32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList41 = springMvcApiReader36.getParameters(type37, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type type45 = null;
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList49 = springMvcApiReader44.getParameters(type45, (java.util.List<java.lang.annotation.Annotation>) annotationList47);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray50 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap51 = springMvcApiReader44.parseResponseHeaders(responseHeaderArray50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] { wildcardClass53 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader44.typesToSkip = typeSet55;
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader36.parseOperationPath("hi!", strMap60);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray62 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader36.parseResponseHeaders(responseHeaderArray62);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap64 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray62);
        java.lang.Class<?> wildcardClass65 = springMvcApiReader23.getClass();
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader68.parseResponseHeaders(responseHeaderArray69);
        io.swagger.models.Swagger swagger71 = springMvcApiReader68.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader68.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = springMvcApiReader68.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader68.getTypesToSkip();
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader77 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger75, logAdapter76);
        java.util.Set<java.lang.reflect.Type> typeSet78 = springMvcApiReader77.typesToSkip;
        java.lang.String[] strArray82 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray85 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap86 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray87 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList88 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList88, securityRequirementArray87);
        io.swagger.models.Operation operation90 = null;
        springMvcApiReader77.updateOperation(strArray82, strArray85, strMap86, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList88, operation90);
        io.swagger.models.Swagger swagger92 = null;
        springMvcApiReader77.swagger = swagger92;
        java.lang.annotation.Annotation[] annotationArray94 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList95 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean96 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList95, annotationArray94);
        boolean boolean97 = springMvcApiReader77.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList95);
        boolean boolean98 = springMvcApiReader68.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList95);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList99 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass65, (java.util.List<java.lang.annotation.Annotation>) annotationList95);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNull(swagger18);
        org.junit.Assert.assertNull(typeSet19);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(parameterList28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/hi!" + "'", str33, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(parameterList41);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(parameterList49);
        org.junit.Assert.assertNotNull(responseHeaderArray50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "/hi!" + "'", str61, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(swagger71);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNull(logAdapter73);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(securityRequirementArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(annotationArray94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertNotNull(parameterList99);
    }

    @Test
    public void test9350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9350");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger4 = null;
        springMvcApiReader2.swagger = swagger4;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList13 = springMvcApiReader8.getParameters(type9, (java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type type23 = null;
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList27 = springMvcApiReader22.getParameters(type23, (java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type type31 = null;
        java.lang.annotation.Annotation[] annotationArray32 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList33 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList33, annotationArray32);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList35 = springMvcApiReader30.getParameters(type31, (java.util.List<java.lang.annotation.Annotation>) annotationList33);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray36 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap37 = springMvcApiReader30.parseResponseHeaders(responseHeaderArray36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass39 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader30.typesToSkip = typeSet41;
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader22.parseOperationPath("hi!", strMap46);
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        boolean boolean51 = springMvcApiReader22.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList49);
        boolean boolean52 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.models.Swagger swagger53 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation54 = null;
        io.swagger.annotations.ApiOperation apiOperation55 = null;
        springMvcApiReader2.updateTagsForOperation(operation54, apiOperation55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type type60 = null;
        java.lang.annotation.Annotation[] annotationArray61 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList62 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList62, annotationArray61);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList64 = springMvcApiReader59.getParameters(type60, (java.util.List<java.lang.annotation.Annotation>) annotationList62);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type type68 = null;
        java.lang.annotation.Annotation[] annotationArray69 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList70 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList70, annotationArray69);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList72 = springMvcApiReader67.getParameters(type68, (java.util.List<java.lang.annotation.Annotation>) annotationList70);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader67.parseResponseHeaders(responseHeaderArray73);
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.reflect.Type[] typeArray77 = new java.lang.reflect.Type[] { wildcardClass76 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet78 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet78, typeArray77);
        springMvcApiReader67.typesToSkip = typeSet78;
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet78);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader59.parseOperationPath("hi!", strMap83);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray85 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap86 = springMvcApiReader59.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap87 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray85);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(parameterList13);
        org.junit.Assert.assertNotNull(responseHeaderArray14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(parameterList27);
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(parameterList35);
        org.junit.Assert.assertNotNull(responseHeaderArray36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/hi!" + "'", str47, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(swagger53);
        org.junit.Assert.assertNotNull(annotationArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(parameterList64);
        org.junit.Assert.assertNotNull(annotationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(parameterList72);
        org.junit.Assert.assertNotNull(responseHeaderArray73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/hi!" + "'", str84, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNull(strMap87);
    }

    @Test
    public void test9351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9351");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader22.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader22.getTypesToSkip();
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        java.util.Set<java.lang.reflect.Type> typeSet33 = null;
        springMvcApiReader27.typesToSkip = typeSet33;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader27.parseOperationPath("/hi!", strMap36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList53 = springMvcApiReader48.getParameters(type49, (java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray54 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] { wildcardClass57 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader48.typesToSkip = typeSet59;
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader40.parseOperationPath("hi!", strMap64);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray66);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap68 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray66);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap69 = springMvcApiReader22.parseResponseHeaders(responseHeaderArray66);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray66);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        java.lang.String str73 = springMvcApiReader2.parseOperationPath("", strMap72);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource74 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger75 = springMvcApiReader2.read(springResource74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(parameterList53);
        org.junit.Assert.assertNotNull(responseHeaderArray54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "/hi!" + "'", str65, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
    }

    @Test
    public void test9352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9352");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        boolean boolean24 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader13.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        java.lang.String[] strArray28 = null;
        java.lang.String[] strArray29 = null;
        io.swagger.models.Operation operation30 = null;
        java.lang.String[] strArray31 = springMvcApiReader2.updateOperationConsumes(strArray28, strArray29, operation30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader35.typesToSkip;
        springMvcApiReader35.updateExtensionChain();
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray46 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap47 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        springMvcApiReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray54 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader53.parseResponseHeaders(responseHeaderArray54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type type59 = null;
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader58.getParameters(type59, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean64 = springMvcApiReader53.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader35.getParameters((java.lang.reflect.Type) wildcardClass49, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        springMvcApiReader35.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader35.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet67);
        io.swagger.models.Operation operation69 = null;
        io.swagger.annotations.ApiOperation apiOperation70 = null;
        springMvcApiReader2.updateTagsForOperation(operation69, apiOperation70);
        io.swagger.annotations.Api api73 = null;
        boolean boolean74 = springMvcApiReader2.canReadApi(true, api73);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        java.lang.String str77 = springMvcApiReader2.parseOperationPath("/hi!", strMap76);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource78 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger79 = springMvcApiReader2.read(springResource78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNull(strArray31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(responseHeaderArray46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "/hi!" + "'", str77, "/hi!");
    }

    @Test
    public void test9353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9353");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader7.typesToSkip;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray15 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap16 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray17 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList18 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList18, securityRequirementArray17);
        io.swagger.models.Operation operation20 = null;
        springMvcApiReader7.updateOperation(strArray12, strArray15, strMap16, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList18, operation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader7.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = null;
        springMvcApiReader2.setTypesToSkip(typeSet24);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        java.lang.String str29 = springMvcApiReader2.parseOperationPath("/hi!", strMap28);
        io.swagger.models.Swagger swagger30 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource33 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger34 = springMvcApiReader2.read(springResource33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger4);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(securityRequirementArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "/hi!" + "'", str29, "/hi!");
        org.junit.Assert.assertNull(swagger30);
    }

    @Test
    public void test9354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9354");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(false, api29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader2.parseOperationPath("/hi!", strMap32);
        io.swagger.annotations.Api api35 = null;
        boolean boolean36 = springMvcApiReader2.canReadApi(false, api35);
        io.swagger.models.Operation operation37 = null;
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        springMvcApiReader2.updateTagsForOperation(operation37, apiOperation38);
        io.swagger.models.Operation operation40 = null;
        io.swagger.annotations.ApiOperation apiOperation41 = null;
        springMvcApiReader2.updateTagsForOperation(operation40, apiOperation41);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource43 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger44 = springMvcApiReader2.read(springResource43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/hi!" + "'", str33, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test9355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9355");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api16 = null;
        boolean boolean17 = springMvcApiReader2.canReadApi(false, api16);
        io.swagger.models.Swagger swagger18 = null;
        springMvcApiReader2.swagger = swagger18;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.ApiOperation apiOperation21 = null;
        io.swagger.models.Operation operation22 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation21, operation22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNull(logAdapter14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeSet20);
    }

    @Test
    public void test9356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9356");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.util.Set<java.lang.reflect.Type> typeSet10 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api15 = null;
        boolean boolean16 = springMvcApiReader2.canReadApi(true, api15);
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader2.updateTagsForOperation(operation17, apiOperation18);
        java.lang.reflect.Method method20 = null;
        io.swagger.models.Operation operation21 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method20, operation21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test9357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9357");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader7.typesToSkip;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray15 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap16 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray17 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList18 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList18, securityRequirementArray17);
        io.swagger.models.Operation operation20 = null;
        springMvcApiReader7.updateOperation(strArray12, strArray15, strMap16, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList18, operation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader7.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = null;
        springMvcApiReader2.setTypesToSkip(typeSet24);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet28 = springMvcApiReader2.extractTags(api27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger4);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(securityRequirementArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet22);
    }

    @Test
    public void test9358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9358");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray22 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap23 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass25, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.models.Swagger swagger31 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader2.swagger = swagger34;
        java.lang.reflect.Method method36 = null;
        io.swagger.models.Operation operation37 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method36, operation37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNull(typeSet13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(responseHeaderArray22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNull(swagger31);
        org.junit.Assert.assertNull(typeSet32);
        org.junit.Assert.assertNull(typeSet33);
    }

    @Test
    public void test9359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9359");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation21 = null;
        io.swagger.annotations.ApiOperation apiOperation22 = null;
        springMvcApiReader2.updateTagsForOperation(operation21, apiOperation22);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap24 = null;
        io.swagger.annotations.Api api25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap26 = springMvcApiReader2.updateTagsForApi(strMap24, api25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
    }

    @Test
    public void test9360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9360");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type type20 = null;
        java.lang.annotation.Annotation[] annotationArray21 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList22 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList22, annotationArray21);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList24 = springMvcApiReader19.getParameters(type20, (java.util.List<java.lang.annotation.Annotation>) annotationList22);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray25 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap26 = springMvcApiReader19.parseResponseHeaders(responseHeaderArray25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader19.typesToSkip;
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader33.typesToSkip;
        springMvcApiReader19.typesToSkip = typeSet34;
        springMvcApiReader2.typesToSkip = typeSet34;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        springMvcApiReader2.LOG = logAdapter37;
        io.swagger.annotations.Api api40 = null;
        boolean boolean41 = springMvcApiReader2.canReadApi(false, api40);
        io.swagger.annotations.Api api43 = null;
        boolean boolean44 = springMvcApiReader2.canReadApi(true, api43);
        io.swagger.annotations.Api api46 = null;
        boolean boolean47 = springMvcApiReader2.canReadApi(true, api46);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNull(logAdapter16);
        org.junit.Assert.assertNotNull(annotationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(parameterList24);
        org.junit.Assert.assertNotNull(responseHeaderArray25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test9361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9361");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        java.util.Set<java.lang.reflect.Type> typeSet16 = null;
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.models.Swagger swagger18 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger21 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNull(swagger18);
        org.junit.Assert.assertNull(typeSet19);
        org.junit.Assert.assertNull(typeSet20);
        org.junit.Assert.assertNull(swagger21);
        org.junit.Assert.assertNull(typeSet24);
    }

    @Test
    public void test9362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9362");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] { wildcardClass33 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader24.typesToSkip = typeSet35;
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader16.parseOperationPath("hi!", strMap40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray42);
        io.swagger.models.Operation operation44 = null;
        io.swagger.annotations.ApiOperation apiOperation45 = null;
        springMvcApiReader16.updateTagsForOperation(operation44, apiOperation45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        java.util.Set<java.lang.reflect.Type> typeSet55 = null;
        springMvcApiReader49.typesToSkip = typeSet55;
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader49.parseOperationPath("/hi!", strMap58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader49.typesToSkip;
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type type64 = null;
        java.lang.annotation.Annotation[] annotationArray65 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList66 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList66, annotationArray65);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList68 = springMvcApiReader63.getParameters(type64, (java.util.List<java.lang.annotation.Annotation>) annotationList66);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader63.parseResponseHeaders(responseHeaderArray69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        springMvcApiReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList77 = springMvcApiReader49.getParameters((java.lang.reflect.Type) wildcardClass72, (java.util.List<java.lang.annotation.Annotation>) annotationList75);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        io.swagger.models.Swagger swagger80 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger81 = null;
        springMvcApiReader2.swagger = swagger81;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api85 = null;
        boolean boolean86 = springMvcApiReader2.canReadApi(true, api85);
        io.swagger.models.Swagger swagger87 = springMvcApiReader2.swagger;
        io.swagger.annotations.ApiOperation apiOperation88 = null;
        io.swagger.models.Operation operation89 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation88, operation89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/hi!" + "'", str41, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNull(typeSet60);
        org.junit.Assert.assertNotNull(annotationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(parameterList68);
        org.junit.Assert.assertNotNull(responseHeaderArray69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(parameterList77);
        org.junit.Assert.assertNull(swagger80);
        org.junit.Assert.assertNull(logAdapter83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(swagger87);
    }

    @Test
    public void test9363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9363");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader7.typesToSkip;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray15 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap16 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray17 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList18 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList18, securityRequirementArray17);
        io.swagger.models.Operation operation20 = null;
        springMvcApiReader7.updateOperation(strArray12, strArray15, strMap16, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList18, operation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader7.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        springMvcApiReader2.updateTagsForOperation(operation26, apiOperation27);
        io.swagger.models.Swagger swagger29 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger4);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(securityRequirementArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNull(logAdapter25);
        org.junit.Assert.assertNull(swagger29);
    }

    @Test
    public void test9364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9364");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader59.parseResponseHeaders(responseHeaderArray60);
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet63 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet63, typeArray62);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet63);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader68.parseResponseHeaders(responseHeaderArray69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.reflect.Type type74 = null;
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList78 = springMvcApiReader73.getParameters(type74, (java.util.List<java.lang.annotation.Annotation>) annotationList76);
        boolean boolean79 = springMvcApiReader68.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader68.getTypesToSkip();
        springMvcApiReader59.setTypesToSkip(typeSet80);
        springMvcApiReader2.setTypesToSkip(typeSet80);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger85 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = null;
        springMvcApiReader2.LOG = logAdapter86;
        io.swagger.models.Operation operation88 = null;
        io.swagger.annotations.ApiResponses apiResponses89 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation88, apiResponses89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(parameterList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNull(swagger85);
    }

    @Test
    public void test9365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9365");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader2.parseOperationPath("", strMap21);
        io.swagger.models.Operation operation23 = null;
        io.swagger.annotations.ApiOperation apiOperation24 = null;
        springMvcApiReader2.updateTagsForOperation(operation23, apiOperation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("/hi!", strMap27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger30 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "/hi!" + "'", str28, "/hi!");
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNull(swagger30);
    }

    @Test
    public void test9366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9366");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        java.util.Set<java.lang.reflect.Type> typeSet16 = null;
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.models.Swagger swagger18 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger20 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger21 = null;
        springMvcApiReader2.swagger = swagger21;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader2.LOG = logAdapter23;
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray28 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap29 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        springMvcApiReader27.LOG = logAdapter34;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader27.parseOperationPath("", strMap37);
        java.util.Set<java.lang.reflect.Type> typeSet39 = null;
        springMvcApiReader27.typesToSkip = typeSet39;
        io.swagger.models.Operation operation41 = null;
        io.swagger.annotations.ApiOperation apiOperation42 = null;
        springMvcApiReader27.updateTagsForOperation(operation41, apiOperation42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader46.typesToSkip;
        springMvcApiReader46.updateExtensionChain();
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type type52 = null;
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList56 = springMvcApiReader51.getParameters(type52, (java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader51.parseResponseHeaders(responseHeaderArray57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        springMvcApiReader51.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray65 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap66 = springMvcApiReader64.parseResponseHeaders(responseHeaderArray65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type type70 = null;
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList74 = springMvcApiReader69.getParameters(type70, (java.util.List<java.lang.annotation.Annotation>) annotationList72);
        boolean boolean75 = springMvcApiReader64.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList76 = springMvcApiReader46.getParameters((java.lang.reflect.Type) wildcardClass60, (java.util.List<java.lang.annotation.Annotation>) annotationList72);
        java.lang.reflect.Type type77 = null;
        java.lang.annotation.Annotation[] annotationArray78 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList79 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList79, annotationArray78);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList81 = springMvcApiReader46.getParameters(type77, (java.util.List<java.lang.annotation.Annotation>) annotationList79);
        boolean boolean82 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        boolean boolean83 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNull(swagger18);
        org.junit.Assert.assertNull(typeSet19);
        org.junit.Assert.assertNull(swagger20);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(parameterList56);
        org.junit.Assert.assertNotNull(responseHeaderArray57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(parameterList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(parameterList76);
        org.junit.Assert.assertNotNull(annotationArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(parameterList81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test9367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9367");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray24 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap25 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        boolean boolean39 = springMvcApiReader28.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        boolean boolean40 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList48 = springMvcApiReader43.getParameters(type44, (java.util.List<java.lang.annotation.Annotation>) annotationList46);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray49 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray54 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader53.parseResponseHeaders(responseHeaderArray54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type type59 = null;
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader58.getParameters(type59, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean64 = springMvcApiReader53.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean65 = springMvcApiReader43.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean66 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader18.getTypesToSkip();
        io.swagger.models.Swagger swagger68 = null;
        springMvcApiReader18.swagger = swagger68;
        io.swagger.models.Swagger swagger70 = springMvcApiReader18.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader18.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet71);
        io.swagger.models.Swagger swagger73 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation74 = null;
        io.swagger.annotations.ApiOperation apiOperation75 = null;
        springMvcApiReader2.updateTagsForOperation(operation74, apiOperation75);
        io.swagger.models.Swagger swagger77 = null;
        springMvcApiReader2.swagger = swagger77;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        springMvcApiReader2.LOG = logAdapter79;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource81 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger82 = springMvcApiReader2.read(springResource81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(logAdapter10);
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertNotNull(responseHeaderArray24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(parameterList48);
        org.junit.Assert.assertNotNull(responseHeaderArray49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNull(swagger70);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNull(swagger73);
    }

    @Test
    public void test9368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9368");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        springMvcApiReader2.swagger = swagger10;
        java.util.Set<java.lang.reflect.Type> typeSet12 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(typeSet12);
    }

    @Test
    public void test9369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9369");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        java.lang.String str8 = springMvcApiReader2.parseOperationPath("hi!", strMap7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type type12 = null;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList16 = springMvcApiReader11.getParameters(type12, (java.util.List<java.lang.annotation.Annotation>) annotationList14);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray17 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap18 = springMvcApiReader11.parseResponseHeaders(responseHeaderArray17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        springMvcApiReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = springMvcApiReader11.swagger;
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] { wildcardClass24 };
        java.util.ArrayList<java.lang.reflect.Type> typeList26 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList26, typeArray25);
        springMvcApiReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        java.util.Set<java.lang.reflect.Type> typeSet29 = null;
        springMvcApiReader11.setTypesToSkip(typeSet29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] { wildcardClass42 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader33.typesToSkip = typeSet44;
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader33.typesToSkip;
        springMvcApiReader11.typesToSkip = typeSet47;
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader11.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet49;
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger52 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation53 = null;
        io.swagger.annotations.ApiOperation apiOperation54 = null;
        springMvcApiReader2.updateTagsForOperation(operation53, apiOperation54);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/hi!" + "'", str8, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(parameterList16);
        org.junit.Assert.assertNotNull(responseHeaderArray17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNull(swagger52);
    }

    @Test
    public void test9370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9370");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation4 = null;
        io.swagger.annotations.ApiOperation apiOperation5 = null;
        springMvcApiReader2.updateTagsForOperation(operation4, apiOperation5);
        io.swagger.models.Swagger swagger7 = null;
        springMvcApiReader2.swagger = swagger7;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet11);
    }

    @Test
    public void test9371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9371");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.models.Operation operation51 = null;
        io.swagger.annotations.ApiOperation apiOperation52 = null;
        springMvcApiReader2.updateTagsForOperation(operation51, apiOperation52);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        springMvcApiReader2.LOG = logAdapter54;
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray61 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader60.parseResponseHeaders(responseHeaderArray61);
        io.swagger.models.Swagger swagger63 = null;
        springMvcApiReader60.swagger = swagger63;
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        java.lang.String str67 = springMvcApiReader60.parseOperationPath("hi!", strMap66);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader60.parseOperationPath("/hi!", strMap69);
        java.lang.Class<?> wildcardClass71 = springMvcApiReader60.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        io.swagger.models.Operation operation73 = null;
        io.swagger.annotations.ApiResponses apiResponses74 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation73, apiResponses74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNull(logAdapter57);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "/hi!" + "'", str67, "/hi!");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test9372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9372");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet10 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = springMvcApiReader2.LOG;
        java.lang.String[] strArray12 = null;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type type16 = null;
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList20 = springMvcApiReader15.getParameters(type16, (java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = springMvcApiReader23.getParameters(type24, (java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] { wildcardClass32 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader23.typesToSkip = typeSet34;
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader15.parseOperationPath("hi!", strMap39);
        io.swagger.annotations.Api api42 = null;
        boolean boolean43 = springMvcApiReader15.canReadApi(false, api42);
        springMvcApiReader15.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader15.parseOperationPath("", strMap46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader50.typesToSkip;
        java.lang.String[] strArray55 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray58 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap59 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray60 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList61 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList61, securityRequirementArray60);
        io.swagger.models.Operation operation63 = null;
        springMvcApiReader50.updateOperation(strArray55, strArray58, strMap59, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList61, operation63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader67.typesToSkip;
        java.lang.String[] strArray72 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray75 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader67.updateOperation(strArray72, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap82 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray83 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList84 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList84, securityRequirementArray83);
        io.swagger.models.Operation operation86 = null;
        springMvcApiReader15.updateOperation(strArray58, strArray72, strMap82, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList84, operation86);
        io.swagger.models.Operation operation88 = null;
        java.lang.String[] strArray89 = springMvcApiReader2.updateOperationProduces(strArray12, strArray58, operation88);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(typeSet9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNull(logAdapter11);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(parameterList20);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(parameterList28);
        org.junit.Assert.assertNotNull(responseHeaderArray29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(securityRequirementArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(securityRequirementArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(strArray89);
    }

    @Test
    public void test9373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9373");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(false, api29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader2.parseOperationPath("/hi!", strMap32);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/hi!" + "'", str33, "/hi!");
        org.junit.Assert.assertNull(logAdapter35);
        org.junit.Assert.assertNotNull(typeSet36);
    }

    @Test
    public void test9374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9374");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader7.typesToSkip;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray15 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap16 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray17 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList18 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList18, securityRequirementArray17);
        io.swagger.models.Operation operation20 = null;
        springMvcApiReader7.updateOperation(strArray12, strArray15, strMap16, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList18, operation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader7.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = null;
        springMvcApiReader2.setTypesToSkip(typeSet24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        springMvcApiReader28.LOG = logAdapter35;
        io.swagger.models.Swagger swagger37 = null;
        springMvcApiReader28.swagger = swagger37;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        io.swagger.models.Swagger swagger42 = null;
        springMvcApiReader41.swagger = swagger42;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] { wildcardClass55 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader46.typesToSkip = typeSet57;
        springMvcApiReader41.typesToSkip = typeSet57;
        springMvcApiReader28.typesToSkip = typeSet57;
        springMvcApiReader2.typesToSkip = typeSet57;
        io.swagger.models.Swagger swagger63 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader2.parseOperationPath("hi!", strMap65);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        springMvcApiReader2.LOG = logAdapter67;
        io.swagger.annotations.Api api70 = null;
        boolean boolean71 = springMvcApiReader2.canReadApi(false, api70);
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger4);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(securityRequirementArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(swagger63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!" + "'", str66, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test9375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9375");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        springMvcApiReader2.swagger = swagger6;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("hi!", strMap12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader16.typesToSkip;
        springMvcApiReader16.updateExtensionChain();
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        springMvcApiReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray35 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap36 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type type40 = null;
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList44 = springMvcApiReader39.getParameters(type40, (java.util.List<java.lang.annotation.Annotation>) annotationList42);
        boolean boolean45 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader16.getParameters((java.lang.reflect.Type) wildcardClass30, (java.util.List<java.lang.annotation.Annotation>) annotationList42);
        io.swagger.models.Operation operation47 = null;
        io.swagger.annotations.ApiOperation apiOperation48 = null;
        springMvcApiReader16.updateTagsForOperation(operation47, apiOperation48);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader16.getTypesToSkip();
        java.lang.Class<?> wildcardClass51 = springMvcApiReader16.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader2.swagger = swagger53;
        io.swagger.models.Swagger swagger55 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeSet9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/hi!" + "'", str13, "/hi!");
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(responseHeaderArray27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(parameterList44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNull(swagger55);
    }

    @Test
    public void test9376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9376");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(false, api29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger32 = null;
        springMvcApiReader2.swagger = swagger32;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList42 = springMvcApiReader37.getParameters(type38, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray43 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = springMvcApiReader37.LOG;
        io.swagger.models.Swagger swagger46 = springMvcApiReader37.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        springMvcApiReader37.LOG = logAdapter47;
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader37.parseOperationPath("", strMap50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader37.LOG;
        springMvcApiReader37.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader37.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet54;
        io.swagger.models.Swagger swagger56 = null;
        springMvcApiReader2.swagger = swagger56;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(parameterList42);
        org.junit.Assert.assertNotNull(responseHeaderArray43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(logAdapter45);
        org.junit.Assert.assertNull(swagger46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertNotNull(typeSet54);
    }

    @Test
    public void test9377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9377");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.util.Set<java.lang.reflect.Type> typeSet10 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api15 = null;
        boolean boolean16 = springMvcApiReader2.canReadApi(true, api15);
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader2.updateTagsForOperation(operation17, apiOperation18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(logAdapter20);
    }

    @Test
    public void test9378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9378");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        io.swagger.models.Swagger swagger16 = null;
        springMvcApiReader15.swagger = swagger16;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList25 = springMvcApiReader20.getParameters(type21, (java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass29 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader20.typesToSkip = typeSet31;
        springMvcApiReader15.typesToSkip = typeSet31;
        springMvcApiReader2.typesToSkip = typeSet31;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        springMvcApiReader2.LOG = logAdapter36;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader2.LOG;
        io.swagger.annotations.ApiOperation apiOperation40 = null;
        io.swagger.models.Operation operation41 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation40, operation41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(parameterList25);
        org.junit.Assert.assertNotNull(responseHeaderArray26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNull(logAdapter39);
    }

    @Test
    public void test9379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9379");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] { wildcardClass33 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader24.typesToSkip = typeSet35;
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader16.parseOperationPath("hi!", strMap40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray42);
        io.swagger.models.Operation operation44 = null;
        io.swagger.annotations.ApiOperation apiOperation45 = null;
        springMvcApiReader16.updateTagsForOperation(operation44, apiOperation45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        java.util.Set<java.lang.reflect.Type> typeSet55 = null;
        springMvcApiReader49.typesToSkip = typeSet55;
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader49.parseOperationPath("/hi!", strMap58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader49.typesToSkip;
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type type64 = null;
        java.lang.annotation.Annotation[] annotationArray65 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList66 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList66, annotationArray65);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList68 = springMvcApiReader63.getParameters(type64, (java.util.List<java.lang.annotation.Annotation>) annotationList66);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader63.parseResponseHeaders(responseHeaderArray69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        springMvcApiReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList77 = springMvcApiReader49.getParameters((java.lang.reflect.Type) wildcardClass72, (java.util.List<java.lang.annotation.Annotation>) annotationList75);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        io.swagger.models.Swagger swagger80 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger81 = null;
        springMvcApiReader2.swagger = swagger81;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet85 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation88 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "", operation88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/hi!" + "'", str41, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNull(typeSet60);
        org.junit.Assert.assertNotNull(annotationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(parameterList68);
        org.junit.Assert.assertNotNull(responseHeaderArray69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(parameterList77);
        org.junit.Assert.assertNull(swagger80);
        org.junit.Assert.assertNull(logAdapter83);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNotNull(typeSet85);
    }

    @Test
    public void test9380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9380");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        boolean boolean24 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader13.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        java.lang.String[] strArray28 = null;
        java.lang.String[] strArray29 = null;
        io.swagger.models.Operation operation30 = null;
        java.lang.String[] strArray31 = springMvcApiReader2.updateOperationConsumes(strArray28, strArray29, operation30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader2.getTypesToSkip();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader38.getParameters(type39, (java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray44 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap45 = springMvcApiReader38.parseResponseHeaders(responseHeaderArray44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray49 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type type54 = null;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList58 = springMvcApiReader53.getParameters(type54, (java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean60 = springMvcApiReader38.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean61 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList69 = springMvcApiReader64.getParameters(type65, (java.util.List<java.lang.annotation.Annotation>) annotationList67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray70 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader64.parseResponseHeaders(responseHeaderArray70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        springMvcApiReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        io.swagger.models.Swagger swagger75 = springMvcApiReader64.swagger;
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] { wildcardClass77 };
        java.util.ArrayList<java.lang.reflect.Type> typeList79 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList79, typeArray78);
        springMvcApiReader64.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        io.swagger.models.Swagger swagger83 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap85 = null;
        java.lang.String str86 = springMvcApiReader2.parseOperationPath("hi!", strMap85);
        io.swagger.models.Operation operation89 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "", operation89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNull(strArray31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(responseHeaderArray44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(parameterList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(parameterList69);
        org.junit.Assert.assertNotNull(responseHeaderArray70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNull(swagger75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(swagger83);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "/hi!" + "'", str86, "/hi!");
    }

    @Test
    public void test9381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9381");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api10 = null;
        boolean boolean11 = springMvcApiReader2.canReadApi(true, api10);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        io.swagger.models.Swagger swagger16 = springMvcApiReader15.swagger;
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader15.updateTagsForOperation(operation17, apiOperation18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader15.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.annotations.Api api23 = null;
        boolean boolean24 = springMvcApiReader2.canReadApi(false, api23);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(swagger16);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test9382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9382");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Operation operation11 = null;
        io.swagger.annotations.ApiOperation apiOperation12 = null;
        springMvcApiReader2.updateTagsForOperation(operation11, apiOperation12);
        io.swagger.models.Swagger swagger14 = null;
        springMvcApiReader2.swagger = swagger14;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader2.parseOperationPath("/hi!", strMap17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader21.typesToSkip = typeSet27;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader21.parseOperationPath("/hi!", strMap30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader21.typesToSkip;
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type type36 = null;
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList40 = springMvcApiReader35.getParameters(type36, (java.util.List<java.lang.annotation.Annotation>) annotationList38);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader35.parseResponseHeaders(responseHeaderArray41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        springMvcApiReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList49 = springMvcApiReader21.getParameters((java.lang.reflect.Type) wildcardClass44, (java.util.List<java.lang.annotation.Annotation>) annotationList47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        springMvcApiReader21.LOG = logAdapter50;
        io.swagger.models.Operation operation52 = null;
        io.swagger.annotations.ApiOperation apiOperation53 = null;
        springMvcApiReader21.updateTagsForOperation(operation52, apiOperation53);
        io.swagger.annotations.Api api56 = null;
        boolean boolean57 = springMvcApiReader21.canReadApi(true, api56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type type61 = null;
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader60.getParameters(type61, (java.util.List<java.lang.annotation.Annotation>) annotationList63);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader60.parseResponseHeaders(responseHeaderArray66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = springMvcApiReader60.LOG;
        io.swagger.models.Swagger swagger69 = springMvcApiReader60.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader60.typesToSkip;
        springMvcApiReader21.setTypesToSkip(typeSet70);
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader21.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet72);
        io.swagger.models.Operation operation74 = null;
        io.swagger.annotations.ApiResponses apiResponses75 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation74, apiResponses75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/hi!" + "'", str18, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNull(typeSet32);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(parameterList40);
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(parameterList49);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertNotNull(responseHeaderArray66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(logAdapter68);
        org.junit.Assert.assertNull(swagger69);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(typeSet72);
    }

    @Test
    public void test9383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9383");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        boolean boolean24 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader13.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader2.swagger = swagger28;
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList37 = springMvcApiReader32.getParameters(type33, (java.util.List<java.lang.annotation.Annotation>) annotationList35);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader32.parseResponseHeaders(responseHeaderArray38);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray38);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation42 = null;
        io.swagger.annotations.ApiOperation apiOperation43 = null;
        springMvcApiReader2.updateTagsForOperation(operation42, apiOperation43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        springMvcApiReader2.LOG = logAdapter46;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(parameterList37);
        org.junit.Assert.assertNotNull(responseHeaderArray38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(logAdapter41);
        org.junit.Assert.assertNotNull(typeSet45);
    }

    @Test
    public void test9384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9384");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        springMvcApiReader2.swagger = swagger6;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        io.swagger.models.Swagger swagger10 = null;
        springMvcApiReader2.swagger = swagger10;
        java.util.Set<java.lang.reflect.Type> typeSet12 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type type16 = null;
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList20 = springMvcApiReader15.getParameters(type16, (java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        springMvcApiReader15.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList33 = springMvcApiReader28.getParameters(type29, (java.util.List<java.lang.annotation.Annotation>) annotationList31);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray34 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap35 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        springMvcApiReader28.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass37);
        io.swagger.models.Swagger swagger39 = springMvcApiReader28.swagger;
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] { wildcardClass41 };
        java.util.ArrayList<java.lang.reflect.Type> typeList43 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList43, typeArray42);
        springMvcApiReader28.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList43);
        springMvcApiReader15.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList43);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList43);
        io.swagger.models.Operation operation48 = null;
        io.swagger.annotations.ApiOperation apiOperation49 = null;
        springMvcApiReader2.updateTagsForOperation(operation48, apiOperation49);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource51 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger52 = springMvcApiReader2.read(springResource51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(parameterList20);
        org.junit.Assert.assertNotNull(responseHeaderArray21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(parameterList33);
        org.junit.Assert.assertNotNull(responseHeaderArray34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNull(swagger39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test9385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9385");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        boolean boolean24 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader13.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        java.lang.String[] strArray28 = null;
        java.lang.String[] strArray29 = null;
        io.swagger.models.Operation operation30 = null;
        java.lang.String[] strArray31 = springMvcApiReader2.updateOperationConsumes(strArray28, strArray29, operation30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray35 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap36 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray35);
        io.swagger.models.Swagger swagger37 = null;
        springMvcApiReader34.swagger = swagger37;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader41.typesToSkip;
        springMvcApiReader41.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader41.typesToSkip;
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader47.typesToSkip;
        java.lang.String[] strArray52 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray55 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap56 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray57 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList58 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList58, securityRequirementArray57);
        io.swagger.models.Operation operation60 = null;
        springMvcApiReader47.updateOperation(strArray52, strArray55, strMap56, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList58, operation60);
        io.swagger.models.Swagger swagger62 = null;
        springMvcApiReader47.swagger = swagger62;
        java.lang.annotation.Annotation[] annotationArray64 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList65 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList65, annotationArray64);
        boolean boolean67 = springMvcApiReader47.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        boolean boolean68 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        boolean boolean69 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        boolean boolean70 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        io.swagger.models.Operation operation71 = null;
        io.swagger.annotations.ApiOperation apiOperation72 = null;
        springMvcApiReader2.updateTagsForOperation(operation71, apiOperation72);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        springMvcApiReader2.LOG = logAdapter74;
        io.swagger.models.Swagger swagger76 = null;
        springMvcApiReader2.swagger = swagger76;
        io.swagger.annotations.Api api79 = null;
        boolean boolean80 = springMvcApiReader2.canReadApi(true, api79);
        java.lang.Class<?> wildcardClass81 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNull(strArray31);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(securityRequirementArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(annotationArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test9386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9386");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader2.parseOperationPath("", strMap21);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader2.swagger = swagger24;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(logAdapter23);
    }

    @Test
    public void test9387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9387");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(false, api17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger21 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader24.typesToSkip;
        springMvcApiReader24.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader24.setTypesToSkip(typeSet27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader31.typesToSkip;
        java.lang.String[] strArray36 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray39 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap40 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray41 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList42 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList42, securityRequirementArray41);
        io.swagger.models.Operation operation44 = null;
        springMvcApiReader31.updateOperation(strArray36, strArray39, strMap40, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList42, operation44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader31.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader31.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader31.getTypesToSkip();
        springMvcApiReader24.typesToSkip = typeSet48;
        springMvcApiReader2.setTypesToSkip(typeSet48);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader2.parseOperationPath("", strMap53);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNull(swagger21);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(securityRequirementArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    public void test9388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9388");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(false, api29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader2.parseOperationPath("/hi!", strMap32);
        io.swagger.models.Operation operation36 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "/hi!", operation36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/hi!" + "'", str33, "/hi!");
    }

    @Test
    public void test9389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9389");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type type20 = null;
        java.lang.annotation.Annotation[] annotationArray21 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList22 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList22, annotationArray21);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList24 = springMvcApiReader19.getParameters(type20, (java.util.List<java.lang.annotation.Annotation>) annotationList22);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray25 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap26 = springMvcApiReader19.parseResponseHeaders(responseHeaderArray25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader19.LOG;
        io.swagger.models.Swagger swagger28 = springMvcApiReader19.swagger;
        springMvcApiReader19.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader19.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        io.swagger.models.Swagger swagger35 = springMvcApiReader34.swagger;
        io.swagger.models.Swagger swagger36 = springMvcApiReader34.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader34.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader34.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        springMvcApiReader42.LOG = logAdapter50;
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type type55 = null;
        java.lang.annotation.Annotation[] annotationArray56 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList57 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList57, annotationArray56);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList59 = springMvcApiReader54.getParameters(type55, (java.util.List<java.lang.annotation.Annotation>) annotationList57);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader54.parseResponseHeaders(responseHeaderArray60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        springMvcApiReader54.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        io.swagger.models.Swagger swagger65 = springMvcApiReader54.swagger;
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] { wildcardClass67 };
        java.util.ArrayList<java.lang.reflect.Type> typeList69 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList69, typeArray68);
        springMvcApiReader54.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        springMvcApiReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        io.swagger.models.Swagger swagger74 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.ApiOperation apiOperation77 = null;
        io.swagger.models.Operation operation78 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation77, operation78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNull(logAdapter16);
        org.junit.Assert.assertNotNull(annotationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(parameterList24);
        org.junit.Assert.assertNotNull(responseHeaderArray25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNull(swagger28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNull(swagger35);
        org.junit.Assert.assertNull(swagger36);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(annotationArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(parameterList59);
        org.junit.Assert.assertNotNull(responseHeaderArray60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNull(swagger65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(swagger74);
        org.junit.Assert.assertNotNull(typeSet75);
    }

    @Test
    public void test9390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9390");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        io.swagger.models.Swagger swagger20 = springMvcApiReader19.swagger;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader23.typesToSkip;
        java.lang.String[] strArray28 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray31 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap32 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray33 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList34 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList34, securityRequirementArray33);
        io.swagger.models.Operation operation36 = null;
        springMvcApiReader23.updateOperation(strArray28, strArray31, strMap32, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList34, operation36);
        java.lang.Class<?> wildcardClass38 = strArray28.getClass();
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader19.parseOperationPath("/hi!", strMap41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type type46 = null;
        java.lang.annotation.Annotation[] annotationArray47 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList48 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList48, annotationArray47);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList50 = springMvcApiReader45.getParameters(type46, (java.util.List<java.lang.annotation.Annotation>) annotationList48);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray51 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap52 = springMvcApiReader45.parseResponseHeaders(responseHeaderArray51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        springMvcApiReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type type59 = null;
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader58.getParameters(type59, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray64 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap65 = springMvcApiReader58.parseResponseHeaders(responseHeaderArray64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        springMvcApiReader58.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        io.swagger.models.Swagger swagger69 = springMvcApiReader58.swagger;
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] { wildcardClass71 };
        java.util.ArrayList<java.lang.reflect.Type> typeList73 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList73, typeArray72);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        springMvcApiReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        springMvcApiReader19.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet81 = springMvcApiReader2.extractTags(api80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNull(logAdapter16);
        org.junit.Assert.assertNull(swagger20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(securityRequirementArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/hi!" + "'", str42, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(parameterList50);
        org.junit.Assert.assertNotNull(responseHeaderArray51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertNotNull(responseHeaderArray64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNull(swagger69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test9391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9391");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        springMvcApiReader2.LOG = logAdapter10;
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type type15 = null;
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList19 = springMvcApiReader14.getParameters(type15, (java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray20 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap21 = springMvcApiReader14.parseResponseHeaders(responseHeaderArray20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        springMvcApiReader14.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        io.swagger.models.Swagger swagger25 = springMvcApiReader14.swagger;
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] { wildcardClass27 };
        java.util.ArrayList<java.lang.reflect.Type> typeList29 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList29, typeArray28);
        springMvcApiReader14.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList29);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList29);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader2.swagger = swagger33;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader2.parseOperationPath("hi!", strMap36);
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader2.canReadApi(true, api39);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(parameterList19);
        org.junit.Assert.assertNotNull(responseHeaderArray20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNull(swagger25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test9392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9392");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray31);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        springMvcApiReader2.LOG = logAdapter35;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        springMvcApiReader2.LOG = logAdapter37;
        io.swagger.annotations.Api api39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList40 = springMvcApiReader2.getSecurityRequirements(api39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(logAdapter34);
    }

    @Test
    public void test9393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9393");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader23.typesToSkip;
        springMvcApiReader23.updateExtensionChain();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader23.setTypesToSkip(typeSet30);
        springMvcApiReader2.setTypesToSkip(typeSet30);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader2.canReadApi(false, api34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger37 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader2.parseOperationPath("", strMap40);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        java.lang.String str44 = springMvcApiReader2.parseOperationPath("", strMap43);
        io.swagger.annotations.Api api46 = null;
        boolean boolean47 = springMvcApiReader2.canReadApi(false, api46);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNull(swagger37);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test9394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9394");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(false, api17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger21 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader24.typesToSkip;
        springMvcApiReader24.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader24.setTypesToSkip(typeSet27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader31.typesToSkip;
        java.lang.String[] strArray36 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray39 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap40 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray41 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList42 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList42, securityRequirementArray41);
        io.swagger.models.Operation operation44 = null;
        springMvcApiReader31.updateOperation(strArray36, strArray39, strMap40, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList42, operation44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader31.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader31.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader31.getTypesToSkip();
        springMvcApiReader24.typesToSkip = typeSet48;
        springMvcApiReader2.setTypesToSkip(typeSet48);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader2.parseOperationPath("", strMap52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(false, api55);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap57 = null;
        io.swagger.annotations.Api api58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap59 = springMvcApiReader2.updateTagsForApi(strMap57, api58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNull(swagger21);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(securityRequirementArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test9395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9395");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        springMvcApiReader2.LOG = logAdapter5;
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeSet7);
    }

    @Test
    public void test9396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9396");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        springMvcApiReader2.LOG = logAdapter6;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.util.Set<java.lang.reflect.Type> typeSet12 = springMvcApiReader11.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader11.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet13);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNull(logAdapter15);
    }

    @Test
    public void test9397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9397");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation18 = null;
        io.swagger.annotations.ApiOperation apiOperation19 = null;
        springMvcApiReader2.updateTagsForOperation(operation18, apiOperation19);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader24.typesToSkip;
        java.lang.String[] strArray29 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray32 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap33 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray34 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList35 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList35, securityRequirementArray34);
        io.swagger.models.Operation operation37 = null;
        springMvcApiReader24.updateOperation(strArray29, strArray32, strMap33, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList35, operation37);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader24.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        springMvcApiReader24.LOG = logAdapter40;
        io.swagger.models.Operation operation42 = null;
        io.swagger.annotations.ApiOperation apiOperation43 = null;
        springMvcApiReader24.updateTagsForOperation(operation42, apiOperation43);
        springMvcApiReader24.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader24.LOG;
        io.swagger.annotations.Api api48 = null;
        boolean boolean49 = springMvcApiReader24.canReadApi(true, api48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.reflect.Type type53 = null;
        java.lang.annotation.Annotation[] annotationArray54 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList55 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList55, annotationArray54);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList57 = springMvcApiReader52.getParameters(type53, (java.util.List<java.lang.annotation.Annotation>) annotationList55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray58 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap59 = springMvcApiReader52.parseResponseHeaders(responseHeaderArray58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        springMvcApiReader52.LOG = logAdapter60;
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList69 = springMvcApiReader64.getParameters(type65, (java.util.List<java.lang.annotation.Annotation>) annotationList67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray70 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader64.parseResponseHeaders(responseHeaderArray70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        springMvcApiReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        io.swagger.models.Swagger swagger75 = springMvcApiReader64.swagger;
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] { wildcardClass77 };
        java.util.ArrayList<java.lang.reflect.Type> typeList79 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList79, typeArray78);
        springMvcApiReader64.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        springMvcApiReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(securityRequirementArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(annotationArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(parameterList57);
        org.junit.Assert.assertNotNull(responseHeaderArray58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(parameterList69);
        org.junit.Assert.assertNotNull(responseHeaderArray70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNull(swagger75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
    }

    @Test
    public void test9398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9398");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        io.swagger.models.Swagger swagger16 = null;
        springMvcApiReader15.swagger = swagger16;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList25 = springMvcApiReader20.getParameters(type21, (java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass29 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader20.typesToSkip = typeSet31;
        springMvcApiReader15.typesToSkip = typeSet31;
        springMvcApiReader2.typesToSkip = typeSet31;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader38.getParameters(type39, (java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray44 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap45 = springMvcApiReader38.parseResponseHeaders(responseHeaderArray44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray49 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type type54 = null;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList58 = springMvcApiReader53.getParameters(type54, (java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean60 = springMvcApiReader38.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader63.typesToSkip;
        springMvcApiReader63.updateExtensionChain();
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        java.lang.reflect.Type type69 = null;
        java.lang.annotation.Annotation[] annotationArray70 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList71 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList71, annotationArray70);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList73 = springMvcApiReader68.getParameters(type69, (java.util.List<java.lang.annotation.Annotation>) annotationList71);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray74 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader68.parseResponseHeaders(responseHeaderArray74);
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        springMvcApiReader68.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        springMvcApiReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        io.swagger.annotations.Api api83 = null;
        boolean boolean84 = springMvcApiReader2.canReadApi(true, api83);
        io.swagger.models.Swagger swagger85 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet86 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger87 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter88 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader89 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger87, logAdapter88);
        io.swagger.models.Swagger swagger90 = springMvcApiReader89.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader89.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet91);
        java.util.Set<java.lang.reflect.Type> typeSet93 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.ApiOperation apiOperation94 = null;
        io.swagger.models.Operation operation95 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation94, operation95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(parameterList25);
        org.junit.Assert.assertNotNull(responseHeaderArray26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(responseHeaderArray44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(parameterList58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(annotationArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(parameterList73);
        org.junit.Assert.assertNotNull(responseHeaderArray74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(swagger85);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNull(swagger90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(typeSet93);
    }

    @Test
    public void test9399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9399");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type type23 = null;
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList27 = springMvcApiReader22.getParameters(type23, (java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray28 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap29 = springMvcApiReader22.parseResponseHeaders(responseHeaderArray28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader32.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList42 = springMvcApiReader37.getParameters(type38, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        boolean boolean43 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        boolean boolean44 = springMvcApiReader22.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type type48 = null;
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList52 = springMvcApiReader47.getParameters(type48, (java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray53 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader47.parseResponseHeaders(responseHeaderArray53);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray58 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap59 = springMvcApiReader57.parseResponseHeaders(responseHeaderArray58);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type type63 = null;
        java.lang.annotation.Annotation[] annotationArray64 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList65 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList65, annotationArray64);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList67 = springMvcApiReader62.getParameters(type63, (java.util.List<java.lang.annotation.Annotation>) annotationList65);
        boolean boolean68 = springMvcApiReader57.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        boolean boolean69 = springMvcApiReader47.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        boolean boolean70 = springMvcApiReader22.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        boolean boolean71 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList65);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader2.parseOperationPath("/hi!", strMap75);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        java.lang.String str79 = springMvcApiReader2.parseOperationPath("", strMap78);
        io.swagger.models.Operation operation80 = null;
        io.swagger.annotations.ApiOperation apiOperation81 = null;
        springMvcApiReader2.updateTagsForOperation(operation80, apiOperation81);
        io.swagger.models.Swagger swagger83 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap84 = null;
        io.swagger.annotations.Api api85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap86 = springMvcApiReader2.updateTagsForApi(strMap84, api85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(parameterList27);
        org.junit.Assert.assertNotNull(responseHeaderArray28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(parameterList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(parameterList52);
        org.junit.Assert.assertNotNull(responseHeaderArray53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(annotationArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(parameterList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNull(swagger83);
    }

    @Test
    public void test9400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9400");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader23.typesToSkip;
        springMvcApiReader23.updateExtensionChain();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader23.setTypesToSkip(typeSet30);
        springMvcApiReader2.setTypesToSkip(typeSet30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader2.swagger = swagger33;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader2.parseOperationPath("", strMap36);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test9401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9401");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray22 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap23 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass25, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        springMvcApiReader2.LOG = logAdapter31;
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        io.swagger.models.Swagger swagger36 = null;
        springMvcApiReader2.swagger = swagger36;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNull(typeSet13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(responseHeaderArray22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNull(typeSet38);
        org.junit.Assert.assertNull(typeSet39);
    }

    @Test
    public void test9402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9402");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader21.typesToSkip = typeSet27;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader21.parseOperationPath("/hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] { wildcardClass51 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader42.typesToSkip = typeSet53;
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader34.parseOperationPath("hi!", strMap58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray60);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader2.canReadApi(false, api65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray70 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader69.parseResponseHeaders(responseHeaderArray70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type type75 = null;
        java.lang.annotation.Annotation[] annotationArray76 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList77 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList77, annotationArray76);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList79 = springMvcApiReader74.getParameters(type75, (java.util.List<java.lang.annotation.Annotation>) annotationList77);
        boolean boolean80 = springMvcApiReader69.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList77);
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader69.getTypesToSkip();
        io.swagger.models.Swagger swagger82 = null;
        springMvcApiReader69.swagger = swagger82;
        java.lang.Class<?> wildcardClass84 = springMvcApiReader69.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        java.util.Map<java.lang.String, java.lang.String> strMap87 = null;
        java.lang.String str88 = springMvcApiReader2.parseOperationPath("hi!", strMap87);
        io.swagger.models.Swagger swagger89 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet90 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.ApiOperation apiOperation91 = null;
        io.swagger.models.Operation operation92 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation91, operation92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(annotationArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(parameterList79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "/hi!" + "'", str88, "/hi!");
        org.junit.Assert.assertNull(swagger89);
        org.junit.Assert.assertNotNull(typeSet90);
    }

    @Test
    public void test9403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9403");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation52 = null;
        io.swagger.annotations.ApiOperation apiOperation53 = null;
        springMvcApiReader2.updateTagsForOperation(operation52, apiOperation53);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type type58 = null;
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList62 = springMvcApiReader57.getParameters(type58, (java.util.List<java.lang.annotation.Annotation>) annotationList60);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray63 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap64 = springMvcApiReader57.parseResponseHeaders(responseHeaderArray63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type type71 = null;
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList75 = springMvcApiReader70.getParameters(type71, (java.util.List<java.lang.annotation.Annotation>) annotationList73);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray76 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader70.parseResponseHeaders(responseHeaderArray76);
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        springMvcApiReader70.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        io.swagger.models.Swagger swagger81 = springMvcApiReader70.swagger;
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.reflect.Type[] typeArray84 = new java.lang.reflect.Type[] { wildcardClass83 };
        java.util.ArrayList<java.lang.reflect.Type> typeList85 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList85, typeArray84);
        springMvcApiReader70.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList85);
        springMvcApiReader57.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList85);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList85);
        java.util.Map<java.lang.String, java.lang.String> strMap91 = null;
        java.lang.String str92 = springMvcApiReader2.parseOperationPath("", strMap91);
        java.util.Map<java.lang.String, java.lang.String> strMap94 = null;
        java.lang.String str95 = springMvcApiReader2.parseOperationPath("", strMap94);
        io.swagger.models.Swagger swagger96 = null;
        springMvcApiReader2.swagger = swagger96;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(parameterList62);
        org.junit.Assert.assertNotNull(responseHeaderArray63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(parameterList75);
        org.junit.Assert.assertNotNull(responseHeaderArray76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNull(swagger81);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(typeArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "" + "'", str95, "");
    }

    @Test
    public void test9404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9404");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader21.typesToSkip = typeSet27;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader21.parseOperationPath("/hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] { wildcardClass51 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader42.typesToSkip = typeSet53;
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader34.parseOperationPath("hi!", strMap58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray60);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader2.canReadApi(false, api65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray70 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader69.parseResponseHeaders(responseHeaderArray70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type type75 = null;
        java.lang.annotation.Annotation[] annotationArray76 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList77 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList77, annotationArray76);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList79 = springMvcApiReader74.getParameters(type75, (java.util.List<java.lang.annotation.Annotation>) annotationList77);
        boolean boolean80 = springMvcApiReader69.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList77);
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader69.getTypesToSkip();
        io.swagger.models.Swagger swagger82 = null;
        springMvcApiReader69.swagger = swagger82;
        java.lang.Class<?> wildcardClass84 = springMvcApiReader69.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        io.swagger.models.Operation operation86 = null;
        io.swagger.annotations.ApiOperation apiOperation87 = null;
        springMvcApiReader2.updateTagsForOperation(operation86, apiOperation87);
        io.swagger.models.Swagger swagger89 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation90 = null;
        io.swagger.annotations.ApiOperation apiOperation91 = null;
        springMvcApiReader2.updateTagsForOperation(operation90, apiOperation91);
        io.swagger.models.Operation operation95 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "", operation95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(annotationArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(parameterList79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNull(swagger89);
    }

    @Test
    public void test9405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9405");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(false, api17);
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeSet23);
    }

    @Test
    public void test9406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9406");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation52 = null;
        io.swagger.annotations.ApiOperation apiOperation53 = null;
        springMvcApiReader2.updateTagsForOperation(operation52, apiOperation53);
        io.swagger.annotations.Api api56 = null;
        boolean boolean57 = springMvcApiReader2.canReadApi(true, api56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type type61 = null;
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader60.getParameters(type61, (java.util.List<java.lang.annotation.Annotation>) annotationList63);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader60.parseResponseHeaders(responseHeaderArray66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        springMvcApiReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass69);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = springMvcApiReader60.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader60.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader60.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet73;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertNotNull(responseHeaderArray66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNull(logAdapter71);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(typeSet76);
    }

    @Test
    public void test9407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9407");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Set<java.lang.reflect.Type> typeSet10 = null;
        springMvcApiReader2.typesToSkip = typeSet10;
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader14.typesToSkip;
        springMvcApiReader14.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader14.typesToSkip;
        io.swagger.models.Swagger swagger18 = null;
        springMvcApiReader14.swagger = swagger18;
        io.swagger.models.Swagger swagger20 = springMvcApiReader14.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader14.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet21);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNull(swagger20);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertNull(logAdapter24);
    }

    @Test
    public void test9408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9408");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger52 = null;
        springMvcApiReader2.swagger = swagger52;
        io.swagger.models.Operation operation54 = null;
        io.swagger.annotations.ApiOperation apiOperation55 = null;
        springMvcApiReader2.updateTagsForOperation(operation54, apiOperation55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader59.typesToSkip;
        springMvcApiReader59.updateExtensionChain();
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader64.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader64.getTypesToSkip();
        springMvcApiReader59.setTypesToSkip(typeSet66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader70.typesToSkip;
        springMvcApiReader70.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader70.typesToSkip;
        springMvcApiReader59.setTypesToSkip(typeSet73);
        springMvcApiReader2.setTypesToSkip(typeSet73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        springMvcApiReader2.LOG = logAdapter76;
        io.swagger.annotations.Api api79 = null;
        boolean boolean80 = springMvcApiReader2.canReadApi(false, api79);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test9409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9409");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader17.typesToSkip;
        io.swagger.models.Swagger swagger19 = null;
        springMvcApiReader17.swagger = swagger19;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = springMvcApiReader23.getParameters(type24, (java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        springMvcApiReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader17.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray40 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap41 = springMvcApiReader39.parseResponseHeaders(responseHeaderArray40);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type type45 = null;
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList49 = springMvcApiReader44.getParameters(type45, (java.util.List<java.lang.annotation.Annotation>) annotationList47);
        boolean boolean50 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList47);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader39.getTypesToSkip();
        io.swagger.models.Swagger swagger52 = null;
        springMvcApiReader39.swagger = swagger52;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader39.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader59.parseResponseHeaders(responseHeaderArray60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList69 = springMvcApiReader64.getParameters(type65, (java.util.List<java.lang.annotation.Annotation>) annotationList67);
        boolean boolean70 = springMvcApiReader59.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader59.getTypesToSkip();
        springMvcApiReader39.setTypesToSkip(typeSet71);
        springMvcApiReader2.setTypesToSkip(typeSet71);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        springMvcApiReader2.LOG = logAdapter74;
        io.swagger.models.Swagger swagger76 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNull(logAdapter14);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(parameterList28);
        org.junit.Assert.assertNotNull(responseHeaderArray29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(parameterList49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(parameterList69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNull(swagger76);
    }

    @Test
    public void test9410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9410");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader15.typesToSkip;
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray23 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap24 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray25 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList26 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList26, securityRequirementArray25);
        io.swagger.models.Operation operation28 = null;
        springMvcApiReader15.updateOperation(strArray20, strArray23, strMap24, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList26, operation28);
        java.lang.String[] strArray35 = new java.lang.String[] { "/hi!", "", "", "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap36 = null;
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader39.typesToSkip;
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray47 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap48 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray49 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList50 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList50, securityRequirementArray49);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader39.updateOperation(strArray44, strArray47, strMap48, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList50, operation52);
        io.swagger.models.Operation operation54 = null;
        springMvcApiReader2.updateOperation(strArray23, strArray35, strMap36, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList50, operation54);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        io.swagger.models.Swagger swagger59 = null;
        springMvcApiReader2.swagger = swagger59;
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation64 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "hi!", operation64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(securityRequirementArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(securityRequirementArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeSet61);
    }

    @Test
    public void test9411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9411");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader21.typesToSkip = typeSet27;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader21.parseOperationPath("/hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] { wildcardClass51 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader42.typesToSkip = typeSet53;
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader34.parseOperationPath("hi!", strMap58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader2.parseOperationPath("hi!", strMap65);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation69 = null;
        io.swagger.annotations.ApiOperation apiOperation70 = null;
        springMvcApiReader2.updateTagsForOperation(operation69, apiOperation70);
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger73 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource74 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger75 = springMvcApiReader2.read(springResource74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!" + "'", str66, "/hi!");
        org.junit.Assert.assertNull(logAdapter67);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNull(swagger73);
    }

    @Test
    public void test9412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9412");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        java.lang.String str23 = springMvcApiReader2.parseOperationPath("/hi!", strMap22);
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader2.swagger = swagger28;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        springMvcApiReader2.LOG = logAdapter30;
        io.swagger.annotations.ApiOperation apiOperation32 = null;
        io.swagger.models.Operation operation33 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation32, operation33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/hi!" + "'", str23, "/hi!");
    }

    @Test
    public void test9413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9413");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api7 = null;
        boolean boolean8 = springMvcApiReader2.canReadApi(true, api7);
        io.swagger.models.Swagger swagger9 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray13);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.ApiOperation apiOperation17 = null;
        io.swagger.models.Operation operation18 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation17, operation18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(swagger9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertNotNull(typeSet16);
    }

    @Test
    public void test9414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9414");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray28 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap29 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader32.typesToSkip;
        springMvcApiReader32.updateExtensionChain();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList42 = springMvcApiReader37.getParameters(type38, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray43 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        springMvcApiReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray51 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap52 = springMvcApiReader50.parseResponseHeaders(responseHeaderArray51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type type56 = null;
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList60 = springMvcApiReader55.getParameters(type56, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        boolean boolean61 = springMvcApiReader50.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList62 = springMvcApiReader32.getParameters((java.lang.reflect.Type) wildcardClass46, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        boolean boolean63 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        io.swagger.models.Swagger swagger64 = springMvcApiReader2.swagger;
        java.lang.reflect.Method method65 = null;
        io.swagger.models.Operation operation66 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method65, operation66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(parameterList42);
        org.junit.Assert.assertNotNull(responseHeaderArray43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(parameterList60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(parameterList62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(swagger64);
    }

    @Test
    public void test9415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9415");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation18 = null;
        io.swagger.annotations.ApiOperation apiOperation19 = null;
        springMvcApiReader2.updateTagsForOperation(operation18, apiOperation19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray25 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap26 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList34 = springMvcApiReader29.getParameters(type30, (java.util.List<java.lang.annotation.Annotation>) annotationList32);
        boolean boolean35 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet36;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader41.typesToSkip;
        java.lang.String[] strArray46 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray49 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap50 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray51 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList52 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList52, securityRequirementArray51);
        io.swagger.models.Operation operation54 = null;
        springMvcApiReader41.updateOperation(strArray46, strArray49, strMap50, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList52, operation54);
        io.swagger.models.Swagger swagger56 = null;
        springMvcApiReader41.swagger = swagger56;
        java.lang.annotation.Annotation[] annotationArray58 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList59 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList59, annotationArray58);
        boolean boolean61 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList59);
        java.lang.Class<?> wildcardClass62 = annotationList59.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        io.swagger.models.Swagger swagger64 = springMvcApiReader2.swagger;
        java.lang.reflect.Method method65 = null;
        io.swagger.models.Operation operation66 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method65, operation66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNull(logAdapter21);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(parameterList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(securityRequirementArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(annotationArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNull(swagger64);
    }

    @Test
    public void test9416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9416");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        java.lang.String str23 = springMvcApiReader2.parseOperationPath("/hi!", strMap22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource25 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger26 = springMvcApiReader2.read(springResource25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/hi!" + "'", str23, "/hi!");
        org.junit.Assert.assertNotNull(typeSet24);
    }

    @Test
    public void test9417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9417");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        io.swagger.models.Swagger swagger16 = null;
        springMvcApiReader15.swagger = swagger16;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList25 = springMvcApiReader20.getParameters(type21, (java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass29 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader20.typesToSkip = typeSet31;
        springMvcApiReader15.typesToSkip = typeSet31;
        springMvcApiReader2.typesToSkip = typeSet31;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader38.getParameters(type39, (java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray44 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap45 = springMvcApiReader38.parseResponseHeaders(responseHeaderArray44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type type52 = null;
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList56 = springMvcApiReader51.getParameters(type52, (java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader51.parseResponseHeaders(responseHeaderArray57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        springMvcApiReader51.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger62 = springMvcApiReader51.swagger;
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] { wildcardClass64 };
        java.util.ArrayList<java.lang.reflect.Type> typeList66 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList66, typeArray65);
        springMvcApiReader51.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        java.util.Set<java.lang.reflect.Type> typeSet71 = null;
        springMvcApiReader2.typesToSkip = typeSet71;
        io.swagger.models.Operation operation73 = null;
        io.swagger.annotations.ApiOperation apiOperation74 = null;
        springMvcApiReader2.updateTagsForOperation(operation73, apiOperation74);
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(parameterList25);
        org.junit.Assert.assertNotNull(responseHeaderArray26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(responseHeaderArray44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(parameterList56);
        org.junit.Assert.assertNotNull(responseHeaderArray57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNull(swagger62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(typeSet76);
    }

    @Test
    public void test9418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9418");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        boolean boolean31 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("hi!", strMap34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader38.typesToSkip;
        springMvcApiReader38.updateExtensionChain();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList48 = springMvcApiReader43.getParameters(type44, (java.util.List<java.lang.annotation.Annotation>) annotationList46);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray49 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        springMvcApiReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet59 = springMvcApiReader2.extractTags(api58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(parameterList48);
        org.junit.Assert.assertNotNull(responseHeaderArray49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test9419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9419");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        java.lang.String str23 = springMvcApiReader2.parseOperationPath("/hi!", strMap22);
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation32 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "/hi!", operation32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/hi!" + "'", str23, "/hi!");
        org.junit.Assert.assertNull(typeSet29);
    }

    @Test
    public void test9420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9420");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader7.typesToSkip;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray15 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap16 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray17 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList18 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList18, securityRequirementArray17);
        io.swagger.models.Operation operation20 = null;
        springMvcApiReader7.updateOperation(strArray12, strArray15, strMap16, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList18, operation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader7.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = null;
        springMvcApiReader2.setTypesToSkip(typeSet24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        springMvcApiReader28.LOG = logAdapter35;
        io.swagger.models.Swagger swagger37 = null;
        springMvcApiReader28.swagger = swagger37;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        io.swagger.models.Swagger swagger42 = null;
        springMvcApiReader41.swagger = swagger42;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] { wildcardClass55 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader46.typesToSkip = typeSet57;
        springMvcApiReader41.typesToSkip = typeSet57;
        springMvcApiReader28.typesToSkip = typeSet57;
        springMvcApiReader2.typesToSkip = typeSet57;
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader2.parseOperationPath("", strMap64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        springMvcApiReader2.LOG = logAdapter66;
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger69 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger4);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(securityRequirementArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNull(swagger69);
    }

    @Test
    public void test9421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9421");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        boolean boolean31 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("hi!", strMap34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger38 = null;
        springMvcApiReader2.swagger = swagger38;
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader42.LOG;
        java.lang.Class<?> wildcardClass54 = springMvcApiReader42.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader58.typesToSkip;
        java.lang.String[] strArray63 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray66 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap67 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray68 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList69 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList69, securityRequirementArray68);
        io.swagger.models.Operation operation71 = null;
        springMvcApiReader58.updateOperation(strArray63, strArray66, strMap67, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList69, operation71);
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader58.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        springMvcApiReader58.LOG = logAdapter74;
        io.swagger.models.Operation operation76 = null;
        io.swagger.annotations.ApiOperation apiOperation77 = null;
        springMvcApiReader58.updateTagsForOperation(operation76, apiOperation77);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        springMvcApiReader58.LOG = logAdapter79;
        springMvcApiReader58.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader58.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet82);
        io.swagger.models.Operation operation84 = null;
        io.swagger.annotations.ApiResponses apiResponses85 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation84, apiResponses85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNull(logAdapter37);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(securityRequirementArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(typeSet82);
    }

    @Test
    public void test9422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9422");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader21.typesToSkip = typeSet27;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader21.parseOperationPath("/hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] { wildcardClass51 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader42.typesToSkip = typeSet53;
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader34.parseOperationPath("hi!", strMap58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray60);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        io.swagger.annotations.Api api69 = null;
        boolean boolean70 = springMvcApiReader67.canReadApi(false, api69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.reflect.Type type74 = null;
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList78 = springMvcApiReader73.getParameters(type74, (java.util.List<java.lang.annotation.Annotation>) annotationList76);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray79 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap80 = springMvcApiReader73.parseResponseHeaders(responseHeaderArray79);
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        springMvcApiReader73.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass82);
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader73.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        springMvcApiReader73.LOG = logAdapter85;
        java.lang.Class<?> wildcardClass87 = springMvcApiReader73.getClass();
        java.lang.annotation.Annotation[] annotationArray88 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList89 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList89, annotationArray88);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList91 = springMvcApiReader67.getParameters((java.lang.reflect.Type) wildcardClass87, (java.util.List<java.lang.annotation.Annotation>) annotationList89);
        boolean boolean92 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList89);
        io.swagger.models.Operation operation93 = null;
        io.swagger.annotations.ApiOperation apiOperation94 = null;
        springMvcApiReader2.updateTagsForOperation(operation93, apiOperation94);
        java.util.Set<java.lang.reflect.Type> typeSet96 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(parameterList78);
        org.junit.Assert.assertNotNull(responseHeaderArray79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(annotationArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(parameterList91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(typeSet96);
    }

    @Test
    public void test9423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9423");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader23.typesToSkip;
        springMvcApiReader23.updateExtensionChain();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader23.setTypesToSkip(typeSet30);
        springMvcApiReader2.setTypesToSkip(typeSet30);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader2.canReadApi(true, api34);
        java.lang.reflect.Type type36 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type36);
        io.swagger.models.Swagger swagger38 = null;
        springMvcApiReader2.swagger = swagger38;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(logAdapter40);
    }

    @Test
    public void test9424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9424");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        java.lang.String[] strArray46 = null;
        java.lang.String[] strArray52 = new java.lang.String[] { "/hi!", "hi!", "/hi!", "", "/hi!" };
        io.swagger.models.Operation operation53 = null;
        java.lang.String[] strArray54 = springMvcApiReader2.updateOperationProduces(strArray46, strArray52, operation53);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray58 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap59 = springMvcApiReader57.parseResponseHeaders(responseHeaderArray58);
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet61 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet61, typeArray60);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        springMvcApiReader57.LOG = logAdapter64;
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader68.parseResponseHeaders(responseHeaderArray69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.reflect.Type type74 = null;
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList78 = springMvcApiReader73.getParameters(type74, (java.util.List<java.lang.annotation.Annotation>) annotationList76);
        boolean boolean79 = springMvcApiReader68.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader68.getTypesToSkip();
        springMvcApiReader57.setTypesToSkip(typeSet80);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader57.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet82;
        io.swagger.annotations.Api api85 = null;
        boolean boolean86 = springMvcApiReader2.canReadApi(true, api85);
        io.swagger.models.Swagger swagger87 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter88 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader89 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger87, logAdapter88);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray90 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap91 = springMvcApiReader89.parseResponseHeaders(responseHeaderArray90);
        io.swagger.models.Swagger swagger92 = springMvcApiReader89.swagger;
        io.swagger.models.Swagger swagger93 = null;
        springMvcApiReader89.swagger = swagger93;
        java.util.Set<java.lang.reflect.Type> typeSet95 = springMvcApiReader89.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet95);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter97 = null;
        springMvcApiReader2.LOG = logAdapter97;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(parameterList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNull(swagger92);
        org.junit.Assert.assertNotNull(typeSet95);
    }

    @Test
    public void test9425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9425");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api7 = null;
        boolean boolean8 = springMvcApiReader2.canReadApi(true, api7);
        io.swagger.models.Swagger swagger9 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        springMvcApiReader12.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader12.typesToSkip;
        io.swagger.models.Swagger swagger16 = null;
        springMvcApiReader12.swagger = swagger16;
        io.swagger.models.Swagger swagger18 = springMvcApiReader12.swagger;
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = springMvcApiReader23.getParameters(type24, (java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type type32 = null;
        java.lang.annotation.Annotation[] annotationArray33 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList34 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList34, annotationArray33);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList36 = springMvcApiReader31.getParameters(type32, (java.util.List<java.lang.annotation.Annotation>) annotationList34);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray37 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap38 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] { wildcardClass40 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader31.typesToSkip = typeSet42;
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader23.parseOperationPath("hi!", strMap47);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader23.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList53 = springMvcApiReader12.getParameters((java.lang.reflect.Type) wildcardClass20, (java.util.List<java.lang.annotation.Annotation>) annotationList50);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger55 = null;
        springMvcApiReader2.swagger = swagger55;
        io.swagger.models.Swagger swagger57 = null;
        springMvcApiReader2.swagger = swagger57;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(swagger9);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNull(swagger18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(parameterList28);
        org.junit.Assert.assertNotNull(annotationArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(parameterList36);
        org.junit.Assert.assertNotNull(responseHeaderArray37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(parameterList53);
    }

    @Test
    public void test9426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9426");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        java.lang.String str8 = springMvcApiReader2.parseOperationPath("hi!", strMap7);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] { wildcardClass33 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader24.typesToSkip = typeSet35;
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader16.parseOperationPath("hi!", strMap40);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader46.typesToSkip;
        springMvcApiReader46.updateExtensionChain();
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type type52 = null;
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList56 = springMvcApiReader51.getParameters(type52, (java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader51.parseResponseHeaders(responseHeaderArray57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        springMvcApiReader51.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray65 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap66 = springMvcApiReader64.parseResponseHeaders(responseHeaderArray65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type type70 = null;
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList74 = springMvcApiReader69.getParameters(type70, (java.util.List<java.lang.annotation.Annotation>) annotationList72);
        boolean boolean75 = springMvcApiReader64.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList76 = springMvcApiReader46.getParameters((java.lang.reflect.Type) wildcardClass60, (java.util.List<java.lang.annotation.Annotation>) annotationList72);
        boolean boolean77 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        boolean boolean78 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = springMvcApiReader13.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader13.typesToSkip;
        springMvcApiReader13.updateExtensionChain();
        io.swagger.annotations.Api api83 = null;
        boolean boolean84 = springMvcApiReader13.canReadApi(true, api83);
        io.swagger.models.Swagger swagger85 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader87 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger85, logAdapter86);
        io.swagger.models.Swagger swagger88 = springMvcApiReader87.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader87.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter90 = springMvcApiReader87.LOG;
        io.swagger.models.Swagger swagger91 = null;
        springMvcApiReader87.swagger = swagger91;
        java.util.Set<java.lang.reflect.Type> typeSet93 = springMvcApiReader87.getTypesToSkip();
        springMvcApiReader13.setTypesToSkip(typeSet93);
        springMvcApiReader2.setTypesToSkip(typeSet93);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/hi!" + "'", str8, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/hi!" + "'", str41, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(parameterList56);
        org.junit.Assert.assertNotNull(responseHeaderArray57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(parameterList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(parameterList76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(logAdapter79);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(swagger88);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNull(logAdapter90);
        org.junit.Assert.assertNotNull(typeSet93);
    }

    @Test
    public void test9427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9427");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        boolean boolean31 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("hi!", strMap34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader38.typesToSkip;
        springMvcApiReader38.updateExtensionChain();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList48 = springMvcApiReader43.getParameters(type44, (java.util.List<java.lang.annotation.Annotation>) annotationList46);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray49 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        springMvcApiReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource61 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger62 = springMvcApiReader2.read(springResource61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(parameterList48);
        org.junit.Assert.assertNotNull(responseHeaderArray49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeSet60);
    }

    @Test
    public void test9428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9428");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader21.typesToSkip = typeSet27;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader21.parseOperationPath("/hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] { wildcardClass51 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader42.typesToSkip = typeSet53;
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader34.parseOperationPath("hi!", strMap58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray60);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray60);
        io.swagger.models.Swagger swagger64 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger65 = springMvcApiReader2.swagger;
        io.swagger.models.parameters.Parameter[] parameterArray66 = new io.swagger.models.parameters.Parameter[] {};
        java.util.ArrayList<io.swagger.models.parameters.Parameter> parameterList67 = new java.util.ArrayList<io.swagger.models.parameters.Parameter>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.parameters.Parameter>) parameterList67, parameterArray66);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        io.swagger.models.Operation operation70 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters((java.util.List<io.swagger.models.parameters.Parameter>) parameterList67, strMap69, operation70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(swagger64);
        org.junit.Assert.assertNull(swagger65);
        org.junit.Assert.assertNotNull(parameterArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test9429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9429");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.util.Set<java.lang.reflect.Type> typeSet12 = springMvcApiReader11.typesToSkip;
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray19 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader11.updateOperation(strArray16, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        io.swagger.models.Swagger swagger26 = null;
        springMvcApiReader11.swagger = swagger26;
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        boolean boolean31 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList29);
        boolean boolean32 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList29);
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        io.swagger.annotations.ApiOperation apiOperation36 = null;
        io.swagger.models.Operation operation37 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation36, operation37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test9430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9430");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader2.canReadApi(false, api59);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger62 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api64 = null;
        boolean boolean65 = springMvcApiReader2.canReadApi(true, api64);
        io.swagger.models.Swagger swagger66 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader2.parseOperationPath("", strMap68);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList72 = springMvcApiReader2.getSecurityRequirements(api71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(typeSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertNull(swagger62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(swagger66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
    }

    @Test
    public void test9431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9431");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet17;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        io.swagger.models.Swagger swagger35 = springMvcApiReader24.swagger;
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] { wildcardClass37 };
        java.util.ArrayList<java.lang.reflect.Type> typeList39 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList39, typeArray38);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList39);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList39);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader2.swagger = swagger44;
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader2.parseOperationPath("", strMap47);
        io.swagger.models.Operation operation49 = null;
        io.swagger.annotations.ApiOperation apiOperation50 = null;
        springMvcApiReader2.updateTagsForOperation(operation49, apiOperation50);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNull(swagger35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
    }

    @Test
    public void test9432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9432");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader47.typesToSkip;
        java.lang.String[] strArray52 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray55 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap56 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray57 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList58 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList58, securityRequirementArray57);
        io.swagger.models.Operation operation60 = null;
        springMvcApiReader47.updateOperation(strArray52, strArray55, strMap56, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList58, operation60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader47.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet62;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader2.parseOperationPath("", strMap65);
        io.swagger.annotations.Api api68 = null;
        boolean boolean69 = springMvcApiReader2.canReadApi(false, api68);
        io.swagger.annotations.Api api70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList71 = springMvcApiReader2.getSecurityRequirements(api70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(securityRequirementArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test9433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9433");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api10 = null;
        boolean boolean11 = springMvcApiReader2.canReadApi(true, api10);
        io.swagger.models.Operation operation12 = null;
        io.swagger.annotations.ApiOperation apiOperation13 = null;
        springMvcApiReader2.updateTagsForOperation(operation12, apiOperation13);
        java.lang.reflect.Type type15 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type15);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test9434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9434");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger58 = null;
        springMvcApiReader2.swagger = swagger58;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader2.parseOperationPath("hi!", strMap63);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
    }

    @Test
    public void test9435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9435");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("/hi!", strMap18);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader2.swagger = swagger20;
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource26 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger27 = springMvcApiReader2.read(springResource26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet22);
    }

    @Test
    public void test9436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9436");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray24 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap25 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        springMvcApiReader2.LOG = logAdapter31;
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("", strMap34);
        springMvcApiReader2.updateExtensionChain();
        java.lang.Class<?> wildcardClass37 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertNotNull(responseHeaderArray24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(logAdapter30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test9437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9437");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader47.typesToSkip;
        springMvcApiReader47.updateExtensionChain();
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.reflect.Type type53 = null;
        java.lang.annotation.Annotation[] annotationArray54 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList55 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList55, annotationArray54);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList57 = springMvcApiReader52.getParameters(type53, (java.util.List<java.lang.annotation.Annotation>) annotationList55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray58 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap59 = springMvcApiReader52.parseResponseHeaders(responseHeaderArray58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        springMvcApiReader52.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader65.parseResponseHeaders(responseHeaderArray66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type type71 = null;
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList75 = springMvcApiReader70.getParameters(type71, (java.util.List<java.lang.annotation.Annotation>) annotationList73);
        boolean boolean76 = springMvcApiReader65.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList77 = springMvcApiReader47.getParameters((java.lang.reflect.Type) wildcardClass61, (java.util.List<java.lang.annotation.Annotation>) annotationList73);
        boolean boolean78 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        io.swagger.annotations.Api api80 = null;
        boolean boolean81 = springMvcApiReader2.canReadApi(false, api80);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api84 = null;
        boolean boolean85 = springMvcApiReader2.canReadApi(false, api84);
        io.swagger.annotations.Api api87 = null;
        boolean boolean88 = springMvcApiReader2.canReadApi(true, api87);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(annotationArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(parameterList57);
        org.junit.Assert.assertNotNull(responseHeaderArray58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(parameterList75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(parameterList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test9438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9438");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList41 = springMvcApiReader36.getParameters(type37, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean42 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean43 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type type62 = null;
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList66 = springMvcApiReader61.getParameters(type62, (java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean67 = springMvcApiReader56.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean68 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean69 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader21.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet70;
        io.swagger.annotations.Api api73 = null;
        boolean boolean74 = springMvcApiReader2.canReadApi(true, api73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        springMvcApiReader2.LOG = logAdapter75;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(responseHeaderArray27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(parameterList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(parameterList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(logAdapter77);
        org.junit.Assert.assertNull(logAdapter78);
        org.junit.Assert.assertNotNull(typeSet79);
    }

    @Test
    public void test9439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9439");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(false, api29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        springMvcApiReader2.LOG = logAdapter32;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList41 = springMvcApiReader36.getParameters(type37, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader36.parseResponseHeaders(responseHeaderArray42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        springMvcApiReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader36.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        springMvcApiReader36.LOG = logAdapter48;
        io.swagger.models.Swagger swagger50 = null;
        springMvcApiReader36.swagger = swagger50;
        io.swagger.models.Operation operation52 = null;
        io.swagger.annotations.ApiOperation apiOperation53 = null;
        springMvcApiReader36.updateTagsForOperation(operation52, apiOperation53);
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader36.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet55);
        io.swagger.models.Operation operation59 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "/hi!", operation59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(parameterList41);
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet55);
    }

    @Test
    public void test9440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9440");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type type6 = null;
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList10 = springMvcApiReader5.getParameters(type6, (java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type type14 = null;
        java.lang.annotation.Annotation[] annotationArray15 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList16 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList16, annotationArray15);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList18 = springMvcApiReader13.getParameters(type14, (java.util.List<java.lang.annotation.Annotation>) annotationList16);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray19 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap20 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] { wildcardClass22 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader13.typesToSkip = typeSet24;
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader5.parseOperationPath("hi!", strMap29);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader5.parseResponseHeaders(responseHeaderArray31);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader35.typesToSkip;
        springMvcApiReader35.updateExtensionChain();
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray46 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap47 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        springMvcApiReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray54 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader53.parseResponseHeaders(responseHeaderArray54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type type59 = null;
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader58.getParameters(type59, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean64 = springMvcApiReader53.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader35.getParameters((java.lang.reflect.Type) wildcardClass49, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean66 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean67 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api71 = null;
        boolean boolean72 = springMvcApiReader2.canReadApi(true, api71);
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader2.parseOperationPath("/hi!", strMap75);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(parameterList10);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(parameterList18);
        org.junit.Assert.assertNotNull(responseHeaderArray19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(responseHeaderArray46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(logAdapter68);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
    }

    @Test
    public void test9441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9441");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation18 = null;
        io.swagger.annotations.ApiOperation apiOperation19 = null;
        springMvcApiReader2.updateTagsForOperation(operation18, apiOperation19);
        io.swagger.models.Swagger swagger21 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNull(swagger21);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNotNull(typeSet25);
    }

    @Test
    public void test9442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9442");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type type16 = null;
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList20 = springMvcApiReader15.getParameters(type16, (java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = springMvcApiReader23.getParameters(type24, (java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] { wildcardClass32 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader23.typesToSkip = typeSet34;
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader15.parseOperationPath("hi!", strMap39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader15.canReadApi(true, api44);
        io.swagger.models.Operation operation46 = null;
        io.swagger.annotations.ApiOperation apiOperation47 = null;
        springMvcApiReader15.updateTagsForOperation(operation46, apiOperation47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader51.parseResponseHeaders(responseHeaderArray52);
        io.swagger.models.Swagger swagger54 = null;
        springMvcApiReader51.swagger = swagger54;
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader51.parseOperationPath("hi!", strMap57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        springMvcApiReader51.LOG = logAdapter59;
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader51.typesToSkip;
        springMvcApiReader15.typesToSkip = typeSet61;
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader15.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet63;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        springMvcApiReader2.LOG = logAdapter65;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(parameterList20);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(parameterList28);
        org.junit.Assert.assertNotNull(responseHeaderArray29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "/hi!" + "'", str58, "/hi!");
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(typeSet63);
    }

    @Test
    public void test9443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9443");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(true, api8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader12.swagger = swagger27;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        boolean boolean33 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.Api api35 = null;
        boolean boolean36 = springMvcApiReader2.canReadApi(false, api35);
        io.swagger.models.Operation operation37 = null;
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        springMvcApiReader2.updateTagsForOperation(operation37, apiOperation38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeSet40);
    }

    @Test
    public void test9444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9444");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Operation operation3 = null;
        io.swagger.annotations.ApiOperation apiOperation4 = null;
        springMvcApiReader2.updateTagsForOperation(operation3, apiOperation4);
    }

    @Test
    public void test9445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9445");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        boolean boolean24 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader13.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader2.canReadApi(false, api32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader36.typesToSkip;
        springMvcApiReader36.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader36.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader36.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet40;
        io.swagger.models.Swagger swagger42 = springMvcApiReader2.swagger;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass43 = swagger42.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNull(swagger42);
    }

    @Test
    public void test9446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9446");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader2.parseOperationPath("hi!", strMap21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader2.parseOperationPath("hi!", strMap24);
        io.swagger.models.Swagger swagger26 = null;
        springMvcApiReader2.swagger = swagger26;
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type type31 = null;
        java.lang.annotation.Annotation[] annotationArray32 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList33 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList33, annotationArray32);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList35 = springMvcApiReader30.getParameters(type31, (java.util.List<java.lang.annotation.Annotation>) annotationList33);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray36 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap37 = springMvcApiReader30.parseResponseHeaders(responseHeaderArray36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass39 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader30.typesToSkip = typeSet41;
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader30.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        springMvcApiReader30.LOG = logAdapter45;
        io.swagger.models.Operation operation47 = null;
        io.swagger.annotations.ApiOperation apiOperation48 = null;
        springMvcApiReader30.updateTagsForOperation(operation47, apiOperation48);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader30.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        springMvcApiReader30.LOG = logAdapter51;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader30.LOG;
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray57);
        io.swagger.models.Swagger swagger59 = springMvcApiReader56.swagger;
        io.swagger.models.Swagger swagger60 = null;
        springMvcApiReader56.swagger = swagger60;
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader56.typesToSkip;
        springMvcApiReader30.typesToSkip = typeSet62;
        springMvcApiReader2.typesToSkip = typeSet62;
        io.swagger.models.Swagger swagger65 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/hi!" + "'", str22, "/hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(parameterList35);
        org.junit.Assert.assertNotNull(responseHeaderArray36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(swagger59);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNull(swagger65);
    }

    @Test
    public void test9447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9447");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader2.canReadApi(false, api59);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api63 = null;
        boolean boolean64 = springMvcApiReader2.canReadApi(true, api63);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        java.lang.String str67 = springMvcApiReader2.parseOperationPath("hi!", strMap66);
        io.swagger.models.Operation operation70 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "/hi!", operation70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(typeSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "/hi!" + "'", str67, "/hi!");
    }

    @Test
    public void test9448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9448");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader2.canReadApi(false, api59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger62 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation63 = null;
        io.swagger.annotations.ApiOperation apiOperation64 = null;
        springMvcApiReader2.updateTagsForOperation(operation63, apiOperation64);
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        boolean boolean69 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        io.swagger.models.Operation operation70 = null;
        io.swagger.annotations.ApiOperation apiOperation71 = null;
        springMvcApiReader2.updateTagsForOperation(operation70, apiOperation71);
        io.swagger.models.Swagger swagger73 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger76 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(typeSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(typeSet61);
        org.junit.Assert.assertNull(swagger62);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(swagger73);
        org.junit.Assert.assertNull(logAdapter74);
        org.junit.Assert.assertNull(swagger76);
    }

    @Test
    public void test9449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9449");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger52 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger53 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        springMvcApiReader2.LOG = logAdapter54;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation58 = null;
        io.swagger.annotations.ApiOperation apiOperation59 = null;
        springMvcApiReader2.updateTagsForOperation(operation58, apiOperation59);
        io.swagger.annotations.Api api62 = null;
        boolean boolean63 = springMvcApiReader2.canReadApi(true, api62);
        io.swagger.models.Swagger swagger64 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger65 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNull(swagger52);
        org.junit.Assert.assertNull(swagger53);
        org.junit.Assert.assertNull(logAdapter56);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(swagger64);
        org.junit.Assert.assertNull(swagger65);
    }

    @Test
    public void test9450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9450");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList23 = springMvcApiReader18.getParameters(type19, (java.util.List<java.lang.annotation.Annotation>) annotationList21);
        boolean boolean24 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader13.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        java.lang.String[] strArray28 = null;
        java.lang.String[] strArray29 = null;
        io.swagger.models.Operation operation30 = null;
        java.lang.String[] strArray31 = springMvcApiReader2.updateOperationConsumes(strArray28, strArray29, operation30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader2.getTypesToSkip();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass34);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        springMvcApiReader2.LOG = logAdapter36;
        io.swagger.models.Swagger swagger38 = null;
        springMvcApiReader2.swagger = swagger38;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList42 = springMvcApiReader2.getSecurityRequirements(api41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(parameterList23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNull(strArray31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNull(logAdapter40);
    }

    @Test
    public void test9451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9451");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray22 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap23 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray22);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader21.swagger = swagger24;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = springMvcApiReader21.LOG;
        springMvcApiReader21.updateExtensionChain();
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader30.parseResponseHeaders(responseHeaderArray31);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type type36 = null;
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList40 = springMvcApiReader35.getParameters(type36, (java.util.List<java.lang.annotation.Annotation>) annotationList38);
        boolean boolean41 = springMvcApiReader30.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList38);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader30.getTypesToSkip();
        io.swagger.models.Swagger swagger43 = null;
        springMvcApiReader30.swagger = swagger43;
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader30.parseOperationPath("hi!", strMap46);
        io.swagger.annotations.Api api49 = null;
        boolean boolean50 = springMvcApiReader30.canReadApi(true, api49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader30.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader30.typesToSkip;
        springMvcApiReader21.setTypesToSkip(typeSet52);
        springMvcApiReader2.typesToSkip = typeSet52;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource55 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger56 = springMvcApiReader2.read(springResource55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(logAdapter10);
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(logAdapter26);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(parameterList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/hi!" + "'", str47, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertNotNull(typeSet52);
    }

    @Test
    public void test9452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9452");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Operation operation11 = null;
        io.swagger.annotations.ApiOperation apiOperation12 = null;
        springMvcApiReader2.updateTagsForOperation(operation11, apiOperation12);
        io.swagger.models.Swagger swagger14 = null;
        springMvcApiReader2.swagger = swagger14;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray19 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap20 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader18.LOG = logAdapter25;
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        boolean boolean40 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader29.getTypesToSkip();
        springMvcApiReader18.setTypesToSkip(typeSet41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader18.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet43);
        io.swagger.models.Swagger swagger45 = null;
        springMvcApiReader2.swagger = swagger45;
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList54 = springMvcApiReader49.getParameters(type50, (java.util.List<java.lang.annotation.Annotation>) annotationList52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray55 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap56 = springMvcApiReader49.parseResponseHeaders(responseHeaderArray55);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        springMvcApiReader49.LOG = logAdapter57;
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type type62 = null;
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList66 = springMvcApiReader61.getParameters(type62, (java.util.List<java.lang.annotation.Annotation>) annotationList64);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray67 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap68 = springMvcApiReader61.parseResponseHeaders(responseHeaderArray67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        springMvcApiReader61.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        io.swagger.models.Swagger swagger72 = springMvcApiReader61.swagger;
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] { wildcardClass74 };
        java.util.ArrayList<java.lang.reflect.Type> typeList76 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList76, typeArray75);
        springMvcApiReader61.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        springMvcApiReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(parameterList54);
        org.junit.Assert.assertNotNull(responseHeaderArray55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(parameterList66);
        org.junit.Assert.assertNotNull(responseHeaderArray67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNull(swagger72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(typeSet81);
    }

    @Test
    public void test9453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9453");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        java.lang.String str8 = springMvcApiReader2.parseOperationPath("hi!", strMap7);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray16);
        io.swagger.models.Swagger swagger18 = springMvcApiReader15.swagger;
        io.swagger.models.Operation operation19 = null;
        io.swagger.annotations.ApiOperation apiOperation20 = null;
        springMvcApiReader15.updateTagsForOperation(operation19, apiOperation20);
        io.swagger.models.Swagger swagger22 = springMvcApiReader15.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader15.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet23);
        io.swagger.models.Swagger swagger25 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/hi!" + "'", str8, "/hi!");
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(swagger18);
        org.junit.Assert.assertNull(swagger22);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNull(swagger25);
    }

    @Test
    public void test9454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9454");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader2.canReadApi(false, api59);
        io.swagger.models.Swagger swagger61 = null;
        springMvcApiReader2.swagger = swagger61;
        io.swagger.models.Swagger swagger63 = null;
        springMvcApiReader2.swagger = swagger63;
        io.swagger.models.Swagger swagger65 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api67 = null;
        boolean boolean68 = springMvcApiReader2.canReadApi(false, api67);
        io.swagger.models.Swagger swagger69 = null;
        springMvcApiReader2.swagger = swagger69;
        io.swagger.models.Operation operation71 = null;
        io.swagger.annotations.ApiOperation apiOperation72 = null;
        springMvcApiReader2.updateTagsForOperation(operation71, apiOperation72);
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation77 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "/hi!", operation77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(typeSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(swagger65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(typeSet74);
    }

    @Test
    public void test9455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9455");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        boolean boolean31 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("hi!", strMap34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        springMvcApiReader2.LOG = logAdapter38;
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader2.canReadApi(true, api41);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNull(logAdapter37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test9456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9456");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet4 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = springMvcApiReader2.LOG;
        java.lang.String[] strArray6 = null;
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        io.swagger.models.Swagger swagger10 = null;
        springMvcApiReader9.swagger = swagger10;
        java.util.Set<java.lang.reflect.Type> typeSet12 = springMvcApiReader9.typesToSkip;
        io.swagger.annotations.Api api14 = null;
        boolean boolean15 = springMvcApiReader9.canReadApi(false, api14);
        java.lang.String[] strArray16 = null;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type type20 = null;
        java.lang.annotation.Annotation[] annotationArray21 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList22 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList22, annotationArray21);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList24 = springMvcApiReader19.getParameters(type20, (java.util.List<java.lang.annotation.Annotation>) annotationList22);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] { wildcardClass36 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader27.typesToSkip = typeSet38;
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        java.lang.String str44 = springMvcApiReader19.parseOperationPath("hi!", strMap43);
        io.swagger.models.Operation operation45 = null;
        io.swagger.annotations.ApiOperation apiOperation46 = null;
        springMvcApiReader19.updateTagsForOperation(operation45, apiOperation46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type type51 = null;
        java.lang.annotation.Annotation[] annotationArray52 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList53 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList53, annotationArray52);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList55 = springMvcApiReader50.getParameters(type51, (java.util.List<java.lang.annotation.Annotation>) annotationList53);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray56 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap57 = springMvcApiReader50.parseResponseHeaders(responseHeaderArray56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        springMvcApiReader50.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader19.getTypesToSkip();
        java.lang.String[] strArray63 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "/hi!", "hi!", "/hi!", "", "/hi!" };
        io.swagger.models.Operation operation70 = null;
        java.lang.String[] strArray71 = springMvcApiReader19.updateOperationProduces(strArray63, strArray69, operation70);
        io.swagger.models.Operation operation72 = null;
        java.lang.String[] strArray73 = springMvcApiReader9.updateOperationConsumes(strArray16, strArray69, operation72);
        io.swagger.models.Operation operation74 = null;
        java.lang.String[] strArray75 = springMvcApiReader2.updateOperationProduces(strArray6, strArray69, operation74);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet4);
        org.junit.Assert.assertNull(logAdapter5);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(annotationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(parameterList24);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "/hi!" + "'", str44, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(parameterList55);
        org.junit.Assert.assertNotNull(responseHeaderArray56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray75);
    }

    @Test
    public void test9457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9457");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        java.lang.String str15 = springMvcApiReader2.parseOperationPath("/hi!", strMap14);
        io.swagger.models.Operation operation16 = null;
        io.swagger.annotations.ApiOperation apiOperation17 = null;
        springMvcApiReader2.updateTagsForOperation(operation16, apiOperation17);
        io.swagger.models.Swagger swagger19 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader2.swagger = swagger20;
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader2.LOG = logAdapter25;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "/hi!" + "'", str15, "/hi!");
        org.junit.Assert.assertNull(swagger19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
    }

    @Test
    public void test9458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9458");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray21);
        io.swagger.models.Swagger swagger23 = springMvcApiReader20.swagger;
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader20.swagger = swagger24;
        io.swagger.models.Swagger swagger26 = springMvcApiReader20.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader20.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        io.swagger.models.Swagger swagger32 = springMvcApiReader31.swagger;
        springMvcApiReader31.updateExtensionChain();
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList41 = springMvcApiReader36.getParameters(type37, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader36.parseResponseHeaders(responseHeaderArray42);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader36.LOG;
        io.swagger.models.Swagger swagger45 = springMvcApiReader36.swagger;
        springMvcApiReader36.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader36.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader36.typesToSkip;
        springMvcApiReader36.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader36.typesToSkip;
        springMvcApiReader36.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader36.getTypesToSkip();
        springMvcApiReader31.setTypesToSkip(typeSet52);
        springMvcApiReader2.setTypesToSkip(typeSet52);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(swagger23);
        org.junit.Assert.assertNull(swagger26);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(parameterList41);
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeSet52);
    }

    @Test
    public void test9459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9459");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = null;
        springMvcApiReader2.swagger = swagger6;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type type14 = null;
        java.lang.annotation.Annotation[] annotationArray15 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList16 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList16, annotationArray15);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList18 = springMvcApiReader13.getParameters(type14, (java.util.List<java.lang.annotation.Annotation>) annotationList16);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] { wildcardClass30 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader21.typesToSkip = typeSet32;
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader13.parseOperationPath("hi!", strMap37);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass10, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.annotations.Api api45 = null;
        boolean boolean46 = springMvcApiReader2.canReadApi(true, api45);
        java.lang.reflect.Type type47 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type47);
        io.swagger.models.Swagger swagger49 = null;
        springMvcApiReader2.swagger = swagger49;
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader2.canReadApi(false, api52);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(parameterList18);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(responseHeaderArray27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test9460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9460");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type type6 = null;
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList10 = springMvcApiReader5.getParameters(type6, (java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type type14 = null;
        java.lang.annotation.Annotation[] annotationArray15 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList16 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList16, annotationArray15);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList18 = springMvcApiReader13.getParameters(type14, (java.util.List<java.lang.annotation.Annotation>) annotationList16);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray19 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap20 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] { wildcardClass22 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader13.typesToSkip = typeSet24;
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader5.parseOperationPath("hi!", strMap29);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader5.parseResponseHeaders(responseHeaderArray31);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader35.typesToSkip;
        springMvcApiReader35.updateExtensionChain();
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray46 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap47 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        springMvcApiReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray54 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader53.parseResponseHeaders(responseHeaderArray54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type type59 = null;
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader58.getParameters(type59, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean64 = springMvcApiReader53.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader35.getParameters((java.lang.reflect.Type) wildcardClass49, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean66 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean67 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger71 = null;
        springMvcApiReader2.swagger = swagger71;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = springMvcApiReader2.LOG;
        java.lang.reflect.Method method74 = null;
        io.swagger.models.Operation operation75 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method74, operation75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(parameterList10);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(parameterList18);
        org.junit.Assert.assertNotNull(responseHeaderArray19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(responseHeaderArray46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(logAdapter68);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNull(logAdapter73);
    }

    @Test
    public void test9461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9461");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray60 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader59.parseResponseHeaders(responseHeaderArray60);
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet63 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet63, typeArray62);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet63);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader68.parseResponseHeaders(responseHeaderArray69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.reflect.Type type74 = null;
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList78 = springMvcApiReader73.getParameters(type74, (java.util.List<java.lang.annotation.Annotation>) annotationList76);
        boolean boolean79 = springMvcApiReader68.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader68.getTypesToSkip();
        springMvcApiReader59.setTypesToSkip(typeSet80);
        springMvcApiReader2.setTypesToSkip(typeSet80);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap85 = null;
        java.lang.String str86 = springMvcApiReader2.parseOperationPath("hi!", strMap85);
        io.swagger.models.Swagger swagger87 = springMvcApiReader2.swagger;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray88 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap89 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray88);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter90 = null;
        springMvcApiReader2.LOG = logAdapter90;
        io.swagger.annotations.Api api92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet93 = springMvcApiReader2.extractTags(api92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(parameterList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "/hi!" + "'", str86, "/hi!");
        org.junit.Assert.assertNull(swagger87);
        org.junit.Assert.assertNull(strMap89);
    }

    @Test
    public void test9462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9462");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(false, api29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader2.parseOperationPath("/hi!", strMap32);
        io.swagger.annotations.Api api35 = null;
        boolean boolean36 = springMvcApiReader2.canReadApi(false, api35);
        io.swagger.models.Operation operation37 = null;
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        springMvcApiReader2.updateTagsForOperation(operation37, apiOperation38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader42.typesToSkip;
        springMvcApiReader42.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader42.typesToSkip;
        io.swagger.models.Swagger swagger46 = null;
        springMvcApiReader42.swagger = swagger46;
        io.swagger.models.Swagger swagger48 = springMvcApiReader42.swagger;
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type type54 = null;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList58 = springMvcApiReader53.getParameters(type54, (java.util.List<java.lang.annotation.Annotation>) annotationList56);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type type62 = null;
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList66 = springMvcApiReader61.getParameters(type62, (java.util.List<java.lang.annotation.Annotation>) annotationList64);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray67 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap68 = springMvcApiReader61.parseResponseHeaders(responseHeaderArray67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.reflect.Type[] typeArray71 = new java.lang.reflect.Type[] { wildcardClass70 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet72 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet72, typeArray71);
        springMvcApiReader61.typesToSkip = typeSet72;
        springMvcApiReader53.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet72);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = null;
        java.lang.String str78 = springMvcApiReader53.parseOperationPath("hi!", strMap77);
        java.lang.annotation.Annotation[] annotationArray79 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList80 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList80, annotationArray79);
        boolean boolean82 = springMvcApiReader53.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList83 = springMvcApiReader42.getParameters((java.lang.reflect.Type) wildcardClass50, (java.util.List<java.lang.annotation.Annotation>) annotationList80);
        boolean boolean84 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        java.util.Set<java.lang.reflect.Type> typeSet85 = null;
        springMvcApiReader2.typesToSkip = typeSet85;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/hi!" + "'", str33, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNull(swagger48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(parameterList58);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(parameterList66);
        org.junit.Assert.assertNotNull(responseHeaderArray67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/hi!" + "'", str78, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(parameterList83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test9463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9463");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        java.lang.reflect.Type[] typeArray5 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet6 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet6, typeArray5);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(typeArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
    }

    @Test
    public void test9464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9464");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader16.getParameters(type17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray22 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap23 = springMvcApiReader16.parseResponseHeaders(responseHeaderArray22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass25, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        springMvcApiReader2.LOG = logAdapter31;
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        io.swagger.annotations.Api api37 = null;
        boolean boolean38 = springMvcApiReader2.canReadApi(true, api37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type type42 = null;
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader41.getParameters(type42, (java.util.List<java.lang.annotation.Annotation>) annotationList44);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader41.parseResponseHeaders(responseHeaderArray47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = springMvcApiReader41.LOG;
        io.swagger.models.Swagger swagger50 = springMvcApiReader41.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader41.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        java.lang.String str55 = springMvcApiReader2.parseOperationPath("/hi!", strMap54);
        java.lang.reflect.Type type56 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type56);
        io.swagger.annotations.Api api58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet59 = springMvcApiReader2.extractTags(api58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNull(typeSet13);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(responseHeaderArray22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(logAdapter49);
        org.junit.Assert.assertNull(swagger50);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "/hi!" + "'", str55, "/hi!");
    }

    @Test
    public void test9465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9465");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        java.lang.annotation.Annotation[] annotationArray14 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList15 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList15, annotationArray14);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList17 = springMvcApiReader12.getParameters(type13, (java.util.List<java.lang.annotation.Annotation>) annotationList15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList25 = springMvcApiReader20.getParameters(type21, (java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass29 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader20.typesToSkip = typeSet31;
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader12.parseOperationPath("hi!", strMap36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray38);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray38);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger42 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger43 = null;
        springMvcApiReader2.swagger = swagger43;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray45 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap46 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray45);
        io.swagger.models.Operation operation47 = null;
        io.swagger.annotations.ApiResponses apiResponses48 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation47, apiResponses48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(parameterList17);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(parameterList25);
        org.junit.Assert.assertNotNull(responseHeaderArray26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(typeSet41);
        org.junit.Assert.assertNull(swagger42);
        org.junit.Assert.assertNull(strMap46);
    }

    @Test
    public void test9466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9466");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type type36 = null;
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList40 = springMvcApiReader35.getParameters(type36, (java.util.List<java.lang.annotation.Annotation>) annotationList38);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader35.parseResponseHeaders(responseHeaderArray41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass44 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader35.typesToSkip = typeSet46;
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader27.parseOperationPath("hi!", strMap51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray53 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray53);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger57 = null;
        springMvcApiReader2.swagger = swagger57;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api61 = null;
        boolean boolean62 = springMvcApiReader2.canReadApi(false, api61);
        io.swagger.models.Operation operation63 = null;
        io.swagger.annotations.ApiOperation apiOperation64 = null;
        springMvcApiReader2.updateTagsForOperation(operation63, apiOperation64);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(parameterList40);
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(logAdapter56);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test9467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9467");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList34 = springMvcApiReader29.getParameters(type30, (java.util.List<java.lang.annotation.Annotation>) annotationList32);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray35 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap36 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass38 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader29.typesToSkip = typeSet40;
        springMvcApiReader21.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader21.parseOperationPath("hi!", strMap45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader51.typesToSkip;
        springMvcApiReader51.updateExtensionChain();
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type type57 = null;
        java.lang.annotation.Annotation[] annotationArray58 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList59 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList59, annotationArray58);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList61 = springMvcApiReader56.getParameters(type57, (java.util.List<java.lang.annotation.Annotation>) annotationList59);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray62 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap63 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        springMvcApiReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray70 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader69.parseResponseHeaders(responseHeaderArray70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type type75 = null;
        java.lang.annotation.Annotation[] annotationArray76 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList77 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList77, annotationArray76);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList79 = springMvcApiReader74.getParameters(type75, (java.util.List<java.lang.annotation.Annotation>) annotationList77);
        boolean boolean80 = springMvcApiReader69.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList77);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList81 = springMvcApiReader51.getParameters((java.lang.reflect.Type) wildcardClass65, (java.util.List<java.lang.annotation.Annotation>) annotationList77);
        boolean boolean82 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList77);
        boolean boolean83 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList77);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = null;
        springMvcApiReader2.LOG = logAdapter84;
        io.swagger.annotations.Api api87 = null;
        boolean boolean88 = springMvcApiReader2.canReadApi(false, api87);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet90 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter91 = null;
        springMvcApiReader2.LOG = logAdapter91;
        io.swagger.annotations.Api api93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet94 = springMvcApiReader2.extractTags(api93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(parameterList34);
        org.junit.Assert.assertNotNull(responseHeaderArray35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(annotationArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(parameterList61);
        org.junit.Assert.assertNotNull(responseHeaderArray62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(annotationArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(parameterList79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(parameterList81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(typeSet90);
    }

    @Test
    public void test9468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9468");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader23.typesToSkip;
        springMvcApiReader23.updateExtensionChain();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader23.setTypesToSkip(typeSet30);
        springMvcApiReader2.setTypesToSkip(typeSet30);
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger38 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader2.parseOperationPath("/hi!", strMap42);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNull(swagger38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
    }

    @Test
    public void test9469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9469");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api7 = null;
        boolean boolean8 = springMvcApiReader2.canReadApi(true, api7);
        io.swagger.models.Operation operation9 = null;
        io.swagger.annotations.ApiOperation apiOperation10 = null;
        springMvcApiReader2.updateTagsForOperation(operation9, apiOperation10);
        io.swagger.models.Swagger swagger12 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(swagger12);
    }

    @Test
    public void test9470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9470");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type type16 = null;
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList20 = springMvcApiReader15.getParameters(type16, (java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = springMvcApiReader23.getParameters(type24, (java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] { wildcardClass32 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader23.typesToSkip = typeSet34;
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader15.parseOperationPath("hi!", strMap39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray41);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray41);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type type52 = null;
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList56 = springMvcApiReader51.getParameters(type52, (java.util.List<java.lang.annotation.Annotation>) annotationList54);
        boolean boolean57 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader46.getTypesToSkip();
        io.swagger.models.Swagger swagger59 = null;
        springMvcApiReader46.swagger = swagger59;
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader46.parseOperationPath("/hi!", strMap62);
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader46.swagger = swagger64;
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader46.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet66);
        io.swagger.models.Swagger swagger68 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(parameterList20);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(parameterList28);
        org.junit.Assert.assertNotNull(responseHeaderArray29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(parameterList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "/hi!" + "'", str63, "/hi!");
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNull(swagger68);
    }

    @Test
    public void test9471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9471");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger8 = null;
        springMvcApiReader2.swagger = swagger8;
        java.util.Set<java.lang.reflect.Type> typeSet10 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(true, api12);
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray20 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap21 = springMvcApiReader19.parseResponseHeaders(responseHeaderArray20);
        io.swagger.models.Swagger swagger22 = springMvcApiReader19.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader19.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader19.LOG;
        io.swagger.models.Swagger swagger25 = springMvcApiReader19.swagger;
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList33 = springMvcApiReader28.getParameters(type29, (java.util.List<java.lang.annotation.Annotation>) annotationList31);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray34 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap35 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        springMvcApiReader28.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type type42 = null;
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader41.getParameters(type42, (java.util.List<java.lang.annotation.Annotation>) annotationList44);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader41.parseResponseHeaders(responseHeaderArray47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        springMvcApiReader41.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        io.swagger.models.Swagger swagger52 = springMvcApiReader41.swagger;
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] { wildcardClass54 };
        java.util.ArrayList<java.lang.reflect.Type> typeList56 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList56, typeArray55);
        springMvcApiReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        springMvcApiReader28.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        springMvcApiReader19.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(swagger22);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNull(swagger25);
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(parameterList33);
        org.junit.Assert.assertNotNull(responseHeaderArray34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNull(swagger52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test9472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9472");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        springMvcApiReader2.LOG = logAdapter45;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        springMvcApiReader2.LOG = logAdapter49;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet48);
    }

    @Test
    public void test9473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9473");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.util.Set<java.lang.reflect.Type> typeSet20 = null;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList29 = springMvcApiReader24.getParameters(type25, (java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray30 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap31 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] { wildcardClass33 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader24.typesToSkip = typeSet35;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader24.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet38;
        io.swagger.models.Swagger swagger40 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList48 = springMvcApiReader43.getParameters(type44, (java.util.List<java.lang.annotation.Annotation>) annotationList46);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray49 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        springMvcApiReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger54 = springMvcApiReader43.swagger;
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] { wildcardClass56 };
        java.util.ArrayList<java.lang.reflect.Type> typeList58 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList58, typeArray57);
        springMvcApiReader43.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList58);
        java.util.Set<java.lang.reflect.Type> typeSet61 = null;
        springMvcApiReader43.setTypesToSkip(typeSet61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.reflect.Type type66 = null;
        java.lang.annotation.Annotation[] annotationArray67 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList68 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList68, annotationArray67);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList70 = springMvcApiReader65.getParameters(type66, (java.util.List<java.lang.annotation.Annotation>) annotationList68);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray71 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader65.parseResponseHeaders(responseHeaderArray71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] { wildcardClass74 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet76 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet76, typeArray75);
        springMvcApiReader65.typesToSkip = typeSet76;
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader65.typesToSkip;
        springMvcApiReader43.typesToSkip = typeSet79;
        springMvcApiReader2.setTypesToSkip(typeSet79);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(parameterList29);
        org.junit.Assert.assertNotNull(responseHeaderArray30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNull(swagger40);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(parameterList48);
        org.junit.Assert.assertNotNull(responseHeaderArray49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNull(swagger54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(annotationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(parameterList70);
        org.junit.Assert.assertNotNull(responseHeaderArray71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(typeSet82);
    }

    @Test
    public void test9474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9474");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader2.parseOperationPath("/hi!", strMap21);
        io.swagger.annotations.Api api23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList24 = springMvcApiReader2.getSecurityRequirements(api23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/hi!" + "'", str22, "/hi!");
    }

    @Test
    public void test9475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9475");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray23 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap24 = springMvcApiReader17.parseResponseHeaders(responseHeaderArray23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] { wildcardClass26 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader17.typesToSkip = typeSet28;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        springMvcApiReader17.LOG = logAdapter31;
        java.lang.Class<?> wildcardClass33 = springMvcApiReader17.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertNotNull(responseHeaderArray23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test9476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9476");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader2.parseOperationPath("/hi!", strMap17);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "/hi!" + "'", str18, "/hi!");
    }

    @Test
    public void test9477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9477");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList26 = springMvcApiReader21.getParameters(type22, (java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray27 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap28 = springMvcApiReader21.parseResponseHeaders(responseHeaderArray27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList41 = springMvcApiReader36.getParameters(type37, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean42 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean43 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader46.getParameters(type47, (java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type type62 = null;
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList66 = springMvcApiReader61.getParameters(type62, (java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean67 = springMvcApiReader56.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean68 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean69 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader21.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet70;
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api75 = null;
        boolean boolean76 = springMvcApiReader2.canReadApi(true, api75);
        io.swagger.models.Operation operation77 = null;
        io.swagger.annotations.ApiOperation apiOperation78 = null;
        springMvcApiReader2.updateTagsForOperation(operation77, apiOperation78);
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger81 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(parameterList26);
        org.junit.Assert.assertNotNull(responseHeaderArray27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(parameterList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(parameterList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNull(logAdapter73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNull(swagger81);
    }

    @Test
    public void test9478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9478");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation46 = null;
        io.swagger.annotations.ApiOperation apiOperation47 = null;
        springMvcApiReader2.updateTagsForOperation(operation46, apiOperation47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader2.parseOperationPath("hi!", strMap50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.ApiOperation apiOperation54 = null;
        io.swagger.models.Operation operation55 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation54, operation55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/hi!" + "'", str51, "/hi!");
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertNotNull(typeSet53);
    }

    @Test
    public void test9479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9479");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type type16 = null;
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList20 = springMvcApiReader15.getParameters(type16, (java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type type24 = null;
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList28 = springMvcApiReader23.getParameters(type24, (java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray29 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap30 = springMvcApiReader23.parseResponseHeaders(responseHeaderArray29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] { wildcardClass32 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader23.typesToSkip = typeSet34;
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader15.parseOperationPath("hi!", strMap39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray41);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray41);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader46.typesToSkip;
        java.lang.String[] strArray51 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray54 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray56 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList57 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList57, securityRequirementArray56);
        io.swagger.models.Operation operation59 = null;
        springMvcApiReader46.updateOperation(strArray51, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList57, operation59);
        io.swagger.models.Swagger swagger61 = null;
        springMvcApiReader46.swagger = swagger61;
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader65.typesToSkip;
        springMvcApiReader65.updateExtensionChain();
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type type71 = null;
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList75 = springMvcApiReader70.getParameters(type71, (java.util.List<java.lang.annotation.Annotation>) annotationList73);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray76 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader70.parseResponseHeaders(responseHeaderArray76);
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        springMvcApiReader70.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        springMvcApiReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader84 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger82, logAdapter83);
        java.lang.reflect.Type type85 = null;
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList89 = springMvcApiReader84.getParameters(type85, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList90 = springMvcApiReader46.getParameters((java.lang.reflect.Type) wildcardClass79, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean91 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        java.util.Map<java.lang.String, java.lang.String> strMap93 = null;
        java.lang.String str94 = springMvcApiReader2.parseOperationPath("", strMap93);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter95 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet96 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList98 = springMvcApiReader2.getSecurityRequirements(api97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(parameterList20);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(parameterList28);
        org.junit.Assert.assertNotNull(responseHeaderArray29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(securityRequirementArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(parameterList75);
        org.junit.Assert.assertNotNull(responseHeaderArray76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(parameterList89);
        org.junit.Assert.assertNotNull(parameterList90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
        org.junit.Assert.assertNull(logAdapter95);
        org.junit.Assert.assertNull(typeSet96);
    }

    @Test
    public void test9480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9480");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader21.typesToSkip;
        springMvcApiReader21.updateExtensionChain();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type type27 = null;
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList31 = springMvcApiReader26.getParameters(type27, (java.util.List<java.lang.annotation.Annotation>) annotationList29);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass35, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader49.typesToSkip;
        java.lang.String[] strArray54 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray57 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap58 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray59 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList60 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList60, securityRequirementArray59);
        io.swagger.models.Operation operation62 = null;
        springMvcApiReader49.updateOperation(strArray54, strArray57, strMap58, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList60, operation62);
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader49.swagger = swagger64;
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader68.typesToSkip;
        springMvcApiReader68.updateExtensionChain();
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.reflect.Type type74 = null;
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList78 = springMvcApiReader73.getParameters(type74, (java.util.List<java.lang.annotation.Annotation>) annotationList76);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray79 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap80 = springMvcApiReader73.parseResponseHeaders(responseHeaderArray79);
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        springMvcApiReader73.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass82);
        springMvcApiReader68.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass82);
        io.swagger.models.Swagger swagger85 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader87 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger85, logAdapter86);
        java.lang.reflect.Type type88 = null;
        java.lang.annotation.Annotation[] annotationArray89 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList90 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList90, annotationArray89);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList92 = springMvcApiReader87.getParameters(type88, (java.util.List<java.lang.annotation.Annotation>) annotationList90);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList93 = springMvcApiReader49.getParameters((java.lang.reflect.Type) wildcardClass82, (java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean94 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter95 = null;
        springMvcApiReader2.LOG = logAdapter95;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter97 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet98 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(parameterList31);
        org.junit.Assert.assertNotNull(responseHeaderArray32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(securityRequirementArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(parameterList78);
        org.junit.Assert.assertNotNull(responseHeaderArray79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(annotationArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(parameterList92);
        org.junit.Assert.assertNotNull(parameterList93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(logAdapter97);
        org.junit.Assert.assertNotNull(typeSet98);
    }

    @Test
    public void test9481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9481");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(false, api29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader2.typesToSkip;
        java.lang.Class<?> wildcardClass33 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test9482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9482");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = null;
        springMvcApiReader2.swagger = swagger6;
        io.swagger.models.Swagger swagger8 = null;
        springMvcApiReader2.swagger = swagger8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        java.lang.annotation.Annotation[] annotationArray14 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList15 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList15, annotationArray14);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList17 = springMvcApiReader12.getParameters(type13, (java.util.List<java.lang.annotation.Annotation>) annotationList15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList25 = springMvcApiReader20.getParameters(type21, (java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass29 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader20.typesToSkip = typeSet31;
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = springMvcApiReader12.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        springMvcApiReader12.LOG = logAdapter36;
        io.swagger.models.Swagger swagger38 = null;
        springMvcApiReader12.swagger = swagger38;
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type type56 = null;
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList60 = springMvcApiReader55.getParameters(type56, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray61 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader55.parseResponseHeaders(responseHeaderArray61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        springMvcApiReader55.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        io.swagger.models.Swagger swagger66 = springMvcApiReader55.swagger;
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.reflect.Type[] typeArray69 = new java.lang.reflect.Type[] { wildcardClass68 };
        java.util.ArrayList<java.lang.reflect.Type> typeList70 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList70, typeArray69);
        springMvcApiReader55.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        springMvcApiReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        springMvcApiReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(annotationArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(parameterList17);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(parameterList25);
        org.junit.Assert.assertNotNull(responseHeaderArray26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(logAdapter35);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(parameterList60);
        org.junit.Assert.assertNotNull(responseHeaderArray61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNull(swagger66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(typeSet76);
    }

    @Test
    public void test9483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9483");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.ResponseHeader[] responseHeaderArray58 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap59 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        springMvcApiReader2.LOG = logAdapter60;
        io.swagger.annotations.Api api63 = null;
        boolean boolean64 = springMvcApiReader2.canReadApi(false, api63);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        springMvcApiReader2.LOG = logAdapter65;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray67 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap68 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray67);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(strMap68);
    }

    @Test
    public void test9484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9484");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader7.typesToSkip;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray15 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap16 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray17 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList18 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList18, securityRequirementArray17);
        io.swagger.models.Operation operation20 = null;
        springMvcApiReader7.updateOperation(strArray12, strArray15, strMap16, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList18, operation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader7.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet26 = null;
        springMvcApiReader2.setTypesToSkip(typeSet26);
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger4);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(securityRequirementArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNull(typeSet28);
    }

    @Test
    public void test9485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9485");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray12 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList13 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList13, securityRequirementArray12);
        io.swagger.models.Operation operation15 = null;
        springMvcApiReader2.updateOperation(strArray7, strArray10, strMap11, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList13, operation15);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation18 = null;
        io.swagger.annotations.ApiOperation apiOperation19 = null;
        springMvcApiReader2.updateTagsForOperation(operation18, apiOperation19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray25 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap26 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList34 = springMvcApiReader29.getParameters(type30, (java.util.List<java.lang.annotation.Annotation>) annotationList32);
        boolean boolean35 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet36;
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader40.getParameters(type41, (java.util.List<java.lang.annotation.Annotation>) annotationList43);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList53 = springMvcApiReader48.getParameters(type49, (java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray54 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] { wildcardClass57 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader48.typesToSkip = typeSet59;
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader40.parseOperationPath("hi!", strMap64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        springMvcApiReader40.LOG = logAdapter66;
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader70.canReadApi(false, api72);
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        java.lang.reflect.Type type77 = null;
        java.lang.annotation.Annotation[] annotationArray78 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList79 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList79, annotationArray78);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList81 = springMvcApiReader76.getParameters(type77, (java.util.List<java.lang.annotation.Annotation>) annotationList79);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray82 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap83 = springMvcApiReader76.parseResponseHeaders(responseHeaderArray82);
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        springMvcApiReader76.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass85);
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader76.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter88 = null;
        springMvcApiReader76.LOG = logAdapter88;
        java.lang.Class<?> wildcardClass90 = springMvcApiReader76.getClass();
        java.lang.annotation.Annotation[] annotationArray91 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList92 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList92, annotationArray91);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList94 = springMvcApiReader70.getParameters((java.lang.reflect.Type) wildcardClass90, (java.util.List<java.lang.annotation.Annotation>) annotationList92);
        boolean boolean95 = springMvcApiReader40.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList92);
        boolean boolean96 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList92);
        java.lang.reflect.Method method97 = null;
        io.swagger.models.Operation operation98 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method97, operation98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(securityRequirementArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNull(logAdapter21);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(parameterList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(parameterList45);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(parameterList53);
        org.junit.Assert.assertNotNull(responseHeaderArray54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "/hi!" + "'", str65, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(annotationArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(parameterList81);
        org.junit.Assert.assertNotNull(responseHeaderArray82);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(annotationArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(parameterList94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test9486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9486");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader7.typesToSkip;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray15 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap16 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray17 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList18 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList18, securityRequirementArray17);
        io.swagger.models.Operation operation20 = null;
        springMvcApiReader7.updateOperation(strArray12, strArray15, strMap16, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList18, operation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader7.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader26.typesToSkip;
        springMvcApiReader26.updateExtensionChain();
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader31.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader31.getTypesToSkip();
        springMvcApiReader26.setTypesToSkip(typeSet33);
        springMvcApiReader2.setTypesToSkip(typeSet33);
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        springMvcApiReader2.updateTagsForOperation(operation36, apiOperation37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList41 = springMvcApiReader2.getSecurityRequirements(api40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNull(swagger4);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(securityRequirementArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNull(logAdapter39);
    }

    @Test
    public void test9487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9487");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader6.typesToSkip;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray16 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList17 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList17, securityRequirementArray16);
        io.swagger.models.Operation operation19 = null;
        springMvcApiReader6.updateOperation(strArray11, strArray14, strMap15, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList17, operation19);
        java.lang.Class<?> wildcardClass21 = strArray11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader2.parseOperationPath("/hi!", strMap24);
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        springMvcApiReader2.updateTagsForOperation(operation26, apiOperation27);
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader2.swagger = swagger29;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNull(swagger3);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(securityRequirementArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertNull(logAdapter31);
    }

    @Test
    public void test9488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9488");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        boolean boolean13 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList10);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        io.swagger.annotations.Api api21 = null;
        boolean boolean22 = springMvcApiReader2.canReadApi(true, api21);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader2.LOG = logAdapter25;
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        java.lang.String str29 = springMvcApiReader2.parseOperationPath("hi!", strMap28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader33.typesToSkip;
        java.lang.String[] strArray38 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray41 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader33.updateOperation(strArray38, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader33.typesToSkip;
        io.swagger.models.Operation operation49 = null;
        io.swagger.annotations.ApiOperation apiOperation50 = null;
        springMvcApiReader33.updateTagsForOperation(operation49, apiOperation50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader33.LOG;
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray56 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap57 = springMvcApiReader55.parseResponseHeaders(responseHeaderArray56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type type61 = null;
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader60.getParameters(type61, (java.util.List<java.lang.annotation.Annotation>) annotationList63);
        boolean boolean66 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader55.getTypesToSkip();
        springMvcApiReader33.typesToSkip = typeSet67;
        springMvcApiReader33.updateExtensionChain();
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader72.typesToSkip;
        java.lang.String[] strArray77 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray80 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap81 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray82 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList83 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList83, securityRequirementArray82);
        io.swagger.models.Operation operation85 = null;
        springMvcApiReader72.updateOperation(strArray77, strArray80, strMap81, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList83, operation85);
        io.swagger.models.Swagger swagger87 = null;
        springMvcApiReader72.swagger = swagger87;
        java.lang.annotation.Annotation[] annotationArray89 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList90 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList90, annotationArray89);
        boolean boolean92 = springMvcApiReader72.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        java.lang.Class<?> wildcardClass93 = annotationList90.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass93);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass93);
        io.swagger.models.Swagger swagger96 = null;
        springMvcApiReader2.swagger = swagger96;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource98 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger99 = springMvcApiReader2.read(springResource98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "/hi!" + "'", str29, "/hi!");
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(securityRequirementArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(annotationArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test9489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9489");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList22 = springMvcApiReader17.getParameters(type18, (java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean23 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        boolean boolean24 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader27.getParameters(type28, (java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray33 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap34 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList47 = springMvcApiReader42.getParameters(type43, (java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger52 = null;
        springMvcApiReader2.swagger = swagger52;
        io.swagger.models.Operation operation54 = null;
        io.swagger.annotations.ApiOperation apiOperation55 = null;
        springMvcApiReader2.updateTagsForOperation(operation54, apiOperation55);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger58 = null;
        springMvcApiReader2.swagger = swagger58;
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type type63 = null;
        java.lang.annotation.Annotation[] annotationArray64 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList65 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList65, annotationArray64);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList67 = springMvcApiReader62.getParameters(type63, (java.util.List<java.lang.annotation.Annotation>) annotationList65);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray68 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap69 = springMvcApiReader62.parseResponseHeaders(responseHeaderArray68);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        springMvcApiReader62.LOG = logAdapter70;
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type type75 = null;
        java.lang.annotation.Annotation[] annotationArray76 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList77 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList77, annotationArray76);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList79 = springMvcApiReader74.getParameters(type75, (java.util.List<java.lang.annotation.Annotation>) annotationList77);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray80 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap81 = springMvcApiReader74.parseResponseHeaders(responseHeaderArray80);
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        springMvcApiReader74.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass83);
        io.swagger.models.Swagger swagger85 = springMvcApiReader74.swagger;
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] { wildcardClass87 };
        java.util.ArrayList<java.lang.reflect.Type> typeList89 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList89, typeArray88);
        springMvcApiReader74.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        springMvcApiReader62.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap94 = null;
        io.swagger.annotations.Api api95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap96 = springMvcApiReader2.updateTagsForApi(strMap94, api95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(parameterList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(responseHeaderArray33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(parameterList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(annotationArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(parameterList67);
        org.junit.Assert.assertNotNull(responseHeaderArray68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(annotationArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(parameterList79);
        org.junit.Assert.assertNotNull(responseHeaderArray80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNull(swagger85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
    }

    @Test
    public void test9490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9490");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        springMvcApiReader2.LOG = logAdapter6;
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type type12 = null;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList16 = springMvcApiReader11.getParameters(type12, (java.util.List<java.lang.annotation.Annotation>) annotationList14);
        java.util.Set<java.lang.reflect.Type> typeSet17 = null;
        springMvcApiReader11.typesToSkip = typeSet17;
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        java.lang.String str21 = springMvcApiReader11.parseOperationPath("/hi!", strMap20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader11.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        springMvcApiReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass34);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader11.getParameters((java.lang.reflect.Type) wildcardClass34, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        springMvcApiReader11.LOG = logAdapter40;
        springMvcApiReader11.updateExtensionChain();
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader11.canReadApi(false, api44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader48.typesToSkip;
        java.lang.String[] strArray53 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray56 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap57 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray58 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList59 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList59, securityRequirementArray58);
        io.swagger.models.Operation operation61 = null;
        springMvcApiReader48.updateOperation(strArray53, strArray56, strMap57, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList59, operation61);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader48.typesToSkip;
        io.swagger.models.Operation operation64 = null;
        io.swagger.annotations.ApiOperation apiOperation65 = null;
        springMvcApiReader48.updateTagsForOperation(operation64, apiOperation65);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader48.LOG;
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray71 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader70.parseResponseHeaders(responseHeaderArray71);
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader75 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger73, logAdapter74);
        java.lang.reflect.Type type76 = null;
        java.lang.annotation.Annotation[] annotationArray77 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList78 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList78, annotationArray77);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList80 = springMvcApiReader75.getParameters(type76, (java.util.List<java.lang.annotation.Annotation>) annotationList78);
        boolean boolean81 = springMvcApiReader70.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader70.getTypesToSkip();
        springMvcApiReader48.typesToSkip = typeSet82;
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader48.getTypesToSkip();
        springMvcApiReader11.typesToSkip = typeSet84;
        springMvcApiReader2.setTypesToSkip(typeSet84);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = null;
        java.lang.String str89 = springMvcApiReader2.parseOperationPath("hi!", strMap88);
        java.util.Set<java.lang.reflect.Type> typeSet90 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet92 = springMvcApiReader2.extractTags(api91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(parameterList16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/hi!" + "'", str21, "/hi!");
        org.junit.Assert.assertNull(typeSet22);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(securityRequirementArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNull(logAdapter67);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(annotationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(parameterList80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "/hi!" + "'", str89, "/hi!");
        org.junit.Assert.assertNotNull(typeSet90);
    }

    @Test
    public void test9491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9491");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray8 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap9 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] { wildcardClass11 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader2.typesToSkip = typeSet13;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        io.swagger.models.Operation operation19 = null;
        io.swagger.annotations.ApiOperation apiOperation20 = null;
        springMvcApiReader2.updateTagsForOperation(operation19, apiOperation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader27.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader27.getTypesToSkip();
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList37 = springMvcApiReader32.getParameters(type33, (java.util.List<java.lang.annotation.Annotation>) annotationList35);
        java.util.Set<java.lang.reflect.Type> typeSet38 = null;
        springMvcApiReader32.typesToSkip = typeSet38;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader32.parseOperationPath("/hi!", strMap41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type type46 = null;
        java.lang.annotation.Annotation[] annotationArray47 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList48 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList48, annotationArray47);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList50 = springMvcApiReader45.getParameters(type46, (java.util.List<java.lang.annotation.Annotation>) annotationList48);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type type54 = null;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList58 = springMvcApiReader53.getParameters(type54, (java.util.List<java.lang.annotation.Annotation>) annotationList56);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray59 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap60 = springMvcApiReader53.parseResponseHeaders(responseHeaderArray59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] { wildcardClass62 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader53.typesToSkip = typeSet64;
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader45.parseOperationPath("hi!", strMap69);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray71 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader45.parseResponseHeaders(responseHeaderArray71);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap73 = springMvcApiReader32.parseResponseHeaders(responseHeaderArray71);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray71);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray71);
        io.swagger.models.Swagger swagger76 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger77 = null;
        springMvcApiReader2.swagger = swagger77;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(responseHeaderArray8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(parameterList37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/hi!" + "'", str42, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(parameterList50);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(parameterList58);
        org.junit.Assert.assertNotNull(responseHeaderArray59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(swagger76);
    }

    @Test
    public void test9492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9492");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader15.typesToSkip;
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray23 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap24 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray25 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList26 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList26, securityRequirementArray25);
        io.swagger.models.Operation operation28 = null;
        springMvcApiReader15.updateOperation(strArray20, strArray23, strMap24, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList26, operation28);
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader15.swagger = swagger30;
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList39 = springMvcApiReader34.getParameters(type35, (java.util.List<java.lang.annotation.Annotation>) annotationList37);
        java.util.Set<java.lang.reflect.Type> typeSet40 = null;
        springMvcApiReader34.typesToSkip = typeSet40;
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        java.lang.String str44 = springMvcApiReader34.parseOperationPath("/hi!", strMap43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type type48 = null;
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList52 = springMvcApiReader47.getParameters(type48, (java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type type56 = null;
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList60 = springMvcApiReader55.getParameters(type56, (java.util.List<java.lang.annotation.Annotation>) annotationList58);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray61 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader55.parseResponseHeaders(responseHeaderArray61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] { wildcardClass64 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet66 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet66, typeArray65);
        springMvcApiReader55.typesToSkip = typeSet66;
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet66);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader47.parseOperationPath("hi!", strMap71);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader47.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap76 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray73);
        io.swagger.annotations.Api api79 = null;
        boolean boolean80 = springMvcApiReader2.canReadApi(true, api79);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(securityRequirementArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(parameterList39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "/hi!" + "'", str44, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(parameterList52);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(parameterList60);
        org.junit.Assert.assertNotNull(responseHeaderArray61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "/hi!" + "'", str72, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(logAdapter82);
    }

    @Test
    public void test9493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9493");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        springMvcApiReader2.swagger = swagger3;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        springMvcApiReader2.LOG = logAdapter5;
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        io.swagger.models.Swagger swagger10 = springMvcApiReader9.swagger;
        io.swagger.models.Swagger swagger11 = springMvcApiReader9.swagger;
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader14.typesToSkip;
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray22 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap23 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray24 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList25 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList25, securityRequirementArray24);
        io.swagger.models.Operation operation27 = null;
        springMvcApiReader14.updateOperation(strArray19, strArray22, strMap23, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList25, operation27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader14.typesToSkip;
        springMvcApiReader9.setTypesToSkip(typeSet29);
        springMvcApiReader2.setTypesToSkip(typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        springMvcApiReader2.swagger = swagger32;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList41 = springMvcApiReader36.getParameters(type37, (java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader36.parseResponseHeaders(responseHeaderArray42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        springMvcApiReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        io.swagger.models.Swagger swagger47 = springMvcApiReader36.swagger;
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        springMvcApiReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        java.util.Set<java.lang.reflect.Type> typeSet55 = null;
        springMvcApiReader2.typesToSkip = typeSet55;
        org.junit.Assert.assertNull(swagger10);
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(securityRequirementArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(parameterList41);
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNull(swagger47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test9494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9494");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        java.util.Set<java.lang.reflect.Type> typeSet8 = null;
        springMvcApiReader2.typesToSkip = typeSet8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader12.typesToSkip;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader12.updateOperation(strArray17, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.lang.String[] strArray33 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap34 = null;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray47 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList48 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList48, securityRequirementArray47);
        io.swagger.models.Operation operation50 = null;
        springMvcApiReader37.updateOperation(strArray42, strArray45, strMap46, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation50);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader2.updateOperation(strArray17, strArray33, strMap34, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList48, operation52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(true, api55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader2.canReadApi(false, api59);
        io.swagger.models.Swagger swagger61 = null;
        springMvcApiReader2.swagger = swagger61;
        io.swagger.models.Swagger swagger63 = null;
        springMvcApiReader2.swagger = swagger63;
        io.swagger.models.Swagger swagger65 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api67 = null;
        boolean boolean68 = springMvcApiReader2.canReadApi(false, api67);
        io.swagger.models.Swagger swagger69 = null;
        springMvcApiReader2.swagger = swagger69;
        io.swagger.models.Operation operation71 = null;
        io.swagger.annotations.ApiOperation apiOperation72 = null;
        springMvcApiReader2.updateTagsForOperation(operation71, apiOperation72);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader2.parseOperationPath("hi!", strMap75);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(securityRequirementArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(typeSet57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(swagger65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
    }

    @Test
    public void test9495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9495");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        springMvcApiReader2.LOG = logAdapter6;
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass9 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test9496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9496");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation46 = null;
        io.swagger.annotations.ApiOperation apiOperation47 = null;
        springMvcApiReader2.updateTagsForOperation(operation46, apiOperation47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader2.parseOperationPath("hi!", strMap50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api54 = null;
        boolean boolean55 = springMvcApiReader2.canReadApi(true, api54);
        io.swagger.annotations.Api api57 = null;
        boolean boolean58 = springMvcApiReader2.canReadApi(true, api57);
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/hi!" + "'", str51, "/hi!");
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test9497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9497");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet5 = null;
        springMvcApiReader2.setTypesToSkip(typeSet5);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.util.Set<java.lang.reflect.Type> typeSet10 = springMvcApiReader9.typesToSkip;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray17 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap18 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray19 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList20 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList20, securityRequirementArray19);
        io.swagger.models.Operation operation22 = null;
        springMvcApiReader9.updateOperation(strArray14, strArray17, strMap18, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList20, operation22);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader9.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = springMvcApiReader9.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader9.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet26;
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray44 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap45 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList53 = springMvcApiReader48.getParameters(type49, (java.util.List<java.lang.annotation.Annotation>) annotationList51);
        boolean boolean54 = springMvcApiReader43.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList51);
        boolean boolean55 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type type59 = null;
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader58.getParameters(type59, (java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray64 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap65 = springMvcApiReader58.parseResponseHeaders(responseHeaderArray64);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader68.parseResponseHeaders(responseHeaderArray69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.reflect.Type type74 = null;
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList78 = springMvcApiReader73.getParameters(type74, (java.util.List<java.lang.annotation.Annotation>) annotationList76);
        boolean boolean79 = springMvcApiReader68.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        boolean boolean80 = springMvcApiReader58.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        boolean boolean81 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader84 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger82, logAdapter83);
        java.lang.reflect.Type type85 = null;
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList89 = springMvcApiReader84.getParameters(type85, (java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean90 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        springMvcApiReader33.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter92 = null;
        springMvcApiReader33.LOG = logAdapter92;
        java.util.Set<java.lang.reflect.Type> typeSet94 = springMvcApiReader33.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet94;
        java.util.Set<java.lang.reflect.Type> typeSet96 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger97 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(securityRequirementArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNull(logAdapter25);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(parameterList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertNotNull(responseHeaderArray64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(parameterList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(parameterList89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(typeSet94);
        org.junit.Assert.assertNotNull(typeSet96);
        org.junit.Assert.assertNull(swagger97);
    }

    @Test
    public void test9498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9498");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray3 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap4 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray3);
        io.swagger.models.Swagger swagger5 = null;
        springMvcApiReader2.swagger = swagger5;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        io.swagger.annotations.Api api16 = null;
        boolean boolean17 = springMvcApiReader14.canReadApi(false, api16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList25 = springMvcApiReader20.getParameters(type21, (java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        springMvcApiReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader20.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        springMvcApiReader20.LOG = logAdapter32;
        java.lang.Class<?> wildcardClass34 = springMvcApiReader20.getClass();
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader14.getParameters((java.lang.reflect.Type) wildcardClass34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        boolean boolean39 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray43 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray43);
        io.swagger.models.Swagger swagger45 = null;
        springMvcApiReader42.swagger = swagger45;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        springMvcApiReader42.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        springMvcApiReader42.LOG = logAdapter49;
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader42.typesToSkip;
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        io.swagger.annotations.Api api56 = null;
        boolean boolean57 = springMvcApiReader54.canReadApi(false, api56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type type61 = null;
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader60.getParameters(type61, (java.util.List<java.lang.annotation.Annotation>) annotationList63);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader60.parseResponseHeaders(responseHeaderArray66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        springMvcApiReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass69);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader60.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        springMvcApiReader60.LOG = logAdapter72;
        java.lang.Class<?> wildcardClass74 = springMvcApiReader60.getClass();
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList78 = springMvcApiReader54.getParameters((java.lang.reflect.Type) wildcardClass74, (java.util.List<java.lang.annotation.Annotation>) annotationList76);
        boolean boolean79 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        boolean boolean80 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        io.swagger.models.Swagger swagger81 = null;
        springMvcApiReader2.swagger = swagger81;
        java.util.Set<java.lang.reflect.Type> typeSet83 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(parameterList25);
        org.junit.Assert.assertNotNull(responseHeaderArray26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertNotNull(responseHeaderArray66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(parameterList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(typeSet83);
    }

    @Test
    public void test9499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9499");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type type8 = null;
        java.lang.annotation.Annotation[] annotationArray9 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList10 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList10, annotationArray9);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = springMvcApiReader7.getParameters(type8, (java.util.List<java.lang.annotation.Annotation>) annotationList10);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader7.parseResponseHeaders(responseHeaderArray13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList30 = springMvcApiReader25.getParameters(type26, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        boolean boolean31 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList32 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass16, (java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader37.typesToSkip;
        io.swagger.models.Operation operation39 = null;
        io.swagger.annotations.ApiOperation apiOperation40 = null;
        springMvcApiReader37.updateTagsForOperation(operation39, apiOperation40);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader44.typesToSkip;
        java.lang.String[] strArray49 = new java.lang.String[] { "", "hi!", "hi!" };
        java.lang.String[] strArray52 = new java.lang.String[] { "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap53 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray54 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList55 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList55, securityRequirementArray54);
        io.swagger.models.Operation operation57 = null;
        springMvcApiReader44.updateOperation(strArray49, strArray52, strMap53, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList55, operation57);
        io.swagger.models.Swagger swagger59 = null;
        springMvcApiReader44.swagger = swagger59;
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader63.typesToSkip;
        springMvcApiReader63.updateExtensionChain();
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        java.lang.reflect.Type type69 = null;
        java.lang.annotation.Annotation[] annotationArray70 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList71 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList71, annotationArray70);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList73 = springMvcApiReader68.getParameters(type69, (java.util.List<java.lang.annotation.Annotation>) annotationList71);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray74 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader68.parseResponseHeaders(responseHeaderArray74);
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        springMvcApiReader68.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        springMvcApiReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        io.swagger.models.Swagger swagger80 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader82 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger80, logAdapter81);
        java.lang.reflect.Type type83 = null;
        java.lang.annotation.Annotation[] annotationArray84 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList85 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList85, annotationArray84);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList87 = springMvcApiReader82.getParameters(type83, (java.util.List<java.lang.annotation.Annotation>) annotationList85);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList88 = springMvcApiReader44.getParameters((java.lang.reflect.Type) wildcardClass77, (java.util.List<java.lang.annotation.Annotation>) annotationList85);
        boolean boolean89 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList85);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList90 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass34, (java.util.List<java.lang.annotation.Annotation>) annotationList85);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger93 = null;
        springMvcApiReader2.swagger = swagger93;
        io.swagger.models.Swagger swagger95 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(annotationArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(parameterList12);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(parameterList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(parameterList32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(securityRequirementArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(annotationArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(parameterList73);
        org.junit.Assert.assertNotNull(responseHeaderArray74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(annotationArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(parameterList87);
        org.junit.Assert.assertNotNull(parameterList88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(parameterList90);
        org.junit.Assert.assertNull(swagger95);
    }

    @Test
    public void test9500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test9500");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        java.lang.annotation.Annotation[] annotationArray4 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList5 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList5, annotationArray4);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList7 = springMvcApiReader2.getParameters(type3, (java.util.List<java.lang.annotation.Annotation>) annotationList5);
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        java.lang.annotation.Annotation[] annotationArray12 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList13 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList13, annotationArray12);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList15 = springMvcApiReader10.getParameters(type11, (java.util.List<java.lang.annotation.Annotation>) annotationList13);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray16 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap17 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray16);
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] { wildcardClass19 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader10.typesToSkip = typeSet21;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("hi!", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList38 = springMvcApiReader33.getParameters(type34, (java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader33.parseResponseHeaders(responseHeaderArray39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList53 = springMvcApiReader48.getParameters(type49, (java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray54 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        springMvcApiReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        springMvcApiReader2.LOG = logAdapter60;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader2.parseOperationPath("hi!", strMap63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray68 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap69 = springMvcApiReader67.parseResponseHeaders(responseHeaderArray68);
        io.swagger.models.Swagger swagger70 = null;
        springMvcApiReader67.swagger = swagger70;
        io.swagger.annotations.Api api73 = null;
        boolean boolean74 = springMvcApiReader67.canReadApi(true, api73);
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader67.swagger = swagger75;
        java.lang.Class<?> wildcardClass77 = springMvcApiReader67.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        springMvcApiReader2.LOG = logAdapter79;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = null;
        springMvcApiReader2.LOG = logAdapter81;
        org.junit.Assert.assertNotNull(annotationArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(parameterList7);
        org.junit.Assert.assertNotNull(annotationArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(parameterList15);
        org.junit.Assert.assertNotNull(responseHeaderArray16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(parameterList38);
        org.junit.Assert.assertNotNull(responseHeaderArray39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(parameterList53);
        org.junit.Assert.assertNotNull(responseHeaderArray54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }
}

