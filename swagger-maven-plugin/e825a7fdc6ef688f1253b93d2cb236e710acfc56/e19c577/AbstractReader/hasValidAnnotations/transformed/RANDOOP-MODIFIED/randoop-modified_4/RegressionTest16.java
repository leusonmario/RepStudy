import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest16 {

    public static boolean debug = false;

    @Test
    public void test08001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08001");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader2.canReadApi(false, api33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        springMvcApiReader2.LOG = logAdapter35;
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader2.parseOperationPath("", strMap39);
        io.swagger.annotations.Api api42 = null;
        boolean boolean43 = springMvcApiReader2.canReadApi(false, api42);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test08002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08002");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray32);
        io.swagger.annotations.Api api34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet35 = springMvcApiReader2.extractTags(api34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(strMap33);
    }

    @Test
    public void test08003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08003");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = null;
        springMvcApiReader2.typesToSkip = typeSet7;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        springMvcApiReader12.addTypeToSkippedTypes(type13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader12.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet15;
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api19 = null;
        boolean boolean20 = springMvcApiReader2.canReadApi(true, api19);
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList23 = springMvcApiReader2.getSecurityRequirements(api22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(typeSet9);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeSet21);
    }

    @Test
    public void test08004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08004");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet12 = springMvcApiReader8.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader8.LOG;
        io.swagger.models.Swagger swagger14 = springMvcApiReader8.swagger;
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader8.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        boolean boolean40 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList38);
        io.swagger.models.Swagger swagger41 = null;
        springMvcApiReader32.swagger = swagger41;
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        boolean boolean46 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList44);
        boolean boolean47 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader19.LOG;
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.lang.annotation.Annotation[] annotationArray56 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList57 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList57, annotationArray56);
        boolean boolean59 = springMvcApiReader51.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList57);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader62.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader62.parseOperationPath("", strMap69);
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader62.canReadApi(false, api72);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader62.parseOperationPath("hi!", strMap75);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.Class<?> wildcardClass80 = springMvcApiReader79.getClass();
        springMvcApiReader62.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader62.parseOperationPath("/hi!", strMap83);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray85 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap86 = springMvcApiReader62.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap87 = springMvcApiReader51.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap88 = springMvcApiReader19.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap89 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap90 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray85);
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation92 = null;
        io.swagger.annotations.ApiOperation apiOperation93 = null;
        springMvcApiReader2.updateTagsForOperation(operation92, apiOperation93);
        io.swagger.annotations.Api api95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet96 = springMvcApiReader2.extractTags(api95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNull(swagger14);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(annotationArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(logAdapter67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/hi!" + "'", str84, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNotNull(typeSet91);
    }

    @Test
    public void test08005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08005");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        io.swagger.annotations.Api api19 = null;
        boolean boolean20 = springMvcApiReader2.canReadApi(false, api19);
        java.lang.reflect.Type type21 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type21);
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader2.LOG = logAdapter25;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test08006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08006");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.models.Swagger swagger51 = springMvcApiReader42.swagger;
        io.swagger.annotations.Api api53 = null;
        boolean boolean54 = springMvcApiReader42.canReadApi(false, api53);
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader42.typesToSkip;
        java.lang.annotation.Annotation[] annotationArray56 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList57 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList57, annotationArray56);
        boolean boolean59 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList57);
        boolean boolean60 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        springMvcApiReader64.addTypeToSkippedTypes(type65);
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader64.typesToSkip;
        io.swagger.models.Swagger swagger68 = springMvcApiReader64.swagger;
        springMvcApiReader64.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = springMvcApiReader64.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader64.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet71;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource73 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger74 = springMvcApiReader2.read(springResource73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNull(swagger51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(annotationArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNull(swagger68);
        org.junit.Assert.assertNull(logAdapter70);
        org.junit.Assert.assertNotNull(typeSet71);
    }

    @Test
    public void test08007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08007");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.models.Swagger swagger19 = null;
        springMvcApiReader2.swagger = swagger19;
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = springMvcApiReader27.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader27.parseOperationPath("", strMap34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList37 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList37, typeArray36);
        springMvcApiReader27.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList37);
        java.lang.String[] strArray40 = new java.lang.String[] {};
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap45 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray46 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList47 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList47, securityRequirementArray46);
        io.swagger.models.Operation operation49 = null;
        springMvcApiReader27.updateOperation(strArray40, strArray44, strMap45, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList47, operation49);
        springMvcApiReader27.updateExtensionChain();
        java.lang.Class<?> wildcardClass52 = springMvcApiReader27.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.annotations.Api api54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList55 = springMvcApiReader2.getSecurityRequirements(api54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(securityRequirementArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test08008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08008");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader2.swagger = swagger29;
        io.swagger.models.Operation operation31 = null;
        io.swagger.annotations.ApiOperation apiOperation32 = null;
        springMvcApiReader2.updateTagsForOperation(operation31, apiOperation32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader37.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader37.parseOperationPath("", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass49 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader37.typesToSkip = typeSet51;
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader37.getTypesToSkip();
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type type58 = null;
        springMvcApiReader57.addTypeToSkippedTypes(type58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader57.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader57.typesToSkip;
        springMvcApiReader37.setTypesToSkip(typeSet61);
        springMvcApiReader2.setTypesToSkip(typeSet61);
        java.lang.Class<?> wildcardClass64 = typeSet61.getClass();
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(typeSet34);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test08009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08009");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader2.swagger = swagger27;
        io.swagger.models.Swagger swagger29 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader2.canReadApi(false, api33);
        io.swagger.annotations.Api api35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList36 = springMvcApiReader2.getSecurityRequirements(api35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(swagger29);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test08010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08010");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass30, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader2.parseOperationPath("", strMap46);
        io.swagger.annotations.Api api48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet49 = springMvcApiReader2.extractTags(api48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
    }

    @Test
    public void test08011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08011");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api24 = null;
        boolean boolean25 = springMvcApiReader2.canReadApi(true, api24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet29 = springMvcApiReader2.extractTags(api28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(typeSet27);
    }

    @Test
    public void test08012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08012");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader2.canReadApi(true, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader2.parseOperationPath("/hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader29.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader29.parseOperationPath("", strMap36);
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader29.canReadApi(false, api39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader29.parseOperationPath("hi!", strMap42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.Class<?> wildcardClass47 = springMvcApiReader46.getClass();
        springMvcApiReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader29.parseOperationPath("/hi!", strMap50);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = springMvcApiReader54.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader54.getTypesToSkip();
        springMvcApiReader29.typesToSkip = typeSet56;
        springMvcApiReader2.setTypesToSkip(typeSet56);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/hi!" + "'", str51, "/hi!");
        org.junit.Assert.assertNull(logAdapter55);
        org.junit.Assert.assertNotNull(typeSet56);
    }

    @Test
    public void test08013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08013");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        springMvcApiReader24.addTypeToSkippedTypes(type25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader24.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader24.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader24.parseOperationPath("", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        java.lang.annotation.Annotation[] annotationArray61 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList62 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList62, annotationArray61);
        boolean boolean64 = springMvcApiReader56.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList62);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader24.getParameters((java.lang.reflect.Type) wildcardClass52, (java.util.List<java.lang.annotation.Annotation>) annotationList62);
        springMvcApiReader24.updateExtensionChain();
        io.swagger.annotations.Api api68 = null;
        boolean boolean69 = springMvcApiReader24.canReadApi(false, api68);
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader24.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet70;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(annotationArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNull(logAdapter72);
    }

    @Test
    public void test08014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08014");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("hi!", strMap9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList13 = springMvcApiReader2.getSecurityRequirements(api12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/hi!" + "'", str10, "/hi!");
        org.junit.Assert.assertNotNull(typeSet11);
    }

    @Test
    public void test08015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08015");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        java.lang.annotation.Annotation[] annotationArray21 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList22 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList22, annotationArray21);
        boolean boolean24 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList22);
        io.swagger.models.Swagger swagger25 = null;
        springMvcApiReader16.swagger = swagger25;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        boolean boolean30 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.lang.Class<?> wildcardClass31 = annotationList28.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        springMvcApiReader2.LOG = logAdapter33;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        springMvcApiReader2.LOG = logAdapter35;
        io.swagger.models.Operation operation39 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "", operation39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test08016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08016");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader16.LOG;
        springMvcApiReader16.updateExtensionChain();
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader56.parseOperationPath("", strMap63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList66 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList66, typeArray65);
        springMvcApiReader56.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader16.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        springMvcApiReader2.LOG = logAdapter71;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader2.parseOperationPath("hi!", strMap75);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        springMvcApiReader2.LOG = logAdapter78;
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass81 = typeSet80.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
        org.junit.Assert.assertNull(logAdapter77);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test08017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08017");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = springMvcApiReader9.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader9.parseOperationPath("", strMap16);
        io.swagger.annotations.Api api19 = null;
        boolean boolean20 = springMvcApiReader9.canReadApi(false, api19);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        java.lang.String str23 = springMvcApiReader9.parseOperationPath("hi!", strMap22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.Class<?> wildcardClass27 = springMvcApiReader26.getClass();
        springMvcApiReader9.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader9.parseOperationPath("/hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        java.lang.annotation.Annotation[] annotationArray47 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList48 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList48, annotationArray47);
        boolean boolean50 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList48);
        io.swagger.models.Swagger swagger51 = null;
        springMvcApiReader42.swagger = swagger51;
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        boolean boolean63 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader55.swagger = swagger64;
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        boolean boolean69 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        boolean boolean70 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        boolean boolean71 = springMvcApiReader9.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader9.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet72;
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader2.parseOperationPath("", strMap75);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        springMvcApiReader2.LOG = logAdapter77;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        springMvcApiReader2.LOG = logAdapter79;
        io.swagger.annotations.Api api82 = null;
        boolean boolean83 = springMvcApiReader2.canReadApi(false, api82);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(logAdapter14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/hi!" + "'", str23, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(annotationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test08018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08018");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api9 = null;
        boolean boolean10 = springMvcApiReader2.canReadApi(true, api9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        springMvcApiReader28.addTypeToSkippedTypes(type29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader28.typesToSkip;
        springMvcApiReader13.setTypesToSkip(typeSet31);
        springMvcApiReader2.typesToSkip = typeSet31;
        java.lang.String[] strArray34 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap39 = null;
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        springMvcApiReader42.updateExtensionChain();
        java.lang.String[] strArray59 = new java.lang.String[] { "/hi!" };
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap61 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray62 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList63 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList63, securityRequirementArray62);
        io.swagger.models.Operation operation65 = null;
        springMvcApiReader42.updateOperation(strArray59, strArray60, strMap61, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList63, operation65);
        io.swagger.models.Operation operation67 = null;
        springMvcApiReader2.updateOperation(strArray34, strArray38, strMap39, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList63, operation67);
        io.swagger.models.Swagger swagger69 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet70 = null;
        springMvcApiReader2.typesToSkip = typeSet70;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(securityRequirementArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(swagger69);
    }

    @Test
    public void test08019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08019");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader2.swagger = swagger34;
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type type40 = null;
        springMvcApiReader39.addTypeToSkippedTypes(type40);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet61 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet61, typeArray60);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = springMvcApiReader59.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        java.lang.String str67 = springMvcApiReader59.parseOperationPath("", strMap66);
        io.swagger.annotations.Api api69 = null;
        boolean boolean70 = springMvcApiReader59.canReadApi(false, api69);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        java.lang.String str73 = springMvcApiReader59.parseOperationPath("hi!", strMap72);
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        java.lang.Class<?> wildcardClass77 = springMvcApiReader76.getClass();
        springMvcApiReader59.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        springMvcApiReader44.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader44.getTypesToSkip();
        springMvcApiReader39.typesToSkip = typeSet80;
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader39.getTypesToSkip();
        io.swagger.annotations.Api api84 = null;
        boolean boolean85 = springMvcApiReader39.canReadApi(false, api84);
        java.util.Set<java.lang.reflect.Type> typeSet86 = springMvcApiReader39.typesToSkip;
        io.swagger.models.Swagger swagger87 = springMvcApiReader39.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter88 = null;
        springMvcApiReader39.LOG = logAdapter88;
        java.lang.reflect.Type type90 = null;
        java.lang.annotation.Annotation[] annotationArray91 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList92 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList92, annotationArray91);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList94 = springMvcApiReader39.getParameters(type90, (java.util.List<java.lang.annotation.Annotation>) annotationList92);
        java.util.Map<java.lang.String, java.lang.String> strMap95 = null;
        io.swagger.models.Operation operation96 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList94, strMap95, operation96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(logAdapter64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/hi!" + "'", str73, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNull(swagger87);
        org.junit.Assert.assertNotNull(annotationArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(parameterList94);
    }

    @Test
    public void test08020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08020");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(logAdapter36);
    }

    @Test
    public void test08021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08021");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList34 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList34, typeArray33);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList34);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader24.updateOperation(strArray37, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.String[] strArray54 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader58.updateOperation(strArray71, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray37, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation82);
        io.swagger.models.Swagger swagger84 = null;
        springMvcApiReader2.swagger = swagger84;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet88 = null;
        springMvcApiReader2.typesToSkip = typeSet88;
        java.util.Map<java.lang.String, java.lang.String> strMap91 = null;
        java.lang.String str92 = springMvcApiReader2.parseOperationPath("/hi!", strMap91);
        io.swagger.models.Swagger swagger93 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger94 = null;
        springMvcApiReader2.swagger = swagger94;
        io.swagger.models.Operation operation96 = null;
        io.swagger.annotations.ApiResponses apiResponses97 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation96, apiResponses97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(logAdapter86);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "/hi!" + "'", str92, "/hi!");
        org.junit.Assert.assertNull(swagger93);
    }

    @Test
    public void test08022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08022");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList34 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList34, typeArray33);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList34);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader24.updateOperation(strArray37, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.String[] strArray54 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader58.updateOperation(strArray71, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray37, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation82);
        io.swagger.models.Swagger swagger84 = null;
        springMvcApiReader2.swagger = swagger84;
        io.swagger.models.Operation operation86 = null;
        io.swagger.annotations.ApiOperation apiOperation87 = null;
        springMvcApiReader2.updateTagsForOperation(operation86, apiOperation87);
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet90 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation91 = null;
        io.swagger.annotations.ApiOperation apiOperation92 = null;
        springMvcApiReader2.updateTagsForOperation(operation91, apiOperation92);
        io.swagger.annotations.Api api94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet95 = springMvcApiReader2.extractTags(api94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(typeSet90);
    }

    @Test
    public void test08023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08023");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        java.lang.String str15 = springMvcApiReader2.parseOperationPath("hi!", strMap14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type type19 = null;
        springMvcApiReader18.addTypeToSkippedTypes(type19);
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader18.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader18.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger25 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger26 = null;
        springMvcApiReader2.swagger = swagger26;
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiResponses apiResponses30 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation29, apiResponses30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "/hi!" + "'", str15, "/hi!");
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNull(swagger25);
        org.junit.Assert.assertNotNull(typeSet28);
    }

    @Test
    public void test08024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08024");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        springMvcApiReader2.LOG = logAdapter43;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource45 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger46 = springMvcApiReader2.read(springResource45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeSet42);
    }

    @Test
    public void test08025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08025");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        java.lang.String str11 = springMvcApiReader2.parseOperationPath("", strMap10);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        java.lang.annotation.Annotation[] annotationArray19 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList20 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList20, annotationArray19);
        boolean boolean22 = springMvcApiReader14.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader14.typesToSkip;
        springMvcApiReader14.updateExtensionChain();
        io.swagger.models.Operation operation25 = null;
        io.swagger.annotations.ApiOperation apiOperation26 = null;
        springMvcApiReader14.updateTagsForOperation(operation25, apiOperation26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        springMvcApiReader14.LOG = logAdapter28;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader14.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader14.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet31;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger34 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList36 = springMvcApiReader2.getSecurityRequirements(api35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(annotationArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNull(swagger34);
    }

    @Test
    public void test08026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08026");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Operation operation3 = null;
        io.swagger.annotations.ApiOperation apiOperation4 = null;
        springMvcApiReader2.updateTagsForOperation(operation3, apiOperation4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeSet7);
    }

    @Test
    public void test08027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08027");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter3 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger4 = null;
        springMvcApiReader2.swagger = swagger4;
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        java.lang.String str8 = springMvcApiReader2.parseOperationPath("hi!", strMap7);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.annotations.Api api11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet12 = springMvcApiReader2.extractTags(api11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logAdapter3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "/hi!" + "'", str8, "/hi!");
    }

    @Test
    public void test08028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08028");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader37.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader37.parseOperationPath("", strMap44);
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader37.canReadApi(false, api47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader37.parseOperationPath("hi!", strMap50);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.Class<?> wildcardClass55 = springMvcApiReader54.getClass();
        springMvcApiReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass55);
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass55);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = springMvcApiReader22.LOG;
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet63 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet63, typeArray62);
        springMvcApiReader61.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet63);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = springMvcApiReader61.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader61.parseOperationPath("", strMap68);
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList71 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList71, typeArray70);
        springMvcApiReader61.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        springMvcApiReader22.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = null;
        java.lang.String str78 = springMvcApiReader2.parseOperationPath("", strMap77);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/hi!" + "'", str51, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNull(logAdapter58);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(logAdapter66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
    }

    @Test
    public void test08029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08029");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(true, api29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        springMvcApiReader2.LOG = logAdapter32;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeSet31);
    }

    @Test
    public void test08030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08030");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader2.LOG = logAdapter23;
        io.swagger.models.Operation operation25 = null;
        io.swagger.annotations.ApiOperation apiOperation26 = null;
        springMvcApiReader2.updateTagsForOperation(operation25, apiOperation26);
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.typesToSkip;
        io.swagger.models.parameters.Parameter[] parameterArray29 = new io.swagger.models.parameters.Parameter[] {};
        java.util.ArrayList<io.swagger.models.parameters.Parameter> parameterList30 = new java.util.ArrayList<io.swagger.models.parameters.Parameter>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.parameters.Parameter>) parameterList30, parameterArray29);
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        io.swagger.models.Operation operation33 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters((java.util.List<io.swagger.models.parameters.Parameter>) parameterList30, strMap32, operation33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(parameterArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test08031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08031");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader27.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader27.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet29;
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader2.canReadApi(true, api32);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNull(logAdapter28);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test08032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08032");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader31.swagger = swagger40;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray42);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray42);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger47 = springMvcApiReader2.swagger;
        java.lang.reflect.Method method48 = null;
        io.swagger.models.Operation operation49 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method48, operation49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(typeSet45);
        org.junit.Assert.assertNull(swagger47);
    }

    @Test
    public void test08033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08033");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = springMvcApiReader9.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader9.parseOperationPath("", strMap16);
        io.swagger.annotations.Api api19 = null;
        boolean boolean20 = springMvcApiReader9.canReadApi(false, api19);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        java.lang.String str23 = springMvcApiReader9.parseOperationPath("hi!", strMap22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.Class<?> wildcardClass27 = springMvcApiReader26.getClass();
        springMvcApiReader9.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader9.parseOperationPath("/hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        java.lang.annotation.Annotation[] annotationArray47 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList48 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList48, annotationArray47);
        boolean boolean50 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList48);
        io.swagger.models.Swagger swagger51 = null;
        springMvcApiReader42.swagger = swagger51;
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        boolean boolean63 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader55.swagger = swagger64;
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        boolean boolean69 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        boolean boolean70 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        boolean boolean71 = springMvcApiReader9.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader9.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet72;
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader2.parseOperationPath("", strMap75);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        springMvcApiReader2.LOG = logAdapter77;
        java.util.Map<java.lang.String, java.lang.String> strMap80 = null;
        java.lang.String str81 = springMvcApiReader2.parseOperationPath("", strMap80);
        java.util.Set<java.lang.reflect.Type> typeSet82 = null;
        springMvcApiReader2.setTypesToSkip(typeSet82);
        java.util.Set<java.lang.reflect.Type> typeSet84 = null;
        springMvcApiReader2.typesToSkip = typeSet84;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = null;
        springMvcApiReader2.LOG = logAdapter86;
        io.swagger.models.Operation operation90 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "/hi!", operation90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(logAdapter14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/hi!" + "'", str23, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(annotationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
    }

    @Test
    public void test08034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08034");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(false, api8);
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("hi!", strMap16);
        io.swagger.annotations.Api api19 = null;
        boolean boolean20 = springMvcApiReader2.canReadApi(true, api19);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test08035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08035");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(false, api8);
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        java.lang.annotation.Annotation[] annotationArray21 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList22 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList22, annotationArray21);
        boolean boolean24 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList22);
        io.swagger.models.Swagger swagger25 = null;
        springMvcApiReader16.swagger = swagger25;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        boolean boolean30 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.lang.String[] strArray31 = null;
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList44 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList44, typeArray43);
        springMvcApiReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList44);
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap52 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray53 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList54 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList54, securityRequirementArray53);
        io.swagger.models.Operation operation56 = null;
        springMvcApiReader34.updateOperation(strArray47, strArray51, strMap52, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList54, operation56);
        io.swagger.models.Operation operation58 = null;
        java.lang.String[] strArray59 = springMvcApiReader16.updateOperationProduces(strArray31, strArray51, operation58);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader62.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader62.parseOperationPath("", strMap69);
        java.lang.reflect.Type[] typeArray71 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList72 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList72, typeArray71);
        springMvcApiReader62.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap80 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray81 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList82 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList82, securityRequirementArray81);
        io.swagger.models.Operation operation84 = null;
        springMvcApiReader62.updateOperation(strArray75, strArray79, strMap80, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList82, operation84);
        io.swagger.models.Operation operation86 = null;
        java.lang.String[] strArray87 = springMvcApiReader2.updateOperationProduces(strArray31, strArray75, operation86);
        io.swagger.models.Operation operation88 = null;
        io.swagger.annotations.ApiOperation apiOperation89 = null;
        springMvcApiReader2.updateTagsForOperation(operation88, apiOperation89);
        io.swagger.annotations.Api api91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet92 = springMvcApiReader2.extractTags(api91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(securityRequirementArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(logAdapter67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(securityRequirementArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strArray87);
    }

    @Test
    public void test08036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08036");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray7 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap8 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray7);
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        java.lang.String str11 = springMvcApiReader2.parseOperationPath("", strMap10);
        java.util.Set<java.lang.reflect.Type> typeSet12 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(typeSet12);
    }

    @Test
    public void test08037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08037");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger9 = null;
        springMvcApiReader2.swagger = swagger9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader13.LOG;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader13.canReadApi(true, api20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader24.typesToSkip;
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader24.swagger = swagger34;
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        springMvcApiReader24.updateTagsForOperation(operation36, apiOperation37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        springMvcApiReader24.LOG = logAdapter39;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader24.parseOperationPath("/hi!", strMap42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        boolean boolean54 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList52);
        io.swagger.models.Swagger swagger55 = null;
        springMvcApiReader46.swagger = swagger55;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray57);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap59 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray57);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap60 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray57);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray57);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNull(strMap61);
    }

    @Test
    public void test08038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08038");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = springMvcApiReader32.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader32.parseOperationPath("", strMap39);
        io.swagger.annotations.Api api42 = null;
        boolean boolean43 = springMvcApiReader32.canReadApi(false, api42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader32.parseOperationPath("hi!", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.Class<?> wildcardClass50 = springMvcApiReader49.getClass();
        springMvcApiReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader17.LOG;
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader56.parseOperationPath("", strMap63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList66 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList66, typeArray65);
        springMvcApiReader56.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader17.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader2.parseOperationPath("", strMap73);
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader2.swagger = swagger75;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        springMvcApiReader2.LOG = logAdapter77;
        io.swagger.models.Operation operation79 = null;
        io.swagger.annotations.ApiOperation apiOperation80 = null;
        springMvcApiReader2.updateTagsForOperation(operation79, apiOperation80);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(logAdapter37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(logAdapter71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
    }

    @Test
    public void test08039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08039");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.models.Operation operation27 = null;
        io.swagger.annotations.ApiOperation apiOperation28 = null;
        springMvcApiReader2.updateTagsForOperation(operation27, apiOperation28);
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        io.swagger.annotations.Api api36 = null;
        boolean boolean37 = springMvcApiReader2.canReadApi(true, api36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api40 = null;
        boolean boolean41 = springMvcApiReader2.canReadApi(true, api40);
        io.swagger.models.Swagger swagger42 = null;
        springMvcApiReader2.swagger = swagger42;
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test08040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08040");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation57 = null;
        io.swagger.annotations.ApiOperation apiOperation58 = null;
        springMvcApiReader2.updateTagsForOperation(operation57, apiOperation58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet61 = null;
        springMvcApiReader2.setTypesToSkip(typeSet61);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap63 = null;
        io.swagger.annotations.Api api64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap65 = springMvcApiReader2.updateTagsForApi(strMap63, api64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNull(logAdapter60);
    }

    @Test
    public void test08041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08041");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource55 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger56 = springMvcApiReader2.read(springResource55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertNull(logAdapter54);
    }

    @Test
    public void test08042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08042");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        boolean boolean16 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        springMvcApiReader21.addTypeToSkippedTypes(type22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader21.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(typeSet27);
    }

    @Test
    public void test08043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08043");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        io.swagger.annotations.Api api14 = null;
        boolean boolean15 = springMvcApiReader2.canReadApi(false, api14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader18.canReadApi(false, api28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader18.parseOperationPath("hi!", strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader18.parseOperationPath("hi!", strMap34);
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        springMvcApiReader18.updateTagsForOperation(operation36, apiOperation37);
        java.lang.Class<?> wildcardClass39 = springMvcApiReader18.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation42 = null;
        io.swagger.annotations.ApiOperation apiOperation43 = null;
        springMvcApiReader2.updateTagsForOperation(operation42, apiOperation43);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader48.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader48.parseOperationPath("", strMap55);
        io.swagger.annotations.Api api58 = null;
        boolean boolean59 = springMvcApiReader48.canReadApi(false, api58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        java.lang.String str62 = springMvcApiReader48.parseOperationPath("hi!", strMap61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.Class<?> wildcardClass66 = springMvcApiReader65.getClass();
        springMvcApiReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        io.swagger.models.Swagger swagger68 = null;
        springMvcApiReader48.swagger = swagger68;
        io.swagger.models.Swagger swagger70 = springMvcApiReader48.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        springMvcApiReader48.LOG = logAdapter71;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        springMvcApiReader48.LOG = logAdapter73;
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader48.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet75;
        io.swagger.models.Swagger swagger77 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation78 = null;
        io.swagger.annotations.ApiOperation apiOperation79 = null;
        springMvcApiReader2.updateTagsForOperation(operation78, apiOperation79);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "/hi!" + "'", str62, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNull(swagger70);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNull(swagger77);
    }

    @Test
    public void test08044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08044");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader2.swagger = swagger29;
        io.swagger.models.Operation operation31 = null;
        io.swagger.annotations.ApiOperation apiOperation32 = null;
        springMvcApiReader2.updateTagsForOperation(operation31, apiOperation32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader2.parseOperationPath("", strMap36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        io.swagger.annotations.Api api51 = null;
        boolean boolean52 = springMvcApiReader41.canReadApi(false, api51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type type56 = null;
        springMvcApiReader55.addTypeToSkippedTypes(type56);
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader55.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader55.typesToSkip;
        springMvcApiReader41.setTypesToSkip(typeSet59);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        springMvcApiReader41.LOG = logAdapter61;
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader41.typesToSkip;
        io.swagger.models.Operation operation64 = null;
        io.swagger.annotations.ApiOperation apiOperation65 = null;
        springMvcApiReader41.updateTagsForOperation(operation64, apiOperation65);
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader41.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader41.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet68;
        io.swagger.models.Swagger swagger70 = null;
        springMvcApiReader2.swagger = swagger70;
        io.swagger.annotations.Api api73 = null;
        boolean boolean74 = springMvcApiReader2.canReadApi(false, api73);
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(typeSet34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(typeSet38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test08045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08045");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(true, api17);
        io.swagger.models.Operation operation19 = null;
        io.swagger.annotations.ApiOperation apiOperation20 = null;
        springMvcApiReader2.updateTagsForOperation(operation19, apiOperation20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api24 = null;
        boolean boolean25 = springMvcApiReader2.canReadApi(false, api24);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader2.canReadApi(false, api28);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test08046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08046");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = springMvcApiReader25.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader25.parseOperationPath("", strMap32);
        io.swagger.annotations.Api api35 = null;
        boolean boolean36 = springMvcApiReader25.canReadApi(false, api35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader25.parseOperationPath("hi!", strMap38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.Class<?> wildcardClass43 = springMvcApiReader42.getClass();
        springMvcApiReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        springMvcApiReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        springMvcApiReader10.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader10.LOG;
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = springMvcApiReader50.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader50.parseOperationPath("", strMap57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        springMvcApiReader50.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        springMvcApiReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        springMvcApiReader2.LOG = logAdapter65;
        io.swagger.models.Operation operation67 = null;
        io.swagger.annotations.ApiResponses apiResponses68 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation67, apiResponses68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(logAdapter30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/hi!" + "'", str39, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(logAdapter55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test08047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08047");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader58.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet63;
        io.swagger.models.Swagger swagger65 = null;
        springMvcApiReader2.swagger = swagger65;
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader2.parseOperationPath("hi!", strMap68);
        io.swagger.models.Operation operation70 = null;
        io.swagger.annotations.ApiOperation apiOperation71 = null;
        springMvcApiReader2.updateTagsForOperation(operation70, apiOperation71);
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        java.lang.reflect.Type type77 = null;
        springMvcApiReader76.addTypeToSkippedTypes(type77);
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader76.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader76.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = springMvcApiReader76.LOG;
        springMvcApiReader76.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet83 = springMvcApiReader76.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader76.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet84);
        io.swagger.annotations.Api api87 = null;
        boolean boolean88 = springMvcApiReader2.canReadApi(true, api87);
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap90 = null;
        io.swagger.annotations.Api api91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap92 = springMvcApiReader2.updateTagsForApi(strMap90, api91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNull(logAdapter81);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(typeSet89);
    }

    @Test
    public void test08048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08048");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass39 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test08049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08049");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        springMvcApiReader2.LOG = logAdapter24;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass27 = typeSet26.getClass();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test08050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08050");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("/hi!", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        boolean boolean21 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList19);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader13.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader13.swagger = swagger23;
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader27.LOG;
        springMvcApiReader27.updateExtensionChain();
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet69 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet69, typeArray68);
        springMvcApiReader67.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet69);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = springMvcApiReader67.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        java.lang.String str75 = springMvcApiReader67.parseOperationPath("", strMap74);
        java.lang.reflect.Type[] typeArray76 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList77 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList77, typeArray76);
        springMvcApiReader67.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        springMvcApiReader27.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        springMvcApiReader13.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = null;
        springMvcApiReader13.LOG = logAdapter82;
        java.util.Map<java.lang.String, java.lang.String> strMap85 = null;
        java.lang.String str86 = springMvcApiReader13.parseOperationPath("/hi!", strMap85);
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader13.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet88 = springMvcApiReader13.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet88;
        io.swagger.models.Swagger swagger90 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/hi!" + "'", str10, "/hi!");
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(logAdapter72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "/hi!" + "'", str86, "/hi!");
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNull(swagger90);
    }

    @Test
    public void test08051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08051");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = null;
        springMvcApiReader2.typesToSkip = typeSet7;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        springMvcApiReader12.addTypeToSkippedTypes(type13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader12.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet15;
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader35.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader35.parseOperationPath("", strMap42);
        io.swagger.annotations.Api api45 = null;
        boolean boolean46 = springMvcApiReader35.canReadApi(false, api45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader35.parseOperationPath("hi!", strMap48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.Class<?> wildcardClass53 = springMvcApiReader52.getClass();
        springMvcApiReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        springMvcApiReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader20.LOG;
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet61 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet61, typeArray60);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = springMvcApiReader59.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        java.lang.String str67 = springMvcApiReader59.parseOperationPath("", strMap66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList69 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList69, typeArray68);
        springMvcApiReader59.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        springMvcApiReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        springMvcApiReader2.LOG = logAdapter74;
        io.swagger.models.Swagger swagger76 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        java.lang.String str79 = springMvcApiReader2.parseOperationPath("/hi!", strMap78);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(typeSet9);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/hi!" + "'", str49, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNull(logAdapter56);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(logAdapter64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(swagger76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "/hi!" + "'", str79, "/hi!");
    }

    @Test
    public void test08052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08052");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader39.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader39.parseOperationPath("", strMap46);
        io.swagger.annotations.Api api49 = null;
        boolean boolean50 = springMvcApiReader39.canReadApi(false, api49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader39.parseOperationPath("hi!", strMap52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.Class<?> wildcardClass57 = springMvcApiReader56.getClass();
        springMvcApiReader39.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader24.LOG;
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = springMvcApiReader63.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader63.parseOperationPath("", strMap70);
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList73 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList73, typeArray72);
        springMvcApiReader63.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        springMvcApiReader2.LOG = logAdapter78;
        java.lang.reflect.Method method80 = null;
        io.swagger.models.Operation operation81 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method80, operation81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "/hi!" + "'", str53, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(logAdapter68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test08053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08053");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api24 = null;
        boolean boolean25 = springMvcApiReader2.canReadApi(true, api24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        springMvcApiReader28.addTypeToSkippedTypes(type29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet32;
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api36 = null;
        boolean boolean37 = springMvcApiReader2.canReadApi(false, api36);
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader2.canReadApi(false, api39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader2.parseOperationPath("", strMap42);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(typeSet45);
    }

    @Test
    public void test08054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08054");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        springMvcApiReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader57.typesToSkip;
        springMvcApiReader57.updateExtensionChain();
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.Class<?> wildcardClass67 = springMvcApiReader66.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        io.swagger.models.Swagger swagger70 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader2.canReadApi(false, api72);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        springMvcApiReader2.LOG = logAdapter74;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNull(swagger70);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test08055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08055");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        springMvcApiReader32.addTypeToSkippedTypes(type33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader32.typesToSkip;
        springMvcApiReader17.setTypesToSkip(typeSet35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader17.getTypesToSkip();
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader17.canReadApi(true, api39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        springMvcApiReader43.addTypeToSkippedTypes(type44);
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader43.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader43.getTypesToSkip();
        springMvcApiReader17.typesToSkip = typeSet47;
        springMvcApiReader2.typesToSkip = typeSet47;
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader2.updateTagsForOperation(operation50, apiOperation51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader55.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader55.parseOperationPath("", strMap62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList65 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList65, typeArray64);
        springMvcApiReader55.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList65);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList65);
        io.swagger.models.Swagger swagger69 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList72 = springMvcApiReader2.getSecurityRequirements(api71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(swagger69);
        org.junit.Assert.assertNotNull(typeSet70);
    }

    @Test
    public void test08056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08056");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        boolean boolean19 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader11.swagger = swagger20;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        boolean boolean38 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        boolean boolean39 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader11.LOG;
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader43.parseOperationPath("/hi!", strMap45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader43.getTypesToSkip();
        springMvcApiReader11.setTypesToSkip(typeSet47);
        springMvcApiReader2.typesToSkip = typeSet47;
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader2.updateTagsForOperation(operation50, apiOperation51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger54 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        springMvcApiReader2.LOG = logAdapter55;
        io.swagger.annotations.Api api58 = null;
        boolean boolean59 = springMvcApiReader2.canReadApi(false, api58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        springMvcApiReader2.LOG = logAdapter61;
        java.lang.Class<?> wildcardClass63 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNull(swagger54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test08057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08057");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.Class<?> wildcardClass12 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.Class<?> wildcardClass17 = springMvcApiReader16.getClass();
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader26.typesToSkip;
        io.swagger.models.Swagger swagger32 = springMvcApiReader26.swagger;
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader26.updateTagsForOperation(operation33, apiOperation34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader26.getTypesToSkip();
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        boolean boolean47 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = springMvcApiReader50.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader50.parseOperationPath("", strMap57);
        io.swagger.annotations.Api api60 = null;
        boolean boolean61 = springMvcApiReader50.canReadApi(false, api60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader50.parseOperationPath("hi!", strMap63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.Class<?> wildcardClass68 = springMvcApiReader67.getClass();
        springMvcApiReader50.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader50.parseOperationPath("/hi!", strMap71);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader50.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader39.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap76 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap80 = null;
        java.lang.String str81 = springMvcApiReader2.parseOperationPath("/hi!", strMap80);
        springMvcApiReader2.updateExtensionChain();
        java.lang.reflect.Method method83 = null;
        io.swagger.models.Operation operation84 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method83, operation84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(logAdapter55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "/hi!" + "'", str72, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(logAdapter78);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "/hi!" + "'", str81, "/hi!");
    }

    @Test
    public void test08058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08058");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter3 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger4 = null;
        springMvcApiReader2.swagger = swagger4;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        springMvcApiReader10.addTypeToSkippedTypes(type11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader10.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader10.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader10.typesToSkip;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList28 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList28, typeArray27);
        springMvcApiReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList28);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader33.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader33.parseOperationPath("", strMap40);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.Class<?> wildcardClass45 = springMvcApiReader44.getClass();
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] { wildcardClass45 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader33.typesToSkip = typeSet47;
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader33.getTypesToSkip();
        springMvcApiReader18.setTypesToSkip(typeSet50);
        springMvcApiReader10.setTypesToSkip(typeSet50);
        springMvcApiReader2.setTypesToSkip(typeSet50);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader2.canReadApi(false, api55);
        org.junit.Assert.assertNull(logAdapter3);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test08059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08059");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        io.swagger.models.Swagger swagger25 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader28.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader28.parseOperationPath("", strMap35);
        io.swagger.annotations.Api api38 = null;
        boolean boolean39 = springMvcApiReader28.canReadApi(false, api38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader28.parseOperationPath("hi!", strMap41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.Class<?> wildcardClass46 = springMvcApiReader45.getClass();
        springMvcApiReader28.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Swagger swagger48 = null;
        springMvcApiReader28.swagger = swagger48;
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader28.updateTagsForOperation(operation50, apiOperation51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader28.getTypesToSkip();
        java.lang.Class<?> wildcardClass54 = springMvcApiReader28.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        io.swagger.models.Swagger swagger56 = springMvcApiReader2.swagger;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass57 = swagger56.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNull(swagger25);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/hi!" + "'", str42, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNull(swagger56);
    }

    @Test
    public void test08060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08060");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(false, api26);
        java.lang.reflect.Type type28 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader32.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet37;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type type57 = null;
        springMvcApiReader56.addTypeToSkippedTypes(type57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader56.typesToSkip;
        springMvcApiReader41.setTypesToSkip(typeSet59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        java.lang.annotation.Annotation[] annotationArray68 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList69 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList69, annotationArray68);
        boolean boolean71 = springMvcApiReader63.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList69);
        io.swagger.models.Swagger swagger72 = null;
        springMvcApiReader63.swagger = swagger72;
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader63.getTypesToSkip();
        springMvcApiReader41.setTypesToSkip(typeSet74);
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader41.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet76;
        io.swagger.models.Operation operation78 = null;
        io.swagger.annotations.ApiOperation apiOperation79 = null;
        springMvcApiReader2.updateTagsForOperation(operation78, apiOperation79);
        io.swagger.annotations.Api api81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList82 = springMvcApiReader2.getSecurityRequirements(api81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(annotationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet76);
    }

    @Test
    public void test08061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08061");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray32);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        springMvcApiReader2.LOG = logAdapter34;
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        springMvcApiReader2.updateTagsForOperation(operation36, apiOperation37);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        java.lang.annotation.Annotation[] annotationArray47 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList48 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList48, annotationArray47);
        boolean boolean50 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList48);
        io.swagger.models.Swagger swagger51 = null;
        springMvcApiReader42.swagger = swagger51;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray53 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray53);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        io.swagger.models.Swagger swagger62 = springMvcApiReader57.swagger;
        io.swagger.models.Swagger swagger63 = springMvcApiReader57.swagger;
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        boolean boolean74 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        boolean boolean75 = springMvcApiReader57.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        boolean boolean76 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        boolean boolean77 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(annotationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(swagger62);
        org.junit.Assert.assertNull(swagger63);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test08062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08062");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader2.parseOperationPath("hi!", strMap42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader53.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type type62 = null;
        springMvcApiReader61.addTypeToSkippedTypes(type62);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader61.typesToSkip;
        springMvcApiReader46.setTypesToSkip(typeSet64);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader46.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet66);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader2.parseOperationPath("", strMap69);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNull(logAdapter71);
    }

    @Test
    public void test08063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08063");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        io.swagger.models.Operation operation15 = null;
        io.swagger.annotations.ApiOperation apiOperation16 = null;
        springMvcApiReader2.updateTagsForOperation(operation15, apiOperation16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type18);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader2.swagger = swagger20;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = springMvcApiReader25.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader25.parseOperationPath("hi!", strMap32);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        springMvcApiReader25.LOG = logAdapter34;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList48 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList48, typeArray47);
        springMvcApiReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap56 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray57 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList58 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList58, securityRequirementArray57);
        io.swagger.models.Operation operation60 = null;
        springMvcApiReader38.updateOperation(strArray51, strArray55, strMap56, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList58, operation60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader38.parseOperationPath("", strMap63);
        springMvcApiReader38.updateExtensionChain();
        io.swagger.models.Swagger swagger66 = null;
        springMvcApiReader38.swagger = swagger66;
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader38.typesToSkip;
        io.swagger.models.Swagger swagger69 = null;
        springMvcApiReader38.swagger = swagger69;
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader38.canReadApi(false, api72);
        java.lang.Class<?> wildcardClass74 = springMvcApiReader38.getClass();
        springMvcApiReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap77 = null;
        io.swagger.annotations.Api api78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap79 = springMvcApiReader2.updateTagsForApi(strMap77, api78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(logAdapter30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/hi!" + "'", str33, "/hi!");
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(securityRequirementArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test08064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08064");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader2.canReadApi(true, api28);
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader2.canReadApi(false, api34);
        io.swagger.annotations.ApiOperation apiOperation36 = null;
        io.swagger.models.Operation operation37 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation36, operation37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(logAdapter32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test08065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08065");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type type27 = null;
        springMvcApiReader26.addTypeToSkippedTypes(type27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader26.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader26.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        java.lang.Class<?> wildcardClass47 = typeSet42.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNull(logAdapter49);
        org.junit.Assert.assertNull(logAdapter50);
    }

    @Test
    public void test08066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08066");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter3 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet4 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation5 = null;
        io.swagger.annotations.ApiOperation apiOperation6 = null;
        springMvcApiReader2.updateTagsForOperation(operation5, apiOperation6);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader13.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        java.lang.String str21 = springMvcApiReader13.parseOperationPath("", strMap20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.Class<?> wildcardClass25 = springMvcApiReader24.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass25 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader13.typesToSkip = typeSet27;
        io.swagger.models.Operation operation30 = null;
        io.swagger.annotations.ApiOperation apiOperation31 = null;
        springMvcApiReader13.updateTagsForOperation(operation30, apiOperation31);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader35.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader35.parseOperationPath("", strMap42);
        io.swagger.annotations.Api api45 = null;
        boolean boolean46 = springMvcApiReader35.canReadApi(false, api45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader35.parseOperationPath("hi!", strMap48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet54 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet54, typeArray53);
        springMvcApiReader52.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet54);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet61 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet61, typeArray60);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet61);
        springMvcApiReader52.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet61);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet69 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet69, typeArray68);
        springMvcApiReader67.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet69);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = springMvcApiReader67.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        java.lang.String str75 = springMvcApiReader67.parseOperationPath("", strMap74);
        io.swagger.annotations.Api api77 = null;
        boolean boolean78 = springMvcApiReader67.canReadApi(false, api77);
        java.util.Map<java.lang.String, java.lang.String> strMap80 = null;
        java.lang.String str81 = springMvcApiReader67.parseOperationPath("hi!", strMap80);
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader84 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger82, logAdapter83);
        java.lang.Class<?> wildcardClass85 = springMvcApiReader84.getClass();
        springMvcApiReader67.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass85);
        springMvcApiReader52.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass85);
        springMvcApiReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass85);
        java.lang.annotation.Annotation[] annotationArray89 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList90 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList90, annotationArray89);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList92 = springMvcApiReader13.getParameters((java.lang.reflect.Type) wildcardClass85, (java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean93 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        java.lang.Class<?> wildcardClass94 = annotationList90.getClass();
        org.junit.Assert.assertNull(logAdapter3);
        org.junit.Assert.assertNotNull(typeSet4);
        org.junit.Assert.assertNull(logAdapter8);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/hi!" + "'", str49, "/hi!");
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(logAdapter72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "/hi!" + "'", str81, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(annotationArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(parameterList92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test08067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08067");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        io.swagger.models.Swagger swagger15 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation16 = null;
        io.swagger.annotations.ApiOperation apiOperation17 = null;
        springMvcApiReader2.updateTagsForOperation(operation16, apiOperation17);
        springMvcApiReader2.updateExtensionChain();
        java.util.List<java.lang.reflect.Type> typeList20 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.setTypesToSkip(typeList20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(swagger15);
    }

    @Test
    public void test08068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08068");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("", strMap12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.typesToSkip;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        io.swagger.annotations.Api api48 = null;
        boolean boolean49 = springMvcApiReader38.canReadApi(false, api48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader38.parseOperationPath("hi!", strMap51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.Class<?> wildcardClass56 = springMvcApiReader55.getClass();
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        springMvcApiReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader23.LOG;
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader62.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader62.parseOperationPath("", strMap69);
        java.lang.reflect.Type[] typeArray71 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList72 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList72, typeArray71);
        springMvcApiReader62.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        springMvcApiReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        springMvcApiReader16.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        springMvcApiReader2.LOG = logAdapter78;
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation81 = null;
        io.swagger.annotations.ApiOperation apiOperation82 = null;
        springMvcApiReader2.updateTagsForOperation(operation81, apiOperation82);
        io.swagger.annotations.Api api85 = null;
        boolean boolean86 = springMvcApiReader2.canReadApi(true, api85);
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(logAdapter67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(typeSet87);
    }

    @Test
    public void test08069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08069");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api24 = null;
        boolean boolean25 = springMvcApiReader2.canReadApi(true, api24);
        java.lang.String[] strArray26 = null;
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader29.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader29.parseOperationPath("", strMap36);
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader29.canReadApi(false, api39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader29.parseOperationPath("hi!", strMap42);
        springMvcApiReader29.updateExtensionChain();
        java.lang.String[] strArray46 = new java.lang.String[] { "/hi!" };
        java.lang.String[] strArray47 = new java.lang.String[] {};
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap48 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray49 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList50 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList50, securityRequirementArray49);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader29.updateOperation(strArray46, strArray47, strMap48, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList50, operation52);
        io.swagger.models.Operation operation54 = null;
        java.lang.String[] strArray55 = springMvcApiReader2.updateOperationProduces(strArray26, strArray47, operation54);
        io.swagger.annotations.Api api57 = null;
        boolean boolean58 = springMvcApiReader2.canReadApi(false, api57);
        io.swagger.models.Swagger swagger59 = null;
        springMvcApiReader2.swagger = swagger59;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(securityRequirementArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test08070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08070");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader2.LOG = logAdapter23;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        springMvcApiReader2.updateTagsForOperation(operation26, apiOperation27);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet25);
    }

    @Test
    public void test08071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08071");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        io.swagger.annotations.Api api14 = null;
        boolean boolean15 = springMvcApiReader2.canReadApi(false, api14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader18.canReadApi(false, api28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader18.parseOperationPath("hi!", strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader18.parseOperationPath("hi!", strMap34);
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        springMvcApiReader18.updateTagsForOperation(operation36, apiOperation37);
        java.lang.Class<?> wildcardClass39 = springMvcApiReader18.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger42 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type type46 = null;
        springMvcApiReader45.addTypeToSkippedTypes(type46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader45.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader45.getTypesToSkip();
        springMvcApiReader45.updateExtensionChain();
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader53.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = springMvcApiReader53.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader53.parseOperationPath("", strMap60);
        io.swagger.annotations.Api api63 = null;
        boolean boolean64 = springMvcApiReader53.canReadApi(false, api63);
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        java.lang.String str67 = springMvcApiReader53.parseOperationPath("", strMap66);
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader53.getTypesToSkip();
        springMvcApiReader45.setTypesToSkip(typeSet68);
        springMvcApiReader2.typesToSkip = typeSet68;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        springMvcApiReader2.LOG = logAdapter71;
        io.swagger.models.Swagger swagger73 = null;
        springMvcApiReader2.swagger = swagger73;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNull(swagger42);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(logAdapter58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNull(logAdapter75);
    }

    @Test
    public void test08072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08072");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader24.canReadApi(false, api34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader24.parseOperationPath("hi!", strMap37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.Class<?> wildcardClass42 = springMvcApiReader41.getClass();
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader24.parseOperationPath("/hi!", strMap45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray47);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray47);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet54 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet54, typeArray53);
        springMvcApiReader52.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet54);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader52.typesToSkip;
        springMvcApiReader52.updateExtensionChain();
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.Class<?> wildcardClass62 = springMvcApiReader61.getClass();
        springMvcApiReader52.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.Class<?> wildcardClass67 = springMvcApiReader66.getClass();
        java.lang.annotation.Annotation[] annotationArray68 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList69 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList69, annotationArray68);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList71 = springMvcApiReader52.getParameters((java.lang.reflect.Type) wildcardClass67, (java.util.List<java.lang.annotation.Annotation>) annotationList69);
        boolean boolean72 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList69);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader2.parseOperationPath("", strMap75);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource77 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger78 = springMvcApiReader2.read(springResource77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(annotationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(parameterList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
    }

    @Test
    public void test08073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08073");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray25 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap26 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray25);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        java.lang.String str29 = springMvcApiReader2.parseOperationPath("", strMap28);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader33.LOG;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.Class<?> wildcardClass53 = springMvcApiReader52.getClass();
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] { wildcardClass53 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader41.typesToSkip = typeSet55;
        io.swagger.models.Swagger swagger58 = null;
        springMvcApiReader41.swagger = swagger58;
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet67 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet67, typeArray66);
        springMvcApiReader65.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet67);
        java.lang.annotation.Annotation[] annotationArray70 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList71 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList71, annotationArray70);
        boolean boolean73 = springMvcApiReader65.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList71);
        boolean boolean74 = springMvcApiReader62.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList71);
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader77 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger75, logAdapter76);
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet79 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet79, typeArray78);
        springMvcApiReader77.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet79);
        java.lang.annotation.Annotation[] annotationArray82 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList83 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList83, annotationArray82);
        boolean boolean85 = springMvcApiReader77.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList83);
        boolean boolean86 = springMvcApiReader62.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList83);
        boolean boolean87 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList83);
        boolean boolean88 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList83);
        boolean boolean89 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList83);
        io.swagger.annotations.ApiOperation apiOperation90 = null;
        io.swagger.models.Operation operation91 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation90, operation91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(annotationArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(annotationArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test08074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08074");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger37 = null;
        springMvcApiReader2.swagger = swagger37;
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        io.swagger.models.Operation operation41 = null;
        io.swagger.annotations.ApiResponses apiResponses42 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation41, apiResponses42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(logAdapter35);
        org.junit.Assert.assertNull(logAdapter36);
    }

    @Test
    public void test08075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08075");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader17.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader17.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet23;
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("", strMap26);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader30.typesToSkip;
        springMvcApiReader30.updateExtensionChain();
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.Class<?> wildcardClass45 = springMvcApiReader44.getClass();
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList49 = springMvcApiReader30.getParameters((java.lang.reflect.Type) wildcardClass45, (java.util.List<java.lang.annotation.Annotation>) annotationList47);
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader30.updateTagsForOperation(operation50, apiOperation51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader55.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader55.getTypesToSkip();
        io.swagger.models.Operation operation58 = null;
        io.swagger.annotations.ApiOperation apiOperation59 = null;
        springMvcApiReader55.updateTagsForOperation(operation58, apiOperation59);
        io.swagger.annotations.Api api62 = null;
        boolean boolean63 = springMvcApiReader55.canReadApi(false, api62);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        springMvcApiReader55.LOG = logAdapter64;
        io.swagger.annotations.Api api67 = null;
        boolean boolean68 = springMvcApiReader55.canReadApi(false, api67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet73 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet73, typeArray72);
        springMvcApiReader71.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = springMvcApiReader71.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        java.lang.String str79 = springMvcApiReader71.parseOperationPath("", strMap78);
        io.swagger.annotations.Api api81 = null;
        boolean boolean82 = springMvcApiReader71.canReadApi(false, api81);
        java.util.Map<java.lang.String, java.lang.String> strMap84 = null;
        java.lang.String str85 = springMvcApiReader71.parseOperationPath("hi!", strMap84);
        io.swagger.models.Swagger swagger86 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter87 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader88 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger86, logAdapter87);
        java.lang.Class<?> wildcardClass89 = springMvcApiReader88.getClass();
        springMvcApiReader71.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        java.util.Map<java.lang.String, java.lang.String> strMap92 = null;
        java.lang.String str93 = springMvcApiReader71.parseOperationPath("/hi!", strMap92);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray94 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap95 = springMvcApiReader71.parseResponseHeaders(responseHeaderArray94);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap96 = springMvcApiReader55.parseResponseHeaders(responseHeaderArray94);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap97 = springMvcApiReader30.parseResponseHeaders(responseHeaderArray94);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap98 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray94);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(parameterList49);
        org.junit.Assert.assertNull(logAdapter56);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(logAdapter76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "/hi!" + "'", str85, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "/hi!" + "'", str93, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray94);
        org.junit.Assert.assertNull(strMap95);
        org.junit.Assert.assertNull(strMap96);
        org.junit.Assert.assertNull(strMap97);
        org.junit.Assert.assertNull(strMap98);
    }

    @Test
    public void test08076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08076");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        springMvcApiReader10.addTypeToSkippedTypes(type11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader10.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader10.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader10.parseOperationPath("", strMap16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = springMvcApiReader20.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader20.parseOperationPath("", strMap27);
        io.swagger.annotations.Api api30 = null;
        boolean boolean31 = springMvcApiReader20.canReadApi(false, api30);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        java.lang.String str34 = springMvcApiReader20.parseOperationPath("hi!", strMap33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.Class<?> wildcardClass38 = springMvcApiReader37.getClass();
        springMvcApiReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        java.lang.annotation.Annotation[] annotationArray47 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList48 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList48, annotationArray47);
        boolean boolean50 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader10.getParameters((java.lang.reflect.Type) wildcardClass38, (java.util.List<java.lang.annotation.Annotation>) annotationList48);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger54 = null;
        springMvcApiReader2.swagger = swagger54;
        io.swagger.models.Swagger swagger56 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(swagger7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(logAdapter25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/hi!" + "'", str34, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(annotationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNull(swagger56);
    }

    @Test
    public void test08077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08077");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader2.canReadApi(false, api27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader31.swagger = swagger44;
        io.swagger.models.Operation operation46 = null;
        io.swagger.annotations.ApiOperation apiOperation47 = null;
        springMvcApiReader31.updateTagsForOperation(operation46, apiOperation47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.lang.annotation.Annotation[] annotationArray56 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList57 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList57, annotationArray56);
        boolean boolean59 = springMvcApiReader51.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList57);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.Class<?> wildcardClass63 = springMvcApiReader62.getClass();
        springMvcApiReader51.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet69 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet69, typeArray68);
        springMvcApiReader67.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet69);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet76 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet76, typeArray75);
        springMvcApiReader74.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet76);
        springMvcApiReader67.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet76);
        io.swagger.models.Swagger swagger80 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader82 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger80, logAdapter81);
        java.lang.reflect.Type type83 = null;
        springMvcApiReader82.addTypeToSkippedTypes(type83);
        java.util.Set<java.lang.reflect.Type> typeSet85 = springMvcApiReader82.typesToSkip;
        springMvcApiReader67.setTypesToSkip(typeSet85);
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader67.typesToSkip;
        io.swagger.models.Swagger swagger88 = null;
        springMvcApiReader67.swagger = swagger88;
        java.util.Set<java.lang.reflect.Type> typeSet90 = springMvcApiReader67.getTypesToSkip();
        springMvcApiReader51.typesToSkip = typeSet90;
        springMvcApiReader31.setTypesToSkip(typeSet90);
        springMvcApiReader2.setTypesToSkip(typeSet90);
        io.swagger.models.Swagger swagger94 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation95 = null;
        io.swagger.annotations.ApiOperation apiOperation96 = null;
        springMvcApiReader2.updateTagsForOperation(operation95, apiOperation96);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(annotationArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNull(swagger94);
    }

    @Test
    public void test08078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08078");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader2.LOG = logAdapter25;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        springMvcApiReader2.LOG = logAdapter27;
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api31 = null;
        boolean boolean32 = springMvcApiReader2.canReadApi(true, api31);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader35.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        springMvcApiReader35.LOG = logAdapter41;
        springMvcApiReader35.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        springMvcApiReader35.LOG = logAdapter44;
        io.swagger.models.Swagger swagger46 = springMvcApiReader35.swagger;
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        java.lang.annotation.Annotation[] annotationArray54 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList55 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList55, annotationArray54);
        boolean boolean57 = springMvcApiReader49.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList55);
        io.swagger.models.Swagger swagger58 = null;
        springMvcApiReader49.swagger = swagger58;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        springMvcApiReader49.LOG = logAdapter60;
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader49.getTypesToSkip();
        springMvcApiReader35.typesToSkip = typeSet62;
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader35.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader35.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet65;
        io.swagger.models.Swagger swagger67 = null;
        springMvcApiReader2.swagger = swagger67;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap69 = null;
        io.swagger.annotations.Api api70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap71 = springMvcApiReader2.updateTagsForApi(strMap69, api70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertNull(swagger46);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(annotationArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(typeSet65);
    }

    @Test
    public void test08079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08079");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader2.swagger = swagger27;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader33.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader33.parseOperationPath("", strMap40);
        io.swagger.annotations.Api api43 = null;
        boolean boolean44 = springMvcApiReader33.canReadApi(false, api43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader33.parseOperationPath("hi!", strMap46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.Class<?> wildcardClass51 = springMvcApiReader50.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader33.swagger = swagger53;
        io.swagger.models.Swagger swagger55 = springMvcApiReader33.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader33.typesToSkip;
        springMvcApiReader33.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader33.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader33.getTypesToSkip();
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        java.lang.annotation.Annotation[] annotationArray67 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList68 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList68, annotationArray67);
        boolean boolean70 = springMvcApiReader62.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList68);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader62.typesToSkip;
        springMvcApiReader62.updateExtensionChain();
        io.swagger.models.Operation operation73 = null;
        io.swagger.annotations.ApiOperation apiOperation74 = null;
        springMvcApiReader62.updateTagsForOperation(operation73, apiOperation74);
        io.swagger.annotations.Api api77 = null;
        boolean boolean78 = springMvcApiReader62.canReadApi(true, api77);
        io.swagger.models.Swagger swagger79 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader81 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger79, logAdapter80);
        java.lang.reflect.Type[] typeArray82 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet83 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet83, typeArray82);
        springMvcApiReader81.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet83);
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        boolean boolean89 = springMvcApiReader81.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean90 = springMvcApiReader62.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean91 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean92 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/hi!" + "'", str47, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNull(swagger55);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(annotationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test08080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08080");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader2.swagger = swagger40;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        java.lang.reflect.Method method44 = null;
        io.swagger.models.Operation operation45 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method44, operation45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNull(logAdapter42);
    }

    @Test
    public void test08081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08081");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        springMvcApiReader29.addTypeToSkippedTypes(type30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader29.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader29.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader29.parseOperationPath("", strMap35);
        io.swagger.models.Operation operation37 = null;
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        springMvcApiReader29.updateTagsForOperation(operation37, apiOperation38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader29.canReadApi(false, api41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader29.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader2.parseOperationPath("", strMap46);
        io.swagger.models.Swagger swagger48 = null;
        springMvcApiReader2.swagger = swagger48;
        io.swagger.models.Swagger swagger50 = null;
        springMvcApiReader2.swagger = swagger50;
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader2.parseOperationPath("", strMap53);
        io.swagger.models.Swagger swagger55 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList57 = springMvcApiReader2.getSecurityRequirements(api56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNull(swagger55);
    }

    @Test
    public void test08082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08082");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = springMvcApiReader32.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader32.parseOperationPath("", strMap39);
        io.swagger.annotations.Api api42 = null;
        boolean boolean43 = springMvcApiReader32.canReadApi(false, api42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader32.parseOperationPath("hi!", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.Class<?> wildcardClass50 = springMvcApiReader49.getClass();
        springMvcApiReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader17.LOG;
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader56.parseOperationPath("", strMap63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList66 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList66, typeArray65);
        springMvcApiReader56.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader17.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader2.canReadApi(false, api72);
        io.swagger.models.Operation operation74 = null;
        io.swagger.annotations.ApiOperation apiOperation75 = null;
        springMvcApiReader2.updateTagsForOperation(operation74, apiOperation75);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger78 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation81 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "hi!", operation81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(logAdapter37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(swagger78);
    }

    @Test
    public void test08083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08083");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api13 = null;
        boolean boolean14 = springMvcApiReader2.canReadApi(false, api13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader2.typesToSkip;
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        boolean boolean19 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.annotations.Api api21 = null;
        boolean boolean22 = springMvcApiReader2.canReadApi(false, api21);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader2.parseOperationPath("/hi!", strMap25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        springMvcApiReader2.LOG = logAdapter27;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
    }

    @Test
    public void test08084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08084");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        springMvcApiReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = springMvcApiReader25.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader25.parseOperationPath("", strMap32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.Class<?> wildcardClass37 = springMvcApiReader36.getClass();
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] { wildcardClass37 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader25.typesToSkip = typeSet39;
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader25.getTypesToSkip();
        springMvcApiReader10.setTypesToSkip(typeSet42);
        springMvcApiReader2.setTypesToSkip(typeSet42);
        io.swagger.models.Swagger swagger45 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader2.canReadApi(false, api47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader51.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader51.parseOperationPath("hi!", strMap58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        springMvcApiReader51.LOG = logAdapter60;
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader51.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet62);
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader2.swagger = swagger64;
        io.swagger.models.Operation operation66 = null;
        io.swagger.annotations.ApiOperation apiOperation67 = null;
        springMvcApiReader2.updateTagsForOperation(operation66, apiOperation67);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(logAdapter30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(logAdapter56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNotNull(typeSet62);
    }

    @Test
    public void test08085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08085");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        java.lang.String[] strArray25 = null;
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        springMvcApiReader28.addTypeToSkippedTypes(type29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader28.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader28.LOG;
        io.swagger.annotations.Api api35 = null;
        boolean boolean36 = springMvcApiReader28.canReadApi(true, api35);
        io.swagger.annotations.Api api38 = null;
        boolean boolean39 = springMvcApiReader28.canReadApi(false, api38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader28.getTypesToSkip();
        java.lang.String[] strArray41 = null;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = springMvcApiReader44.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader44.parseOperationPath("", strMap51);
        io.swagger.annotations.Api api54 = null;
        boolean boolean55 = springMvcApiReader44.canReadApi(false, api54);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader44.parseOperationPath("hi!", strMap57);
        springMvcApiReader44.updateExtensionChain();
        java.lang.String[] strArray61 = new java.lang.String[] { "/hi!" };
        java.lang.String[] strArray62 = new java.lang.String[] {};
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap63 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray64 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList65 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList65, securityRequirementArray64);
        io.swagger.models.Operation operation67 = null;
        springMvcApiReader44.updateOperation(strArray61, strArray62, strMap63, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList65, operation67);
        io.swagger.models.Operation operation69 = null;
        java.lang.String[] strArray70 = springMvcApiReader28.updateOperationProduces(strArray41, strArray62, operation69);
        io.swagger.models.Operation operation71 = null;
        java.lang.String[] strArray72 = springMvcApiReader2.updateOperationProduces(strArray25, strArray62, operation71);
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(logAdapter49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "/hi!" + "'", str58, "/hi!");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(securityRequirementArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(typeSet73);
    }

    @Test
    public void test08086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08086");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader2.canReadApi(false, api47);
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger50 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        springMvcApiReader2.LOG = logAdapter51;
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader2.swagger = swagger53;
        io.swagger.annotations.ApiOperation apiOperation55 = null;
        io.swagger.models.Operation operation56 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation55, operation56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNull(swagger50);
    }

    @Test
    public void test08087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08087");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.Class<?> wildcardClass12 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.Class<?> wildcardClass17 = springMvcApiReader16.getClass();
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Operation operation22 = null;
        io.swagger.annotations.ApiOperation apiOperation23 = null;
        springMvcApiReader2.updateTagsForOperation(operation22, apiOperation23);
        io.swagger.models.Swagger swagger25 = null;
        springMvcApiReader2.swagger = swagger25;
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader2.canReadApi(false, api28);
        java.lang.reflect.Method method30 = null;
        io.swagger.models.Operation operation31 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method30, operation31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test08088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08088");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api24 = null;
        boolean boolean25 = springMvcApiReader2.canReadApi(true, api24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        springMvcApiReader28.addTypeToSkippedTypes(type29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet32;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertNull(logAdapter35);
    }

    @Test
    public void test08089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08089");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader10.canReadApi(false, api20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader10.parseOperationPath("hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        boolean boolean74 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader66.swagger = swagger75;
        java.lang.annotation.Annotation[] annotationArray77 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList78 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList78, annotationArray77);
        boolean boolean80 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList81 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass60, (java.util.List<java.lang.annotation.Annotation>) annotationList78);
        io.swagger.models.Swagger swagger82 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger83 = null;
        springMvcApiReader2.swagger = swagger83;
        io.swagger.models.Operation operation85 = null;
        io.swagger.annotations.ApiResponses apiResponses86 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation85, apiResponses86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(annotationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(parameterList81);
        org.junit.Assert.assertNull(swagger82);
    }

    @Test
    public void test08090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08090");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet63 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet63, typeArray62);
        springMvcApiReader61.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet63);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = springMvcApiReader61.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader61.parseOperationPath("", strMap68);
        io.swagger.annotations.Api api71 = null;
        boolean boolean72 = springMvcApiReader61.canReadApi(false, api71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        java.lang.String str75 = springMvcApiReader61.parseOperationPath("hi!", strMap74);
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.Class<?> wildcardClass79 = springMvcApiReader78.getClass();
        springMvcApiReader61.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        io.swagger.models.Swagger swagger82 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation83 = null;
        io.swagger.annotations.ApiOperation apiOperation84 = null;
        springMvcApiReader2.updateTagsForOperation(operation83, apiOperation84);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap86 = null;
        io.swagger.annotations.Api api87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap88 = springMvcApiReader2.updateTagsForApi(strMap86, api87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(logAdapter66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/hi!" + "'", str75, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNull(swagger82);
    }

    @Test
    public void test08091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08091");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        springMvcApiReader2.LOG = logAdapter18;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        springMvcApiReader2.LOG = logAdapter20;
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass23 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test08092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08092");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Operation operation22 = null;
        io.swagger.annotations.ApiOperation apiOperation23 = null;
        springMvcApiReader2.updateTagsForOperation(operation22, apiOperation23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("", strMap26);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test08093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08093");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger6);
        org.junit.Assert.assertNull(logAdapter8);
        org.junit.Assert.assertNull(logAdapter10);
    }

    @Test
    public void test08094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08094");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        boolean boolean16 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        springMvcApiReader21.addTypeToSkippedTypes(type22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader21.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNull(logAdapter26);
    }

    @Test
    public void test08095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08095");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        io.swagger.models.Operation operation20 = null;
        io.swagger.annotations.ApiOperation apiOperation21 = null;
        springMvcApiReader2.updateTagsForOperation(operation20, apiOperation21);
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        io.swagger.models.Swagger swagger25 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger27 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNull(swagger25);
        org.junit.Assert.assertNull(logAdapter26);
        org.junit.Assert.assertNull(swagger27);
    }

    @Test
    public void test08096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08096");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api10 = null;
        boolean boolean11 = springMvcApiReader2.canReadApi(true, api10);
        java.util.Set<java.lang.reflect.Type> typeSet12 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet23 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet23, typeArray22);
        springMvcApiReader21.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet23);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        springMvcApiReader21.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = springMvcApiReader36.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        java.lang.String str44 = springMvcApiReader36.parseOperationPath("", strMap43);
        io.swagger.annotations.Api api46 = null;
        boolean boolean47 = springMvcApiReader36.canReadApi(false, api46);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader36.parseOperationPath("hi!", strMap49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.Class<?> wildcardClass54 = springMvcApiReader53.getClass();
        springMvcApiReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        springMvcApiReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader21.getTypesToSkip();
        springMvcApiReader16.typesToSkip = typeSet57;
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader16.getTypesToSkip();
        io.swagger.annotations.Api api61 = null;
        boolean boolean62 = springMvcApiReader16.canReadApi(false, api61);
        io.swagger.models.Swagger swagger63 = springMvcApiReader16.swagger;
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet71 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet71, typeArray70);
        springMvcApiReader69.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet71);
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        boolean boolean77 = springMvcApiReader69.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList75);
        boolean boolean78 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList75);
        io.swagger.models.Swagger swagger79 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader81 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger79, logAdapter80);
        java.lang.reflect.Type[] typeArray82 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet83 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet83, typeArray82);
        springMvcApiReader81.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet83);
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        boolean boolean89 = springMvcApiReader81.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean90 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean91 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean92 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        java.util.Map<java.lang.String, java.lang.String> strMap94 = null;
        java.lang.String str95 = springMvcApiReader2.parseOperationPath("/hi!", strMap94);
        io.swagger.models.Operation operation96 = null;
        io.swagger.annotations.ApiOperation apiOperation97 = null;
        springMvcApiReader2.updateTagsForOperation(operation96, apiOperation97);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(logAdapter41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "/hi!" + "'", str50, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(swagger63);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "/hi!" + "'", str95, "/hi!");
    }

    @Test
    public void test08097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08097");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader2.canReadApi(false, api47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader2.updateTagsForOperation(operation50, apiOperation51);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation54 = null;
        io.swagger.annotations.ApiResponses apiResponses55 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation54, apiResponses55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(swagger49);
    }

    @Test
    public void test08098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08098");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        springMvcApiReader32.addTypeToSkippedTypes(type33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader32.typesToSkip;
        springMvcApiReader17.setTypesToSkip(typeSet35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader17.getTypesToSkip();
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader17.canReadApi(true, api39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        springMvcApiReader43.addTypeToSkippedTypes(type44);
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader43.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader43.getTypesToSkip();
        springMvcApiReader17.typesToSkip = typeSet47;
        springMvcApiReader2.typesToSkip = typeSet47;
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader2.parseOperationPath("/hi!", strMap52);
        io.swagger.models.Operation operation54 = null;
        io.swagger.annotations.ApiOperation apiOperation55 = null;
        springMvcApiReader2.updateTagsForOperation(operation54, apiOperation55);
        io.swagger.annotations.Api api57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet58 = springMvcApiReader2.extractTags(api57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "/hi!" + "'", str53, "/hi!");
    }

    @Test
    public void test08099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08099");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        boolean boolean40 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList38);
        boolean boolean41 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList38);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader29.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet42;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader46.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader46.parseOperationPath("", strMap53);
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList56 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList56, typeArray55);
        springMvcApiReader46.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        java.lang.String[] strArray59 = new java.lang.String[] {};
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap64 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray65 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList66 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList66, securityRequirementArray65);
        io.swagger.models.Operation operation68 = null;
        springMvcApiReader46.updateOperation(strArray59, strArray63, strMap64, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList66, operation68);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader46.parseOperationPath("", strMap71);
        springMvcApiReader46.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader46.parseOperationPath("/hi!", strMap75);
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        java.lang.String str79 = springMvcApiReader46.parseOperationPath("/hi!", strMap78);
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader46.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet80;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(securityRequirementArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "/hi!" + "'", str79, "/hi!");
        org.junit.Assert.assertNotNull(typeSet80);
    }

    @Test
    public void test08100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08100");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation59 = null;
        io.swagger.annotations.ApiOperation apiOperation60 = null;
        springMvcApiReader2.updateTagsForOperation(operation59, apiOperation60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader2.parseOperationPath("", strMap64);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger67 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNull(logAdapter57);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNull(swagger67);
    }

    @Test
    public void test08101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08101");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        boolean boolean20 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        springMvcApiReader12.swagger = swagger21;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray23 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap24 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader27.LOG;
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = springMvcApiReader66.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader66.parseOperationPath("", strMap73);
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList76 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList76, typeArray75);
        springMvcApiReader66.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        springMvcApiReader27.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        springMvcApiReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(logAdapter9);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(logAdapter71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test08102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08102");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        io.swagger.models.Swagger swagger37 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        springMvcApiReader40.addTypeToSkippedTypes(type41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader40.typesToSkip;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader46.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader46.parseOperationPath("", strMap53);
        io.swagger.annotations.Api api56 = null;
        boolean boolean57 = springMvcApiReader46.canReadApi(false, api56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        java.lang.String str60 = springMvcApiReader46.parseOperationPath("hi!", strMap59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.Class<?> wildcardClass64 = springMvcApiReader63.getClass();
        springMvcApiReader46.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader46.parseOperationPath("/hi!", strMap67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray69);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray69);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray69);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger76 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        springMvcApiReader2.LOG = logAdapter78;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = null;
        springMvcApiReader2.LOG = logAdapter80;
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(swagger37);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "/hi!" + "'", str60, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "/hi!" + "'", str68, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNull(swagger76);
        org.junit.Assert.assertNull(logAdapter77);
        org.junit.Assert.assertNotNull(typeSet82);
    }

    @Test
    public void test08103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08103");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        springMvcApiReader10.addTypeToSkippedTypes(type11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader10.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader10.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader10.parseOperationPath("", strMap16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = springMvcApiReader20.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader20.parseOperationPath("", strMap27);
        io.swagger.annotations.Api api30 = null;
        boolean boolean31 = springMvcApiReader20.canReadApi(false, api30);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        java.lang.String str34 = springMvcApiReader20.parseOperationPath("hi!", strMap33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.Class<?> wildcardClass38 = springMvcApiReader37.getClass();
        springMvcApiReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        java.lang.annotation.Annotation[] annotationArray47 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList48 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList48, annotationArray47);
        boolean boolean50 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader10.getParameters((java.lang.reflect.Type) wildcardClass38, (java.util.List<java.lang.annotation.Annotation>) annotationList48);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        java.lang.String str55 = springMvcApiReader2.parseOperationPath("/hi!", strMap54);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader2.LOG;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass57 = logAdapter56.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(swagger7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(logAdapter25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/hi!" + "'", str34, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(annotationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "/hi!" + "'", str55, "/hi!");
        org.junit.Assert.assertNull(logAdapter56);
    }

    @Test
    public void test08104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08104");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("hi!", strMap9);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.annotations.Api api14 = null;
        boolean boolean15 = springMvcApiReader2.canReadApi(false, api14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader2.LOG;
        java.lang.reflect.Method method17 = null;
        io.swagger.models.Operation operation18 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method17, operation18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/hi!" + "'", str10, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter16);
    }

    @Test
    public void test08105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08105");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader2.swagger = swagger27;
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.models.Swagger swagger43 = null;
        springMvcApiReader34.swagger = swagger43;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        springMvcApiReader34.LOG = logAdapter45;
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        springMvcApiReader64.addTypeToSkippedTypes(type65);
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader64.typesToSkip;
        springMvcApiReader49.setTypesToSkip(typeSet67);
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader49.getTypesToSkip();
        io.swagger.annotations.Api api71 = null;
        boolean boolean72 = springMvcApiReader49.canReadApi(true, api71);
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader75 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger73, logAdapter74);
        java.lang.reflect.Type type76 = null;
        springMvcApiReader75.addTypeToSkippedTypes(type76);
        java.util.Set<java.lang.reflect.Type> typeSet78 = springMvcApiReader75.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader75.getTypesToSkip();
        springMvcApiReader49.typesToSkip = typeSet79;
        springMvcApiReader34.setTypesToSkip(typeSet79);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader34.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet82);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api86 = null;
        boolean boolean87 = springMvcApiReader2.canReadApi(false, api86);
        io.swagger.models.Operation operation88 = null;
        io.swagger.annotations.ApiOperation apiOperation89 = null;
        springMvcApiReader2.updateTagsForOperation(operation88, apiOperation89);
        io.swagger.models.Swagger swagger91 = null;
        springMvcApiReader2.swagger = swagger91;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNull(logAdapter84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test08106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08106");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = springMvcApiReader27.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        springMvcApiReader27.LOG = logAdapter33;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        springMvcApiReader37.addTypeToSkippedTypes(type38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader37.typesToSkip;
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader43.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader43.parseOperationPath("", strMap50);
        io.swagger.annotations.Api api53 = null;
        boolean boolean54 = springMvcApiReader43.canReadApi(false, api53);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        java.lang.String str57 = springMvcApiReader43.parseOperationPath("hi!", strMap56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.Class<?> wildcardClass61 = springMvcApiReader60.getClass();
        springMvcApiReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader43.parseOperationPath("/hi!", strMap64);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray66);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap68 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray66);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap69 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray66);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray66);
        io.swagger.models.Swagger swagger71 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger72 = null;
        springMvcApiReader2.swagger = swagger72;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap74 = null;
        io.swagger.annotations.Api api75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = springMvcApiReader2.updateTagsForApi(strMap74, api75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter32);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "/hi!" + "'", str65, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(swagger71);
    }

    @Test
    public void test08107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08107");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        springMvcApiReader2.updateExtensionChain();
        java.lang.String[] strArray19 = new java.lang.String[] { "/hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader2.updateOperation(strArray19, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        java.lang.String str29 = springMvcApiReader2.parseOperationPath("hi!", strMap28);
        io.swagger.annotations.Api api30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet31 = springMvcApiReader2.extractTags(api30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "/hi!" + "'", str29, "/hi!");
    }

    @Test
    public void test08108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08108");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader24.canReadApi(false, api34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader24.parseOperationPath("hi!", strMap37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.Class<?> wildcardClass42 = springMvcApiReader41.getClass();
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader24.parseOperationPath("/hi!", strMap45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray47);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray47);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader55.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader55.parseOperationPath("", strMap62);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader55.canReadApi(false, api65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet71 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet71, typeArray70);
        springMvcApiReader69.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet71);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = springMvcApiReader69.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        java.lang.String str77 = springMvcApiReader69.parseOperationPath("", strMap76);
        io.swagger.annotations.Api api79 = null;
        boolean boolean80 = springMvcApiReader69.canReadApi(false, api79);
        java.util.Map<java.lang.String, java.lang.String> strMap82 = null;
        java.lang.String str83 = springMvcApiReader69.parseOperationPath("hi!", strMap82);
        io.swagger.models.Swagger swagger84 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader86 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger84, logAdapter85);
        java.lang.Class<?> wildcardClass87 = springMvcApiReader86.getClass();
        springMvcApiReader69.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        java.util.Map<java.lang.String, java.lang.String> strMap90 = null;
        java.lang.String str91 = springMvcApiReader69.parseOperationPath("/hi!", strMap90);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray92 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap93 = springMvcApiReader69.parseResponseHeaders(responseHeaderArray92);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap94 = springMvcApiReader55.parseResponseHeaders(responseHeaderArray92);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap95 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray92);
        io.swagger.models.Swagger swagger96 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger97 = null;
        springMvcApiReader2.swagger = swagger97;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter99 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(logAdapter74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "/hi!" + "'", str83, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "/hi!" + "'", str91, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray92);
        org.junit.Assert.assertNull(strMap93);
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertNull(strMap95);
        org.junit.Assert.assertNull(swagger96);
        org.junit.Assert.assertNull(logAdapter99);
    }

    @Test
    public void test08109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08109");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        springMvcApiReader2.swagger = swagger31;
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader35.typesToSkip;
        springMvcApiReader35.updateExtensionChain();
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.Class<?> wildcardClass45 = springMvcApiReader44.getClass();
        springMvcApiReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        springMvcApiReader35.LOG = logAdapter47;
        io.swagger.models.Swagger swagger49 = null;
        springMvcApiReader35.swagger = swagger49;
        springMvcApiReader35.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader35.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet52);
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeSet52);
    }

    @Test
    public void test08110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08110");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        springMvcApiReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader57.typesToSkip;
        springMvcApiReader57.updateExtensionChain();
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.Class<?> wildcardClass67 = springMvcApiReader66.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api73 = null;
        boolean boolean74 = springMvcApiReader2.canReadApi(false, api73);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNull(logAdapter70);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test08111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08111");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.lang.String[] strArray8 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "/hi!", "hi!", "/hi!" };
        io.swagger.models.Operation operation13 = null;
        java.lang.String[] strArray14 = springMvcApiReader2.updateOperationProduces(strArray8, strArray12, operation13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        springMvcApiReader32.addTypeToSkippedTypes(type33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader32.typesToSkip;
        springMvcApiReader17.setTypesToSkip(typeSet35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader17.getTypesToSkip();
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader17.canReadApi(true, api39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet41);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource44 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger45 = springMvcApiReader2.read(springResource44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet41);
    }

    @Test
    public void test08112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08112");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        io.swagger.models.Operation operation15 = null;
        io.swagger.annotations.ApiOperation apiOperation16 = null;
        springMvcApiReader2.updateTagsForOperation(operation15, apiOperation16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type18);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader2.swagger = swagger20;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = springMvcApiReader25.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader25.parseOperationPath("hi!", strMap32);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        springMvcApiReader25.LOG = logAdapter34;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList48 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList48, typeArray47);
        springMvcApiReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap56 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray57 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList58 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList58, securityRequirementArray57);
        io.swagger.models.Operation operation60 = null;
        springMvcApiReader38.updateOperation(strArray51, strArray55, strMap56, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList58, operation60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader38.parseOperationPath("", strMap63);
        springMvcApiReader38.updateExtensionChain();
        io.swagger.models.Swagger swagger66 = null;
        springMvcApiReader38.swagger = swagger66;
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader38.typesToSkip;
        io.swagger.models.Swagger swagger69 = null;
        springMvcApiReader38.swagger = swagger69;
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader38.canReadApi(false, api72);
        java.lang.Class<?> wildcardClass74 = springMvcApiReader38.getClass();
        springMvcApiReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap78 = null;
        io.swagger.annotations.Api api79 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap80 = springMvcApiReader2.updateTagsForApi(strMap78, api79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(logAdapter30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/hi!" + "'", str33, "/hi!");
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(securityRequirementArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test08113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08113");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger25 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader2.canReadApi(false, api28);
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNull(swagger25);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test08114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08114");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        io.swagger.annotations.Api api48 = null;
        boolean boolean49 = springMvcApiReader38.canReadApi(false, api48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader38.parseOperationPath("hi!", strMap51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.Class<?> wildcardClass56 = springMvcApiReader55.getClass();
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type type62 = null;
        springMvcApiReader61.addTypeToSkippedTypes(type62);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader61.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader61.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader61.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet66);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(typeSet66);
    }

    @Test
    public void test08115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08115");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        boolean boolean16 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        springMvcApiReader21.addTypeToSkippedTypes(type22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader21.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation34 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "hi!", operation34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(swagger30);
        org.junit.Assert.assertNull(logAdapter31);
    }

    @Test
    public void test08116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08116");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api9 = null;
        boolean boolean10 = springMvcApiReader2.canReadApi(true, api9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        springMvcApiReader28.addTypeToSkippedTypes(type29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader28.typesToSkip;
        springMvcApiReader13.setTypesToSkip(typeSet31);
        springMvcApiReader2.typesToSkip = typeSet31;
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        boolean boolean46 = springMvcApiReader38.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList44);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader38.typesToSkip;
        springMvcApiReader38.updateExtensionChain();
        io.swagger.models.Operation operation49 = null;
        io.swagger.annotations.ApiOperation apiOperation50 = null;
        springMvcApiReader38.updateTagsForOperation(operation49, apiOperation50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        springMvcApiReader38.LOG = logAdapter52;
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader38.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader38.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet55);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNull(logAdapter35);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(typeSet55);
    }

    @Test
    public void test08117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08117");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        boolean boolean19 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList17);
        boolean boolean20 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.models.Swagger swagger21 = null;
        springMvcApiReader2.swagger = swagger21;
        io.swagger.models.Operation operation23 = null;
        io.swagger.annotations.ApiOperation apiOperation24 = null;
        springMvcApiReader2.updateTagsForOperation(operation23, apiOperation24);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(swagger7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test08118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08118");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.Class<?> wildcardClass12 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger15 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNull(swagger15);
    }

    @Test
    public void test08119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08119");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader2.LOG = logAdapter23;
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(false, api26);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader2.swagger = swagger28;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test08120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08120");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        springMvcApiReader2.LOG = logAdapter58;
        io.swagger.models.Operation operation60 = null;
        io.swagger.annotations.ApiOperation apiOperation61 = null;
        springMvcApiReader2.updateTagsForOperation(operation60, apiOperation61);
        io.swagger.annotations.Api api64 = null;
        boolean boolean65 = springMvcApiReader2.canReadApi(true, api64);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader2.getTypesToSkip();
        java.util.List<java.lang.annotation.Annotation> annotationList68 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean69 = springMvcApiReader2.hasValidAnnotations(annotationList68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNull(logAdapter57);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(typeSet67);
    }

    @Test
    public void test08121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08121");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader2.parseOperationPath("hi!", strMap39);
        io.swagger.models.Swagger swagger41 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger43 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader2.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNull(swagger41);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertNull(swagger43);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNull(swagger49);
    }

    @Test
    public void test08122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08122");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        springMvcApiReader33.addTypeToSkippedTypes(type34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader33.typesToSkip;
        springMvcApiReader18.setTypesToSkip(typeSet36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader55.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader55.parseOperationPath("", strMap62);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader55.canReadApi(false, api65);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader55.parseOperationPath("hi!", strMap68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.Class<?> wildcardClass73 = springMvcApiReader72.getClass();
        springMvcApiReader55.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        springMvcApiReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = springMvcApiReader40.LOG;
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet81 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet81, typeArray80);
        springMvcApiReader79.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet81);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = springMvcApiReader79.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap86 = null;
        java.lang.String str87 = springMvcApiReader79.parseOperationPath("", strMap86);
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList89 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList89, typeArray88);
        springMvcApiReader79.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        springMvcApiReader40.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        springMvcApiReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        java.util.Set<java.lang.reflect.Type> typeSet95 = springMvcApiReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass96 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNull(logAdapter76);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(logAdapter84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test08123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08123");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        io.swagger.models.Swagger swagger46 = springMvcApiReader41.swagger;
        io.swagger.models.Swagger swagger47 = springMvcApiReader41.swagger;
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        boolean boolean58 = springMvcApiReader50.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader41.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet67 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet67, typeArray66);
        springMvcApiReader65.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet67);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = springMvcApiReader65.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        java.lang.String str73 = springMvcApiReader65.parseOperationPath("", strMap72);
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        java.lang.Class<?> wildcardClass77 = springMvcApiReader76.getClass();
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] { wildcardClass77 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet79 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet79, typeArray78);
        springMvcApiReader65.typesToSkip = typeSet79;
        io.swagger.models.Swagger swagger82 = null;
        springMvcApiReader65.swagger = swagger82;
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader65.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet84);
        io.swagger.models.Operation operation86 = null;
        io.swagger.annotations.ApiOperation apiOperation87 = null;
        springMvcApiReader2.updateTagsForOperation(operation86, apiOperation87);
        io.swagger.models.Swagger swagger89 = null;
        springMvcApiReader2.swagger = swagger89;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(swagger46);
        org.junit.Assert.assertNull(swagger47);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(logAdapter70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(typeSet84);
    }

    @Test
    public void test08124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08124");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        io.swagger.models.Swagger swagger36 = null;
        springMvcApiReader2.swagger = swagger36;
        io.swagger.models.Swagger swagger38 = null;
        springMvcApiReader2.swagger = swagger38;
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = springMvcApiReader57.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader57.parseOperationPath("", strMap64);
        io.swagger.annotations.Api api67 = null;
        boolean boolean68 = springMvcApiReader57.canReadApi(false, api67);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader57.parseOperationPath("hi!", strMap70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.Class<?> wildcardClass75 = springMvcApiReader74.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader42.parseOperationPath("hi!", strMap79);
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader42.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet81);
        java.lang.Class<?> wildcardClass83 = typeSet81.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(logAdapter62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "/hi!" + "'", str71, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "/hi!" + "'", str80, "/hi!");
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test08125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08125");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        springMvcApiReader2.swagger = swagger8;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        springMvcApiReader2.LOG = logAdapter10;
        io.swagger.annotations.Api api13 = null;
        boolean boolean14 = springMvcApiReader2.canReadApi(true, api13);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger16 = null;
        springMvcApiReader2.swagger = swagger16;
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList20 = springMvcApiReader2.getSecurityRequirements(api19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertNotNull(typeSet18);
    }

    @Test
    public void test08126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08126");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNull(logAdapter28);
        org.junit.Assert.assertNotNull(typeSet29);
    }

    @Test
    public void test08127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08127");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = springMvcApiReader27.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader27.parseOperationPath("", strMap34);
        io.swagger.annotations.Api api37 = null;
        boolean boolean38 = springMvcApiReader27.canReadApi(false, api37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type type42 = null;
        springMvcApiReader41.addTypeToSkippedTypes(type42);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader41.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader41.typesToSkip;
        springMvcApiReader27.setTypesToSkip(typeSet45);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        springMvcApiReader27.LOG = logAdapter47;
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader27.typesToSkip;
        io.swagger.annotations.Api api51 = null;
        boolean boolean52 = springMvcApiReader27.canReadApi(false, api51);
        java.lang.Class<?> wildcardClass53 = springMvcApiReader27.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger56 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNull(swagger56);
    }

    @Test
    public void test08128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08128");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        springMvcApiReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader57.typesToSkip;
        springMvcApiReader57.updateExtensionChain();
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.Class<?> wildcardClass67 = springMvcApiReader66.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader2.parseOperationPath("/hi!", strMap73);
        io.swagger.models.Operation operation75 = null;
        io.swagger.annotations.ApiResponses apiResponses76 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation75, apiResponses76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNull(logAdapter70);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/hi!" + "'", str74, "/hi!");
    }

    @Test
    public void test08129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08129");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api24 = null;
        boolean boolean25 = springMvcApiReader2.canReadApi(true, api24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        springMvcApiReader28.addTypeToSkippedTypes(type29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet32;
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api36 = null;
        boolean boolean37 = springMvcApiReader2.canReadApi(false, api36);
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader2.canReadApi(false, api39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader2.parseOperationPath("", strMap42);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader2.swagger = swagger44;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray46 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap47 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(typeSet48);
    }

    @Test
    public void test08130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08130");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader19.typesToSkip;
        io.swagger.models.Swagger swagger25 = null;
        springMvcApiReader19.swagger = swagger25;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        springMvcApiReader19.LOG = logAdapter27;
        io.swagger.annotations.Api api30 = null;
        boolean boolean31 = springMvcApiReader19.canReadApi(true, api30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = springMvcApiReader19.LOG;
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader19.swagger = swagger33;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader19.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        io.swagger.models.Operation operation38 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation37, operation38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(logAdapter32);
        org.junit.Assert.assertNotNull(typeSet35);
    }

    @Test
    public void test08131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08131");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader2.swagger = swagger29;
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader34.typesToSkip;
        springMvcApiReader34.updateExtensionChain();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.Class<?> wildcardClass44 = springMvcApiReader43.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        io.swagger.models.Swagger swagger53 = springMvcApiReader48.swagger;
        io.swagger.models.Swagger swagger54 = springMvcApiReader48.swagger;
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        boolean boolean65 = springMvcApiReader57.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        boolean boolean66 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList67 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass44, (java.util.List<java.lang.annotation.Annotation>) annotationList63);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api70 = null;
        boolean boolean71 = springMvcApiReader2.canReadApi(true, api70);
        io.swagger.models.Operation operation72 = null;
        io.swagger.annotations.ApiOperation apiOperation73 = null;
        springMvcApiReader2.updateTagsForOperation(operation72, apiOperation73);
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(typeSet31);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(swagger53);
        org.junit.Assert.assertNull(swagger54);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(parameterList67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test08132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08132");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation18 = null;
        io.swagger.annotations.ApiResponses apiResponses19 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation18, apiResponses19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(logAdapter16);
        org.junit.Assert.assertNotNull(typeSet17);
    }

    @Test
    public void test08133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08133");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader2.parseOperationPath("/hi!", strMap31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("/hi!", strMap34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.Class<?> wildcardClass50 = springMvcApiReader49.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass50 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader38.typesToSkip = typeSet52;
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader38.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader38.parseOperationPath("/hi!", strMap57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader38.getTypesToSkip();
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        java.lang.annotation.Annotation[] annotationArray67 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList68 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList68, annotationArray67);
        boolean boolean70 = springMvcApiReader62.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList68);
        io.swagger.models.Swagger swagger71 = null;
        springMvcApiReader62.swagger = swagger71;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader62.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader38.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap76 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource78 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger79 = springMvcApiReader2.read(springResource78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "/hi!" + "'", str58, "/hi!");
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(annotationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(logAdapter77);
    }

    @Test
    public void test08134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08134");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader15.getTypesToSkip();
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = springMvcApiReader44.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader44.parseOperationPath("", strMap51);
        io.swagger.annotations.Api api54 = null;
        boolean boolean55 = springMvcApiReader44.canReadApi(false, api54);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader44.parseOperationPath("hi!", strMap57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.Class<?> wildcardClass62 = springMvcApiReader61.getClass();
        springMvcApiReader44.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        springMvcApiReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        springMvcApiReader15.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        io.swagger.models.Swagger swagger67 = null;
        springMvcApiReader2.swagger = swagger67;
        io.swagger.models.Swagger swagger69 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger70 = null;
        springMvcApiReader2.swagger = swagger70;
        io.swagger.annotations.Api api73 = null;
        boolean boolean74 = springMvcApiReader2.canReadApi(true, api73);
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader2.swagger = swagger75;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        springMvcApiReader2.LOG = logAdapter77;
        io.swagger.annotations.Api api79 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet80 = springMvcApiReader2.extractTags(api79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(logAdapter49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "/hi!" + "'", str58, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNull(swagger69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test08135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08135");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Operation operation3 = null;
        io.swagger.annotations.ApiOperation apiOperation4 = null;
        springMvcApiReader2.updateTagsForOperation(operation3, apiOperation4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        java.lang.String str11 = springMvcApiReader2.parseOperationPath("hi!", strMap10);
        io.swagger.models.Operation operation12 = null;
        io.swagger.annotations.ApiOperation apiOperation13 = null;
        springMvcApiReader2.updateTagsForOperation(operation12, apiOperation13);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(swagger7);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/hi!" + "'", str11, "/hi!");
    }

    @Test
    public void test08136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08136");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass30, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader2.swagger = swagger44;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader2.LOG;
        java.lang.Class<?> wildcardClass47 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test08137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08137");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.Class<?> wildcardClass29 = springMvcApiReader28.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass29 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader17.typesToSkip = typeSet31;
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader17.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet34);
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        springMvcApiReader2.updateTagsForOperation(operation36, apiOperation37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation40 = null;
        io.swagger.annotations.ApiOperation apiOperation41 = null;
        springMvcApiReader2.updateTagsForOperation(operation40, apiOperation41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader2.canReadApi(false, api44);
        io.swagger.models.Swagger swagger46 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger47 = null;
        springMvcApiReader2.swagger = swagger47;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(swagger46);
    }

    @Test
    public void test08138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08138");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader2.updateTagsForOperation(operation17, apiOperation18);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource20 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger21 = springMvcApiReader2.read(springResource20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
    }

    @Test
    public void test08139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08139");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation7 = null;
        io.swagger.annotations.ApiOperation apiOperation8 = null;
        springMvcApiReader2.updateTagsForOperation(operation7, apiOperation8);
        springMvcApiReader2.updateExtensionChain();
        java.lang.reflect.Method method11 = null;
        io.swagger.models.Operation operation12 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method11, operation12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
    }

    @Test
    public void test08140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08140");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        springMvcApiReader2.LOG = logAdapter40;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type type45 = null;
        springMvcApiReader44.addTypeToSkippedTypes(type45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader44.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader44.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = springMvcApiReader44.LOG;
        springMvcApiReader44.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader44.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader44.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet52;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        springMvcApiReader2.LOG = logAdapter54;
        io.swagger.models.Swagger swagger56 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNull(logAdapter49);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNull(swagger56);
    }

    @Test
    public void test08141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08141");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        boolean boolean28 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader20.swagger = swagger29;
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        boolean boolean41 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.models.Swagger swagger42 = null;
        springMvcApiReader33.swagger = swagger42;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        boolean boolean47 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet54 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet54, typeArray53);
        springMvcApiReader52.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet54);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = springMvcApiReader52.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        java.lang.String str60 = springMvcApiReader52.parseOperationPath("", strMap59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList62 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList62, typeArray61);
        springMvcApiReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        java.lang.String[] strArray65 = new java.lang.String[] {};
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap70 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray71 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList72 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList72, securityRequirementArray71);
        io.swagger.models.Operation operation74 = null;
        springMvcApiReader52.updateOperation(strArray65, strArray69, strMap70, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList72, operation74);
        java.lang.String[] strArray82 = new java.lang.String[] { "/hi!", "", "/hi!", "", "hi!", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap83 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray84 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList85 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList85, securityRequirementArray84);
        io.swagger.models.Operation operation87 = null;
        springMvcApiReader2.updateOperation(strArray69, strArray82, strMap83, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList85, operation87);
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger90 = null;
        springMvcApiReader2.swagger = swagger90;
        io.swagger.models.Operation operation92 = null;
        io.swagger.annotations.ApiOperation apiOperation93 = null;
        springMvcApiReader2.updateTagsForOperation(operation92, apiOperation93);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(logAdapter57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(securityRequirementArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(securityRequirementArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(typeSet89);
    }

    @Test
    public void test08142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08142");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        io.swagger.annotations.Api api48 = null;
        boolean boolean49 = springMvcApiReader38.canReadApi(false, api48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader38.parseOperationPath("hi!", strMap51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.Class<?> wildcardClass56 = springMvcApiReader55.getClass();
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type59 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type59);
        io.swagger.annotations.Api api62 = null;
        boolean boolean63 = springMvcApiReader2.canReadApi(false, api62);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        springMvcApiReader2.LOG = logAdapter64;
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNull(logAdapter67);
    }

    @Test
    public void test08143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08143");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        springMvcApiReader24.addTypeToSkippedTypes(type25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader24.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader24.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader24.parseOperationPath("", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        java.lang.annotation.Annotation[] annotationArray61 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList62 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList62, annotationArray61);
        boolean boolean64 = springMvcApiReader56.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList62);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList65 = springMvcApiReader24.getParameters((java.lang.reflect.Type) wildcardClass52, (java.util.List<java.lang.annotation.Annotation>) annotationList62);
        springMvcApiReader24.updateExtensionChain();
        io.swagger.annotations.Api api68 = null;
        boolean boolean69 = springMvcApiReader24.canReadApi(false, api68);
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader24.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet70;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation75 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "/hi!", operation75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(annotationArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(parameterList65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNull(logAdapter72);
    }

    @Test
    public void test08144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08144");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        springMvcApiReader42.addTypeToSkippedTypes(type43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader42.typesToSkip;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader48.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader48.parseOperationPath("", strMap55);
        io.swagger.annotations.Api api58 = null;
        boolean boolean59 = springMvcApiReader48.canReadApi(false, api58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        java.lang.String str62 = springMvcApiReader48.parseOperationPath("hi!", strMap61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.Class<?> wildcardClass66 = springMvcApiReader65.getClass();
        springMvcApiReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader48.parseOperationPath("/hi!", strMap69);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray71 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray71);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap73 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray71);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray71);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        springMvcApiReader2.LOG = logAdapter76;
        io.swagger.models.Swagger swagger78 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api82 = null;
        boolean boolean83 = springMvcApiReader2.canReadApi(true, api82);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "/hi!" + "'", str62, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(swagger78);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test08145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08145");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api14 = null;
        boolean boolean15 = springMvcApiReader2.canReadApi(false, api14);
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(true, api17);
        io.swagger.annotations.ApiOperation apiOperation19 = null;
        io.swagger.models.Operation operation20 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation19, operation20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test08146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08146");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        springMvcApiReader2.LOG = logAdapter6;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type type26 = null;
        springMvcApiReader25.addTypeToSkippedTypes(type26);
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader25.typesToSkip;
        springMvcApiReader10.setTypesToSkip(typeSet28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader10.getTypesToSkip();
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader10.canReadApi(true, api32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type type37 = null;
        springMvcApiReader36.addTypeToSkippedTypes(type37);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader36.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader36.getTypesToSkip();
        springMvcApiReader10.typesToSkip = typeSet40;
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader10.getTypesToSkip();
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type type46 = null;
        springMvcApiReader45.addTypeToSkippedTypes(type46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader45.typesToSkip;
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader51.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader51.parseOperationPath("", strMap58);
        io.swagger.annotations.Api api61 = null;
        boolean boolean62 = springMvcApiReader51.canReadApi(false, api61);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader51.parseOperationPath("hi!", strMap64);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        java.lang.Class<?> wildcardClass69 = springMvcApiReader68.getClass();
        springMvcApiReader51.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass69);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        java.lang.String str73 = springMvcApiReader51.parseOperationPath("/hi!", strMap72);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray74 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader51.parseResponseHeaders(responseHeaderArray74);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap76 = springMvcApiReader45.parseResponseHeaders(responseHeaderArray74);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray74);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap78 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray74);
        io.swagger.models.Swagger swagger79 = null;
        springMvcApiReader2.swagger = swagger79;
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger82 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(logAdapter56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "/hi!" + "'", str65, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "/hi!" + "'", str73, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNull(swagger82);
    }

    @Test
    public void test08147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08147");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray32 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray32);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation35 = null;
        io.swagger.annotations.ApiOperation apiOperation36 = null;
        springMvcApiReader2.updateTagsForOperation(operation35, apiOperation36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertNotNull(typeSet38);
    }

    @Test
    public void test08148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08148");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader13.typesToSkip;
        springMvcApiReader13.updateExtensionChain();
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.Class<?> wildcardClass23 = springMvcApiReader22.getClass();
        springMvcApiReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        io.swagger.models.Swagger swagger26 = null;
        springMvcApiReader2.swagger = swagger26;
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader2.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader48.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader48.parseOperationPath("", strMap55);
        io.swagger.annotations.Api api58 = null;
        boolean boolean59 = springMvcApiReader48.canReadApi(false, api58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        java.lang.String str62 = springMvcApiReader48.parseOperationPath("hi!", strMap61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.Class<?> wildcardClass66 = springMvcApiReader65.getClass();
        springMvcApiReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        springMvcApiReader33.updateExtensionChain();
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        springMvcApiReader72.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet74);
        io.swagger.models.Swagger swagger77 = springMvcApiReader72.swagger;
        io.swagger.models.Swagger swagger78 = springMvcApiReader72.swagger;
        io.swagger.models.Swagger swagger79 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader81 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger79, logAdapter80);
        java.lang.reflect.Type[] typeArray82 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet83 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet83, typeArray82);
        springMvcApiReader81.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet83);
        java.lang.annotation.Annotation[] annotationArray86 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList87 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList87, annotationArray86);
        boolean boolean89 = springMvcApiReader81.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        boolean boolean90 = springMvcApiReader72.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList87);
        java.lang.Class<?> wildcardClass91 = springMvcApiReader72.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass91);
        java.util.Set<java.lang.reflect.Type> typeSet93 = springMvcApiReader33.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet94 = springMvcApiReader33.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet94);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "/hi!" + "'", str62, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(swagger77);
        org.junit.Assert.assertNull(swagger78);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(annotationArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(typeSet94);
    }

    @Test
    public void test08149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08149");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader2.canReadApi(false, api33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        boolean boolean49 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList47);
        boolean boolean50 = springMvcApiReader38.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList47);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader53.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        java.lang.annotation.Annotation[] annotationArray58 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList59 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList59, annotationArray58);
        boolean boolean61 = springMvcApiReader53.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList59);
        boolean boolean62 = springMvcApiReader38.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList59);
        java.util.Set<java.lang.reflect.Type> typeSet63 = null;
        springMvcApiReader38.typesToSkip = typeSet63;
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet69 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet69, typeArray68);
        springMvcApiReader67.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet69);
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        boolean boolean75 = springMvcApiReader67.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        io.swagger.models.Swagger swagger76 = null;
        springMvcApiReader67.swagger = swagger76;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray78 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap79 = springMvcApiReader67.parseResponseHeaders(responseHeaderArray78);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap80 = springMvcApiReader38.parseResponseHeaders(responseHeaderArray78);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap81 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray78);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation85 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "/hi!", operation85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(annotationArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(typeSet82);
    }

    @Test
    public void test08150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08150");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet12 = springMvcApiReader8.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader8.LOG;
        io.swagger.models.Swagger swagger14 = springMvcApiReader8.swagger;
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader8.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        boolean boolean40 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList38);
        io.swagger.models.Swagger swagger41 = null;
        springMvcApiReader32.swagger = swagger41;
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        boolean boolean46 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList44);
        boolean boolean47 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader19.LOG;
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.lang.annotation.Annotation[] annotationArray56 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList57 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList57, annotationArray56);
        boolean boolean59 = springMvcApiReader51.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList57);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader62.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader62.parseOperationPath("", strMap69);
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader62.canReadApi(false, api72);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader62.parseOperationPath("hi!", strMap75);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.Class<?> wildcardClass80 = springMvcApiReader79.getClass();
        springMvcApiReader62.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader62.parseOperationPath("/hi!", strMap83);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray85 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap86 = springMvcApiReader62.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap87 = springMvcApiReader51.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap88 = springMvcApiReader19.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap89 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap90 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray85);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter92 = null;
        springMvcApiReader2.LOG = logAdapter92;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNull(swagger14);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(annotationArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(logAdapter67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/hi!" + "'", str84, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNull(strMap90);
    }

    @Test
    public void test08151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08151");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader2.parseOperationPath("hi!", strMap42);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation47 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "", operation47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
        org.junit.Assert.assertNotNull(typeSet44);
    }

    @Test
    public void test08152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08152");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        springMvcApiReader2.LOG = logAdapter9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        java.lang.annotation.Annotation[] annotationArray21 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList22 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList22, annotationArray21);
        boolean boolean24 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList22);
        boolean boolean25 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList22);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader28.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader28.parseOperationPath("", strMap35);
        io.swagger.annotations.Api api38 = null;
        boolean boolean39 = springMvcApiReader28.canReadApi(false, api38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        springMvcApiReader42.addTypeToSkippedTypes(type43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader42.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader42.typesToSkip;
        springMvcApiReader28.setTypesToSkip(typeSet46);
        springMvcApiReader13.typesToSkip = typeSet46;
        springMvcApiReader2.typesToSkip = typeSet46;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation53 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "", operation53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet46);
    }

    @Test
    public void test08153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08153");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(true, api17);
        io.swagger.models.Operation operation19 = null;
        io.swagger.annotations.ApiOperation apiOperation20 = null;
        springMvcApiReader2.updateTagsForOperation(operation19, apiOperation20);
        io.swagger.models.Operation operation24 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "", operation24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test08154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08154");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        java.lang.Class<?> wildcardClass61 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test08155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08155");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = springMvcApiReader9.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader9.parseOperationPath("", strMap16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.Class<?> wildcardClass21 = springMvcApiReader20.getClass();
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] { wildcardClass21 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet23 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet23, typeArray22);
        springMvcApiReader9.typesToSkip = typeSet23;
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        springMvcApiReader9.updateTagsForOperation(operation26, apiOperation27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = springMvcApiReader63.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader63.parseOperationPath("", strMap70);
        io.swagger.annotations.Api api73 = null;
        boolean boolean74 = springMvcApiReader63.canReadApi(false, api73);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        java.lang.String str77 = springMvcApiReader63.parseOperationPath("hi!", strMap76);
        io.swagger.models.Swagger swagger78 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader80 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger78, logAdapter79);
        java.lang.Class<?> wildcardClass81 = springMvcApiReader80.getClass();
        springMvcApiReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        springMvcApiReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        java.lang.annotation.Annotation[] annotationArray85 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList86 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList86, annotationArray85);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList88 = springMvcApiReader9.getParameters((java.lang.reflect.Type) wildcardClass81, (java.util.List<java.lang.annotation.Annotation>) annotationList86);
        boolean boolean89 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList86);
        io.swagger.models.Swagger swagger90 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(logAdapter14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(logAdapter68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "/hi!" + "'", str77, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(annotationArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(parameterList88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(swagger90);
    }

    @Test
    public void test08156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08156");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger19 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        springMvcApiReader2.LOG = logAdapter20;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiResponses apiResponses25 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation24, apiResponses25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertNull(swagger19);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertNotNull(typeSet23);
    }

    @Test
    public void test08157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08157");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger58 = null;
        springMvcApiReader2.swagger = swagger58;
        io.swagger.models.Swagger swagger60 = null;
        springMvcApiReader2.swagger = swagger60;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader2.parseOperationPath("", strMap63);
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader2.canReadApi(false, api66);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNull(logAdapter57);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test08158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08158");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader2.LOG = logAdapter25;
        io.swagger.models.Operation operation27 = null;
        io.swagger.annotations.ApiOperation apiOperation28 = null;
        springMvcApiReader2.updateTagsForOperation(operation27, apiOperation28);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        springMvcApiReader2.LOG = logAdapter31;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
    }

    @Test
    public void test08159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08159");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader2.LOG = logAdapter23;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger26 = null;
        springMvcApiReader2.swagger = swagger26;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNull(logAdapter29);
    }

    @Test
    public void test08160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08160");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader2.parseOperationPath("/hi!", strMap21);
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        boolean boolean34 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        io.swagger.models.Swagger swagger35 = null;
        springMvcApiReader26.swagger = swagger35;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray37 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap38 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray37);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader2.swagger = swagger40;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/hi!" + "'", str22, "/hi!");
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertNull(logAdapter43);
    }

    @Test
    public void test08161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08161");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        springMvcApiReader2.LOG = logAdapter16;
        io.swagger.models.Swagger swagger18 = null;
        springMvcApiReader2.swagger = swagger18;
        io.swagger.annotations.Api api21 = null;
        boolean boolean22 = springMvcApiReader2.canReadApi(true, api21);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test08162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08162");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader29.typesToSkip;
        springMvcApiReader29.updateExtensionChain();
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.Class<?> wildcardClass39 = springMvcApiReader38.getClass();
        springMvcApiReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.Class<?> wildcardClass44 = springMvcApiReader43.getClass();
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList48 = springMvcApiReader29.getParameters((java.lang.reflect.Type) wildcardClass44, (java.util.List<java.lang.annotation.Annotation>) annotationList46);
        boolean boolean49 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList46);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        springMvcApiReader2.LOG = logAdapter50;
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        java.lang.String str55 = springMvcApiReader2.parseOperationPath("hi!", strMap54);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(parameterList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "/hi!" + "'", str55, "/hi!");
    }

    @Test
    public void test08163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08163");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("", strMap12);
        io.swagger.annotations.Api api15 = null;
        boolean boolean16 = springMvcApiReader2.canReadApi(false, api15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type type20 = null;
        springMvcApiReader19.addTypeToSkippedTypes(type20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader19.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = springMvcApiReader25.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader25.parseOperationPath("", strMap32);
        io.swagger.annotations.Api api35 = null;
        boolean boolean36 = springMvcApiReader25.canReadApi(false, api35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader25.parseOperationPath("hi!", strMap38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.Class<?> wildcardClass43 = springMvcApiReader42.getClass();
        springMvcApiReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader25.parseOperationPath("/hi!", strMap46);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray48 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader25.parseResponseHeaders(responseHeaderArray48);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap50 = springMvcApiReader19.parseResponseHeaders(responseHeaderArray48);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader19.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet51;
        io.swagger.annotations.Api api53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet54 = springMvcApiReader2.extractTags(api53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(logAdapter30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/hi!" + "'", str39, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/hi!" + "'", str47, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(typeSet51);
    }

    @Test
    public void test08164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08164");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger14 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNull(swagger14);
    }

    @Test
    public void test08165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08165");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        boolean boolean26 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList24);
        boolean boolean27 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        boolean boolean38 = springMvcApiReader30.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        boolean boolean39 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        java.util.Set<java.lang.reflect.Type> typeSet40 = null;
        springMvcApiReader15.typesToSkip = typeSet40;
        io.swagger.models.Swagger swagger42 = null;
        springMvcApiReader15.swagger = swagger42;
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader15.typesToSkip;
        java.lang.Class<?> wildcardClass45 = springMvcApiReader15.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNull(logAdapter9);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(typeSet44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertNotNull(typeSet49);
    }

    @Test
    public void test08166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08166");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass30, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger47 = null;
        springMvcApiReader2.swagger = swagger47;
        io.swagger.annotations.Api api50 = null;
        boolean boolean51 = springMvcApiReader2.canReadApi(false, api50);
        io.swagger.annotations.Api api52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList53 = springMvcApiReader2.getSecurityRequirements(api52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test08167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08167");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = null;
        springMvcApiReader2.typesToSkip = typeSet7;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        boolean boolean20 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        springMvcApiReader12.swagger = swagger21;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader12.LOG = logAdapter23;
        springMvcApiReader12.updateExtensionChain();
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        springMvcApiReader12.updateTagsForOperation(operation26, apiOperation27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader31.swagger = swagger40;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader44.swagger = swagger53;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        boolean boolean58 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean60 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean61 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        springMvcApiReader2.LOG = logAdapter62;
        io.swagger.models.Swagger swagger64 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader2.canReadApi(false, api66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type[] typeArray71 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet72 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet72, typeArray71);
        springMvcApiReader70.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet72);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = springMvcApiReader70.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap77 = null;
        java.lang.String str78 = springMvcApiReader70.parseOperationPath("hi!", strMap77);
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader70.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet79);
        io.swagger.models.Operation operation81 = null;
        io.swagger.annotations.ApiOperation apiOperation82 = null;
        springMvcApiReader2.updateTagsForOperation(operation81, apiOperation82);
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger85 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(typeSet9);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(swagger64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(logAdapter75);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/hi!" + "'", str78, "/hi!");
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNull(swagger85);
    }

    @Test
    public void test08168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08168");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        boolean boolean26 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader29.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader29.parseOperationPath("", strMap36);
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader29.canReadApi(false, api39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader29.parseOperationPath("hi!", strMap42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.Class<?> wildcardClass47 = springMvcApiReader46.getClass();
        springMvcApiReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader29.parseOperationPath("/hi!", strMap50);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray52);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray52);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray52);
        io.swagger.annotations.Api api57 = null;
        boolean boolean58 = springMvcApiReader2.canReadApi(false, api57);
        io.swagger.models.Operation operation59 = null;
        io.swagger.annotations.ApiOperation apiOperation60 = null;
        springMvcApiReader2.updateTagsForOperation(operation59, apiOperation60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/hi!" + "'", str51, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeSet62);
    }

    @Test
    public void test08169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08169");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        boolean boolean16 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        springMvcApiReader21.addTypeToSkippedTypes(type22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader21.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader2.swagger = swagger27;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet26);
    }

    @Test
    public void test08170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08170");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader2.canReadApi(false, api27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader31.swagger = swagger40;
        java.lang.annotation.Annotation[] annotationArray42 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList43 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList43, annotationArray42);
        boolean boolean45 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        springMvcApiReader31.LOG = logAdapter46;
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type type51 = null;
        springMvcApiReader50.addTypeToSkippedTypes(type51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader50.typesToSkip;
        springMvcApiReader31.setTypesToSkip(typeSet53);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = springMvcApiReader57.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader57.parseOperationPath("", strMap64);
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList67 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList67, typeArray66);
        springMvcApiReader57.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        springMvcApiReader72.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet74);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = springMvcApiReader72.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader72.parseOperationPath("", strMap79);
        io.swagger.models.Swagger swagger81 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader83 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger81, logAdapter82);
        java.lang.Class<?> wildcardClass84 = springMvcApiReader83.getClass();
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] { wildcardClass84 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet86 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet86, typeArray85);
        springMvcApiReader72.typesToSkip = typeSet86;
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader72.getTypesToSkip();
        springMvcApiReader57.setTypesToSkip(typeSet89);
        springMvcApiReader31.setTypesToSkip(typeSet89);
        springMvcApiReader2.setTypesToSkip(typeSet89);
        java.util.Map<java.lang.String, java.lang.String> strMap94 = null;
        java.lang.String str95 = springMvcApiReader2.parseOperationPath("/hi!", strMap94);
        io.swagger.models.Swagger swagger96 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(logAdapter62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(logAdapter77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "/hi!" + "'", str95, "/hi!");
        org.junit.Assert.assertNull(swagger96);
    }

    @Test
    public void test08171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08171");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader24.canReadApi(false, api34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader24.parseOperationPath("hi!", strMap37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.Class<?> wildcardClass42 = springMvcApiReader41.getClass();
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader24.parseOperationPath("/hi!", strMap45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray47);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray47);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet54 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet54, typeArray53);
        springMvcApiReader52.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet54);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader52.typesToSkip;
        springMvcApiReader52.updateExtensionChain();
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.Class<?> wildcardClass62 = springMvcApiReader61.getClass();
        springMvcApiReader52.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.Class<?> wildcardClass67 = springMvcApiReader66.getClass();
        java.lang.annotation.Annotation[] annotationArray68 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList69 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList69, annotationArray68);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList71 = springMvcApiReader52.getParameters((java.lang.reflect.Type) wildcardClass67, (java.util.List<java.lang.annotation.Annotation>) annotationList69);
        boolean boolean72 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList69);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation76 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "/hi!", operation76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(annotationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(parameterList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test08172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08172");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api24 = null;
        boolean boolean25 = springMvcApiReader2.canReadApi(true, api24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        springMvcApiReader28.addTypeToSkippedTypes(type29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet32;
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger35 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger36 = null;
        springMvcApiReader2.swagger = swagger36;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        springMvcApiReader2.LOG = logAdapter38;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNull(swagger35);
    }

    @Test
    public void test08173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08173");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type type27 = null;
        springMvcApiReader26.addTypeToSkippedTypes(type27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader26.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader26.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        java.lang.Class<?> wildcardClass47 = typeSet42.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger51 = null;
        springMvcApiReader2.swagger = swagger51;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNull(logAdapter49);
        org.junit.Assert.assertNotNull(typeSet50);
    }

    @Test
    public void test08174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08174");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNull(logAdapter14);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertNull(logAdapter16);
    }

    @Test
    public void test08175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08175");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        boolean boolean28 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader20.swagger = swagger29;
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        boolean boolean41 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        io.swagger.models.Swagger swagger42 = null;
        springMvcApiReader33.swagger = swagger42;
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        boolean boolean47 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean48 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        boolean boolean49 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        springMvcApiReader2.updateExtensionChain();
        java.lang.Class<?> wildcardClass51 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test08176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08176");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.Class<?> wildcardClass50 = springMvcApiReader49.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass50 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader38.typesToSkip = typeSet52;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader58.typesToSkip;
        springMvcApiReader58.updateExtensionChain();
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.Class<?> wildcardClass68 = springMvcApiReader67.getClass();
        springMvcApiReader58.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        java.lang.String str75 = springMvcApiReader2.parseOperationPath("hi!", strMap74);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = null;
        java.lang.String str78 = springMvcApiReader2.parseOperationPath("hi!", strMap77);
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader2.typesToSkip;
        java.lang.Class<?> wildcardClass80 = typeSet79.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/hi!" + "'", str75, "/hi!");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/hi!" + "'", str78, "/hi!");
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test08177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08177");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        boolean boolean33 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        springMvcApiReader19.LOG = logAdapter34;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        springMvcApiReader38.addTypeToSkippedTypes(type39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader38.typesToSkip;
        springMvcApiReader19.setTypesToSkip(typeSet41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = springMvcApiReader45.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader45.parseOperationPath("", strMap52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList55 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList55, typeArray54);
        springMvcApiReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = springMvcApiReader60.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader60.parseOperationPath("", strMap67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.Class<?> wildcardClass72 = springMvcApiReader71.getClass();
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] { wildcardClass72 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        springMvcApiReader60.typesToSkip = typeSet74;
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader60.getTypesToSkip();
        springMvcApiReader45.setTypesToSkip(typeSet77);
        springMvcApiReader19.setTypesToSkip(typeSet77);
        springMvcApiReader2.setTypesToSkip(typeSet77);
        io.swagger.models.Operation operation81 = null;
        io.swagger.annotations.ApiOperation apiOperation82 = null;
        springMvcApiReader2.updateTagsForOperation(operation81, apiOperation82);
        io.swagger.annotations.Api api84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet85 = springMvcApiReader2.extractTags(api84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(logAdapter50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(logAdapter65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(typeSet77);
    }

    @Test
    public void test08178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08178");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        boolean boolean43 = springMvcApiReader35.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList41);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader35.parseOperationPath("hi!", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = springMvcApiReader49.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        java.lang.String str57 = springMvcApiReader49.parseOperationPath("", strMap56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.Class<?> wildcardClass61 = springMvcApiReader60.getClass();
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] { wildcardClass61 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet63 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet63, typeArray62);
        springMvcApiReader49.typesToSkip = typeSet63;
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader49.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader49.typesToSkip;
        springMvcApiReader35.setTypesToSkip(typeSet67);
        springMvcApiReader2.typesToSkip = typeSet67;
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type type73 = null;
        springMvcApiReader72.addTypeToSkippedTypes(type73);
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader72.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader72.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        java.lang.String str79 = springMvcApiReader72.parseOperationPath("", strMap78);
        io.swagger.models.Operation operation80 = null;
        io.swagger.annotations.ApiOperation apiOperation81 = null;
        springMvcApiReader72.updateTagsForOperation(operation80, apiOperation81);
        io.swagger.annotations.Api api84 = null;
        boolean boolean85 = springMvcApiReader72.canReadApi(false, api84);
        java.util.Set<java.lang.reflect.Type> typeSet86 = springMvcApiReader72.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet86);
        java.util.Set<java.lang.reflect.Type> typeSet88 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation89 = null;
        io.swagger.annotations.ApiOperation apiOperation90 = null;
        springMvcApiReader2.updateTagsForOperation(operation89, apiOperation90);
        io.swagger.models.Operation operation94 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "", operation94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(logAdapter54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(typeSet88);
    }

    @Test
    public void test08179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08179");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet12 = springMvcApiReader8.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        java.lang.String str15 = springMvcApiReader8.parseOperationPath("", strMap14);
        io.swagger.models.Operation operation16 = null;
        io.swagger.annotations.ApiOperation apiOperation17 = null;
        springMvcApiReader8.updateTagsForOperation(operation16, apiOperation17);
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader8.canReadApi(false, api20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader8.getTypesToSkip();
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = springMvcApiReader25.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader25.parseOperationPath("", strMap32);
        io.swagger.annotations.Api api35 = null;
        boolean boolean36 = springMvcApiReader25.canReadApi(false, api35);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader25.parseOperationPath("hi!", strMap38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.Class<?> wildcardClass43 = springMvcApiReader42.getClass();
        springMvcApiReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader25.parseOperationPath("/hi!", strMap46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        boolean boolean66 = springMvcApiReader58.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        io.swagger.models.Swagger swagger67 = null;
        springMvcApiReader58.swagger = swagger67;
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet73 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet73, typeArray72);
        springMvcApiReader71.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet73);
        java.lang.annotation.Annotation[] annotationArray76 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList77 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList77, annotationArray76);
        boolean boolean79 = springMvcApiReader71.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList77);
        io.swagger.models.Swagger swagger80 = null;
        springMvcApiReader71.swagger = swagger80;
        java.lang.annotation.Annotation[] annotationArray82 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList83 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList83, annotationArray82);
        boolean boolean85 = springMvcApiReader71.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList83);
        boolean boolean86 = springMvcApiReader58.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList83);
        boolean boolean87 = springMvcApiReader25.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList83);
        boolean boolean88 = springMvcApiReader8.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList83);
        io.swagger.annotations.Api api90 = null;
        boolean boolean91 = springMvcApiReader8.canReadApi(false, api90);
        java.util.Set<java.lang.reflect.Type> typeSet92 = springMvcApiReader8.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet92);
        java.util.Set<java.lang.reflect.Type> typeSet94 = springMvcApiReader2.typesToSkip;
        java.util.List<java.lang.reflect.Type> typeList95 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.setTypesToSkip(typeList95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(logAdapter30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/hi!" + "'", str39, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/hi!" + "'", str47, "/hi!");
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(annotationArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(annotationArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(typeSet94);
    }

    @Test
    public void test08180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08180");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        springMvcApiReader12.addTypeToSkippedTypes(type13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader12.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader12.typesToSkip;
        java.lang.Class<?> wildcardClass17 = springMvcApiReader12.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        boolean boolean33 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        boolean boolean44 = springMvcApiReader36.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        boolean boolean45 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        boolean boolean46 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = springMvcApiReader49.LOG;
        io.swagger.models.Swagger swagger51 = null;
        springMvcApiReader49.swagger = swagger51;
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader55.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader55.typesToSkip;
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = springMvcApiReader60.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader60.parseOperationPath("", strMap67);
        java.lang.reflect.Type[] typeArray69 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList70 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList70, typeArray69);
        springMvcApiReader60.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        springMvcApiReader55.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        springMvcApiReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.annotations.Api api77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap78 = springMvcApiReader2.updateTagsForApi(strMap76, api77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(logAdapter50);
        org.junit.Assert.assertNull(logAdapter56);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(logAdapter65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test08181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08181");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger23 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNull(swagger23);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet25);
    }

    @Test
    public void test08182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08182");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader47.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader47.getTypesToSkip();
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader47.updateTagsForOperation(operation50, apiOperation51);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader47.LOG;
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        io.swagger.annotations.Api api63 = null;
        boolean boolean64 = springMvcApiReader56.canReadApi(true, api63);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        springMvcApiReader56.LOG = logAdapter65;
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader56.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader56.typesToSkip;
        springMvcApiReader47.setTypesToSkip(typeSet68);
        springMvcApiReader2.setTypesToSkip(typeSet68);
        io.swagger.models.Swagger swagger71 = null;
        springMvcApiReader2.swagger = swagger71;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        springMvcApiReader2.LOG = logAdapter75;
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNull(logAdapter73);
        org.junit.Assert.assertNotNull(typeSet74);
    }

    @Test
    public void test08183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08183");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader2.swagger = swagger20;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader24.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet30);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet35 = springMvcApiReader2.extractTags(api34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
    }

    @Test
    public void test08184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08184");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        java.lang.String str21 = springMvcApiReader2.parseOperationPath("hi!", strMap20);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/hi!" + "'", str21, "/hi!");
    }

    @Test
    public void test08185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08185");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader2.LOG = logAdapter23;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        springMvcApiReader28.addTypeToSkippedTypes(type29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader28.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader28.LOG;
        java.lang.String[] strArray34 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "/hi!", "hi!", "/hi!" };
        io.swagger.models.Operation operation39 = null;
        java.lang.String[] strArray40 = springMvcApiReader28.updateOperationProduces(strArray34, strArray38, operation39);
        java.lang.String[] strArray41 = null;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader2.updateOperation(strArray38, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.reflect.Method method48 = null;
        io.swagger.models.Operation operation49 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method48, operation49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNull(logAdapter25);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test08186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08186");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] { wildcardClass30 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader18.typesToSkip = typeSet32;
        io.swagger.models.Swagger swagger35 = null;
        springMvcApiReader18.swagger = swagger35;
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader18.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader18.parseOperationPath("", strMap39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader43.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader43.parseOperationPath("", strMap50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList53 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList53, typeArray52);
        springMvcApiReader43.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList53);
        java.lang.String[] strArray56 = new java.lang.String[] {};
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap61 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray62 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList63 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList63, securityRequirementArray62);
        io.swagger.models.Operation operation65 = null;
        springMvcApiReader43.updateOperation(strArray56, strArray60, strMap61, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList63, operation65);
        springMvcApiReader43.updateExtensionChain();
        java.lang.Class<?> wildcardClass68 = springMvcApiReader43.getClass();
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        java.lang.String str73 = springMvcApiReader2.parseOperationPath("", strMap72);
        io.swagger.models.Operation operation74 = null;
        io.swagger.annotations.ApiResponses apiResponses75 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation74, apiResponses75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(securityRequirementArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
    }

    @Test
    public void test08187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08187");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        io.swagger.models.Operation operation22 = null;
        io.swagger.annotations.ApiOperation apiOperation23 = null;
        springMvcApiReader2.updateTagsForOperation(operation22, apiOperation23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = springMvcApiReader27.swagger;
        io.swagger.models.Swagger swagger33 = springMvcApiReader27.swagger;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        boolean boolean44 = springMvcApiReader36.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        boolean boolean45 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        java.lang.Class<?> wildcardClass46 = springMvcApiReader27.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        java.lang.reflect.Method method48 = null;
        io.swagger.models.Operation operation49 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method48, operation49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNull(swagger33);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test08188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08188");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        boolean boolean19 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader11.swagger = swagger20;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader2.swagger = swagger27;
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader31.swagger = swagger44;
        io.swagger.models.Operation operation46 = null;
        io.swagger.annotations.ApiOperation apiOperation47 = null;
        springMvcApiReader31.updateTagsForOperation(operation46, apiOperation47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.lang.annotation.Annotation[] annotationArray56 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList57 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList57, annotationArray56);
        boolean boolean59 = springMvcApiReader51.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList57);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader62.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader62.parseOperationPath("", strMap69);
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader62.canReadApi(false, api72);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader62.parseOperationPath("hi!", strMap75);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.Class<?> wildcardClass80 = springMvcApiReader79.getClass();
        springMvcApiReader62.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader62.parseOperationPath("/hi!", strMap83);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray85 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap86 = springMvcApiReader62.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap87 = springMvcApiReader51.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap88 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap89 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray85);
        io.swagger.models.Operation operation90 = null;
        io.swagger.annotations.ApiResponses apiResponses91 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation90, apiResponses91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(annotationArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(logAdapter67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/hi!" + "'", str84, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNull(strMap89);
    }

    @Test
    public void test08189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08189");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        springMvcApiReader2.LOG = logAdapter16;
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(true, api20);
        io.swagger.annotations.Api api22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet23 = springMvcApiReader2.extractTags(api22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test08190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08190");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.getTypesToSkip();
        java.lang.String[] strArray35 = null;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList48 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList48, typeArray47);
        springMvcApiReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap56 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray57 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList58 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList58, securityRequirementArray57);
        io.swagger.models.Operation operation60 = null;
        springMvcApiReader38.updateOperation(strArray51, strArray55, strMap56, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList58, operation60);
        io.swagger.models.Operation operation62 = null;
        java.lang.String[] strArray63 = springMvcApiReader2.updateOperationConsumes(strArray35, strArray51, operation62);
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader2.swagger = swagger64;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(securityRequirementArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strArray63);
    }

    @Test
    public void test08191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08191");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        springMvcApiReader2.LOG = logAdapter35;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(logAdapter37);
    }

    @Test
    public void test08192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08192");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type[] typeArray9 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet10 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet10, typeArray9);
        springMvcApiReader8.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet10);
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        boolean boolean16 = springMvcApiReader8.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList14);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader8.typesToSkip;
        springMvcApiReader8.updateExtensionChain();
        io.swagger.models.Operation operation19 = null;
        io.swagger.annotations.ApiOperation apiOperation20 = null;
        springMvcApiReader8.updateTagsForOperation(operation19, apiOperation20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader35.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader35.parseOperationPath("", strMap42);
        io.swagger.annotations.Api api45 = null;
        boolean boolean46 = springMvcApiReader35.canReadApi(false, api45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader35.parseOperationPath("hi!", strMap48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.Class<?> wildcardClass53 = springMvcApiReader52.getClass();
        springMvcApiReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        java.lang.String str57 = springMvcApiReader35.parseOperationPath("/hi!", strMap56);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray58 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap59 = springMvcApiReader35.parseResponseHeaders(responseHeaderArray58);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap60 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray58);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap61 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray58);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap62 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/hi!" + "'", str49, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(logAdapter63);
    }

    @Test
    public void test08193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08193");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader2.canReadApi(false, api47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader2.updateTagsForOperation(operation50, apiOperation51);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet56 = springMvcApiReader2.extractTags(api55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(swagger49);
    }

    @Test
    public void test08194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08194");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger29 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api31 = null;
        boolean boolean32 = springMvcApiReader2.canReadApi(false, api31);
        io.swagger.models.Swagger swagger33 = springMvcApiReader2.swagger;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        io.swagger.models.Operation operation35 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation34, operation35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNull(swagger29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(swagger33);
    }

    @Test
    public void test08195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08195");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("/hi!", strMap11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = null;
        springMvcApiReader2.setTypesToSkip(typeSet13);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.models.Swagger swagger26 = null;
        springMvcApiReader17.swagger = swagger26;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        springMvcApiReader17.LOG = logAdapter28;
        springMvcApiReader17.updateExtensionChain();
        io.swagger.models.Operation operation31 = null;
        io.swagger.annotations.ApiOperation apiOperation32 = null;
        springMvcApiReader17.updateTagsForOperation(operation31, apiOperation32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        boolean boolean44 = springMvcApiReader36.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        io.swagger.models.Swagger swagger45 = null;
        springMvcApiReader36.swagger = swagger45;
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        java.lang.annotation.Annotation[] annotationArray54 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList55 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList55, annotationArray54);
        boolean boolean57 = springMvcApiReader49.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList55);
        io.swagger.models.Swagger swagger58 = null;
        springMvcApiReader49.swagger = swagger58;
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        boolean boolean63 = springMvcApiReader49.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean64 = springMvcApiReader36.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean65 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet66;
        io.swagger.annotations.Api api68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList69 = springMvcApiReader2.getSecurityRequirements(api68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(logAdapter9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "/hi!" + "'", str12, "/hi!");
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(annotationArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(typeSet66);
    }

    @Test
    public void test08196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08196");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        io.swagger.models.Operation operation15 = null;
        io.swagger.annotations.ApiOperation apiOperation16 = null;
        springMvcApiReader2.updateTagsForOperation(operation15, apiOperation16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type18);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader2.swagger = swagger20;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation23 = null;
        io.swagger.annotations.ApiResponses apiResponses24 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation23, apiResponses24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
    }

    @Test
    public void test08197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08197");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = null;
        springMvcApiReader2.typesToSkip = typeSet7;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        springMvcApiReader12.addTypeToSkippedTypes(type13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader12.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet15;
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader35.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader35.parseOperationPath("", strMap42);
        io.swagger.annotations.Api api45 = null;
        boolean boolean46 = springMvcApiReader35.canReadApi(false, api45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader35.parseOperationPath("hi!", strMap48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.Class<?> wildcardClass53 = springMvcApiReader52.getClass();
        springMvcApiReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        springMvcApiReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader20.LOG;
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet61 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet61, typeArray60);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = springMvcApiReader59.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        java.lang.String str67 = springMvcApiReader59.parseOperationPath("", strMap66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList69 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList69, typeArray68);
        springMvcApiReader59.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        springMvcApiReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        io.swagger.annotations.Api api75 = null;
        boolean boolean76 = springMvcApiReader2.canReadApi(true, api75);
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation80 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "hi!", operation80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(typeSet9);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/hi!" + "'", str49, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNull(logAdapter56);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(logAdapter64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeSet77);
    }

    @Test
    public void test08198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08198");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader2.parseOperationPath("/hi!", strMap38);
        io.swagger.annotations.Api api40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList41 = springMvcApiReader2.getSecurityRequirements(api40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "/hi!" + "'", str39, "/hi!");
    }

    @Test
    public void test08199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08199");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        java.lang.String str44 = springMvcApiReader2.parseOperationPath("", strMap43);
        io.swagger.models.Swagger swagger45 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(swagger45);
    }

    @Test
    public void test08200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08200");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        boolean boolean16 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        springMvcApiReader21.addTypeToSkippedTypes(type22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader21.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader28.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader28.parseOperationPath("", strMap35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList38 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList38, typeArray37);
        springMvcApiReader28.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList38);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader43.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader43.parseOperationPath("", strMap50);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.Class<?> wildcardClass55 = springMvcApiReader54.getClass();
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] { wildcardClass55 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader43.typesToSkip = typeSet57;
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader43.getTypesToSkip();
        springMvcApiReader28.setTypesToSkip(typeSet60);
        springMvcApiReader2.setTypesToSkip(typeSet60);
        io.swagger.models.Operation operation63 = null;
        io.swagger.annotations.ApiResponses apiResponses64 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation63, apiResponses64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(typeSet60);
    }

    @Test
    public void test08201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08201");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader33.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader33.parseOperationPath("", strMap40);
        io.swagger.annotations.Api api43 = null;
        boolean boolean44 = springMvcApiReader33.canReadApi(false, api43);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader33.parseOperationPath("hi!", strMap46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.Class<?> wildcardClass51 = springMvcApiReader50.getClass();
        springMvcApiReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        boolean boolean66 = springMvcApiReader58.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader58.parseOperationPath("hi!", strMap68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        springMvcApiReader72.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet74);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet81 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet81, typeArray80);
        springMvcApiReader79.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet81);
        springMvcApiReader72.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet81);
        io.swagger.models.Swagger swagger85 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader87 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger85, logAdapter86);
        java.lang.reflect.Type type88 = null;
        springMvcApiReader87.addTypeToSkippedTypes(type88);
        java.util.Set<java.lang.reflect.Type> typeSet90 = springMvcApiReader87.typesToSkip;
        springMvcApiReader72.setTypesToSkip(typeSet90);
        java.util.Set<java.lang.reflect.Type> typeSet92 = springMvcApiReader72.typesToSkip;
        springMvcApiReader58.typesToSkip = typeSet92;
        springMvcApiReader2.typesToSkip = typeSet92;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api97 = null;
        boolean boolean98 = springMvcApiReader2.canReadApi(true, api97);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/hi!" + "'", str47, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test08202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08202");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("hi!", strMap9);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.annotations.Api api14 = null;
        boolean boolean15 = springMvcApiReader2.canReadApi(false, api14);
        io.swagger.models.Operation operation18 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "", operation18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/hi!" + "'", str10, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test08203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08203");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        boolean boolean16 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        java.lang.String str21 = springMvcApiReader2.parseOperationPath("hi!", strMap20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        springMvcApiReader2.LOG = logAdapter22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger25 = null;
        springMvcApiReader2.swagger = swagger25;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/hi!" + "'", str21, "/hi!");
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNull(logAdapter27);
    }

    @Test
    public void test08204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08204");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader2.LOG = logAdapter23;
        io.swagger.models.Operation operation25 = null;
        io.swagger.annotations.ApiOperation apiOperation26 = null;
        springMvcApiReader2.updateTagsForOperation(operation25, apiOperation26);
        io.swagger.models.Swagger swagger28 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader2.parseOperationPath("", strMap30);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertNull(swagger28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test08205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08205");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        io.swagger.annotations.ApiOperation apiOperation13 = null;
        io.swagger.models.Operation operation14 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation13, operation14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
    }

    @Test
    public void test08206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08206");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        springMvcApiReader2.LOG = logAdapter10;
        java.util.Set<java.lang.reflect.Type> typeSet12 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource14 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger15 = springMvcApiReader2.read(springResource14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(swagger7);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNull(swagger13);
    }

    @Test
    public void test08207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08207");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        springMvcApiReader2.LOG = logAdapter15;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
    }

    @Test
    public void test08208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08208");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation7 = null;
        io.swagger.annotations.ApiOperation apiOperation8 = null;
        springMvcApiReader2.updateTagsForOperation(operation7, apiOperation8);
        java.util.Set<java.lang.reflect.Type> typeSet10 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader13.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        springMvcApiReader13.LOG = logAdapter19;
        springMvcApiReader13.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        springMvcApiReader13.LOG = logAdapter22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        boolean boolean34 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        io.swagger.models.Swagger swagger35 = null;
        springMvcApiReader26.swagger = swagger35;
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader26.getTypesToSkip();
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader55.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader55.parseOperationPath("", strMap62);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader55.canReadApi(false, api65);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader55.parseOperationPath("hi!", strMap68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.Class<?> wildcardClass73 = springMvcApiReader72.getClass();
        springMvcApiReader55.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        springMvcApiReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        springMvcApiReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        springMvcApiReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader13.parseOperationPath("hi!", strMap79);
        java.lang.Class<?> wildcardClass81 = springMvcApiReader13.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        io.swagger.annotations.Api api83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList84 = springMvcApiReader2.getSecurityRequirements(api83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "/hi!" + "'", str80, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test08209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08209");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader6 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger4, logAdapter5);
        java.lang.reflect.Type[] typeArray7 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet8 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet8, typeArray7);
        springMvcApiReader6.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet8);
        java.lang.annotation.Annotation[] annotationArray11 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList12 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList12, annotationArray11);
        boolean boolean14 = springMvcApiReader6.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList12);
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader6.swagger = swagger15;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray17 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap18 = springMvcApiReader6.parseResponseHeaders(responseHeaderArray17);
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader6.canReadApi(false, api20);
        io.swagger.models.Operation operation22 = null;
        io.swagger.annotations.ApiOperation apiOperation23 = null;
        springMvcApiReader6.updateTagsForOperation(operation22, apiOperation23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type type28 = null;
        springMvcApiReader27.addTypeToSkippedTypes(type28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader27.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader27.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        java.lang.String str34 = springMvcApiReader27.parseOperationPath("", strMap33);
        io.swagger.models.Operation operation35 = null;
        io.swagger.annotations.ApiOperation apiOperation36 = null;
        springMvcApiReader27.updateTagsForOperation(operation35, apiOperation36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader27.LOG;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        boolean boolean49 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList47);
        io.swagger.models.Swagger swagger50 = null;
        springMvcApiReader41.swagger = swagger50;
        java.lang.annotation.Annotation[] annotationArray52 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList53 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList53, annotationArray52);
        boolean boolean55 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList53);
        java.lang.Class<?> wildcardClass56 = annotationList53.getClass();
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        springMvcApiReader6.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        io.swagger.models.Operation operation59 = null;
        io.swagger.annotations.ApiOperation apiOperation60 = null;
        springMvcApiReader6.updateTagsForOperation(operation59, apiOperation60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        springMvcApiReader6.LOG = logAdapter62;
        java.lang.Class<?> wildcardClass64 = springMvcApiReader6.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(typeArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(annotationArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(annotationArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test08210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08210");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader2.swagger = swagger33;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(typeSet36);
    }

    @Test
    public void test08211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08211");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        springMvcApiReader42.addTypeToSkippedTypes(type43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader42.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader42.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader42.parseOperationPath("", strMap48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet54 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet54, typeArray53);
        springMvcApiReader52.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet54);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = springMvcApiReader52.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        java.lang.String str60 = springMvcApiReader52.parseOperationPath("", strMap59);
        io.swagger.annotations.Api api62 = null;
        boolean boolean63 = springMvcApiReader52.canReadApi(false, api62);
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader52.parseOperationPath("hi!", strMap65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.Class<?> wildcardClass70 = springMvcApiReader69.getClass();
        springMvcApiReader52.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet76 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet76, typeArray75);
        springMvcApiReader74.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet76);
        java.lang.annotation.Annotation[] annotationArray79 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList80 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList80, annotationArray79);
        boolean boolean82 = springMvcApiReader74.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList83 = springMvcApiReader42.getParameters((java.lang.reflect.Type) wildcardClass70, (java.util.List<java.lang.annotation.Annotation>) annotationList80);
        springMvcApiReader42.updateExtensionChain();
        io.swagger.annotations.Api api86 = null;
        boolean boolean87 = springMvcApiReader42.canReadApi(false, api86);
        java.util.Set<java.lang.reflect.Type> typeSet88 = springMvcApiReader42.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet88;
        java.util.Set<java.lang.reflect.Type> typeSet90 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation91 = null;
        io.swagger.annotations.ApiResponses apiResponses92 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation91, apiResponses92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(logAdapter57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "/hi!" + "'", str66, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(annotationArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(parameterList83);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(typeSet90);
    }

    @Test
    public void test08212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08212");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.models.Operation operation19 = null;
        io.swagger.annotations.ApiOperation apiOperation20 = null;
        springMvcApiReader2.updateTagsForOperation(operation19, apiOperation20);
        io.swagger.models.Operation operation22 = null;
        io.swagger.annotations.ApiOperation apiOperation23 = null;
        springMvcApiReader2.updateTagsForOperation(operation22, apiOperation23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader27.typesToSkip;
        springMvcApiReader27.updateExtensionChain();
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.Class<?> wildcardClass37 = springMvcApiReader36.getClass();
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.Class<?> wildcardClass42 = springMvcApiReader41.getClass();
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList46 = springMvcApiReader27.getParameters((java.lang.reflect.Type) wildcardClass42, (java.util.List<java.lang.annotation.Annotation>) annotationList44);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        io.swagger.models.Operation operation48 = null;
        io.swagger.annotations.ApiOperation apiOperation49 = null;
        springMvcApiReader2.updateTagsForOperation(operation48, apiOperation49);
        io.swagger.models.Operation operation51 = null;
        io.swagger.annotations.ApiOperation apiOperation52 = null;
        springMvcApiReader2.updateTagsForOperation(operation51, apiOperation52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader56.parseOperationPath("", strMap63);
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader56.canReadApi(false, api66);
        io.swagger.annotations.Api api69 = null;
        boolean boolean70 = springMvcApiReader56.canReadApi(true, api69);
        io.swagger.models.Swagger swagger71 = springMvcApiReader56.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader56.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader56.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet73;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(parameterList46);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(swagger71);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNotNull(typeSet73);
    }

    @Test
    public void test08213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08213");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader2.canReadApi(false, api47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger50 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger52 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        springMvcApiReader2.LOG = logAdapter53;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(swagger49);
        org.junit.Assert.assertNull(swagger50);
        org.junit.Assert.assertNull(swagger52);
        org.junit.Assert.assertNull(logAdapter55);
    }

    @Test
    public void test08214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08214");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api29 = null;
        boolean boolean30 = springMvcApiReader2.canReadApi(true, api29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeSet31);
    }

    @Test
    public void test08215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08215");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        boolean boolean19 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader11.swagger = swagger20;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        boolean boolean38 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        boolean boolean39 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader11.LOG;
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader43.parseOperationPath("/hi!", strMap45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader43.getTypesToSkip();
        springMvcApiReader11.setTypesToSkip(typeSet47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader51.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader51.parseOperationPath("", strMap58);
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList61 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList61, typeArray60);
        springMvcApiReader51.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList61);
        java.lang.String[] strArray64 = new java.lang.String[] {};
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap69 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray70 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList71 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList71, securityRequirementArray70);
        io.swagger.models.Operation operation73 = null;
        springMvcApiReader51.updateOperation(strArray64, strArray68, strMap69, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList71, operation73);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        java.lang.String str77 = springMvcApiReader51.parseOperationPath("", strMap76);
        springMvcApiReader51.updateExtensionChain();
        io.swagger.models.Swagger swagger79 = null;
        springMvcApiReader51.swagger = swagger79;
        io.swagger.annotations.Api api82 = null;
        boolean boolean83 = springMvcApiReader51.canReadApi(false, api82);
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader51.getTypesToSkip();
        springMvcApiReader11.typesToSkip = typeSet84;
        java.util.Set<java.lang.reflect.Type> typeSet86 = springMvcApiReader11.typesToSkip;
        java.lang.Class<?> wildcardClass87 = typeSet86.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter8);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(logAdapter56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(securityRequirementArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test08216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08216");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger9 = null;
        springMvcApiReader2.swagger = swagger9;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader19.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = springMvcApiReader19.swagger;
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type type50 = null;
        springMvcApiReader49.addTypeToSkippedTypes(type50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader49.typesToSkip;
        springMvcApiReader34.setTypesToSkip(typeSet52);
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader34.typesToSkip;
        io.swagger.models.Swagger swagger55 = null;
        springMvcApiReader34.swagger = swagger55;
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader34.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader34.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader34.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader34.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader34.parseOperationPath("hi!", strMap62);
        java.lang.Class<?> wildcardClass64 = springMvcApiReader34.getClass();
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet69 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet69, typeArray68);
        springMvcApiReader67.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet69);
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        boolean boolean75 = springMvcApiReader67.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader67.typesToSkip;
        io.swagger.models.Swagger swagger77 = null;
        springMvcApiReader67.swagger = swagger77;
        io.swagger.models.Swagger swagger79 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader81 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger79, logAdapter80);
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader84 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger82, logAdapter83);
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet86 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet86, typeArray85);
        springMvcApiReader84.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet86);
        java.lang.annotation.Annotation[] annotationArray89 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList90 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList90, annotationArray89);
        boolean boolean92 = springMvcApiReader84.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean93 = springMvcApiReader81.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean94 = springMvcApiReader67.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList95 = springMvcApiReader19.getParameters((java.lang.reflect.Type) wildcardClass64, (java.util.List<java.lang.annotation.Annotation>) annotationList90);
        java.util.Map<java.lang.String, java.lang.String> strMap96 = null;
        io.swagger.models.Operation operation97 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList95, strMap96, operation97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNull(swagger31);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "/hi!" + "'", str63, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(annotationArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(parameterList95);
    }

    @Test
    public void test08217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08217");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        springMvcApiReader2.LOG = logAdapter24;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test08218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08218");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet63 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet63, typeArray62);
        springMvcApiReader61.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet63);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = springMvcApiReader61.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader61.parseOperationPath("", strMap68);
        io.swagger.annotations.Api api71 = null;
        boolean boolean72 = springMvcApiReader61.canReadApi(false, api71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        java.lang.String str75 = springMvcApiReader61.parseOperationPath("hi!", strMap74);
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.Class<?> wildcardClass79 = springMvcApiReader78.getClass();
        springMvcApiReader61.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        io.swagger.models.Swagger swagger82 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(logAdapter66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/hi!" + "'", str75, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNull(swagger82);
    }

    @Test
    public void test08219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08219");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = null;
        springMvcApiReader2.typesToSkip = typeSet7;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        boolean boolean20 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        springMvcApiReader12.swagger = swagger21;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader12.LOG = logAdapter23;
        springMvcApiReader12.updateExtensionChain();
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        springMvcApiReader12.updateTagsForOperation(operation26, apiOperation27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader31.swagger = swagger40;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader44.swagger = swagger53;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        boolean boolean58 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean60 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean61 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        springMvcApiReader2.LOG = logAdapter62;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader2.canReadApi(false, api66);
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader2.typesToSkip;
        java.lang.reflect.Method method69 = null;
        io.swagger.models.Operation operation70 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method69, operation70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(typeSet9);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(typeSet68);
    }

    @Test
    public void test08220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08220");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(false, api26);
        java.lang.reflect.Type type28 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader32.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet37;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type type57 = null;
        springMvcApiReader56.addTypeToSkippedTypes(type57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader56.typesToSkip;
        springMvcApiReader41.setTypesToSkip(typeSet59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        java.lang.annotation.Annotation[] annotationArray68 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList69 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList69, annotationArray68);
        boolean boolean71 = springMvcApiReader63.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList69);
        io.swagger.models.Swagger swagger72 = null;
        springMvcApiReader63.swagger = swagger72;
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader63.getTypesToSkip();
        springMvcApiReader41.setTypesToSkip(typeSet74);
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader41.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet76;
        io.swagger.models.Operation operation78 = null;
        io.swagger.annotations.ApiOperation apiOperation79 = null;
        springMvcApiReader2.updateTagsForOperation(operation78, apiOperation79);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap84 = null;
        java.lang.String str85 = springMvcApiReader2.parseOperationPath("hi!", strMap84);
        io.swagger.models.Operation operation86 = null;
        io.swagger.annotations.ApiResponses apiResponses87 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation86, apiResponses87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(annotationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "/hi!" + "'", str85, "/hi!");
    }

    @Test
    public void test08221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08221");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader35.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader35.parseOperationPath("", strMap42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList45 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList45, typeArray44);
        springMvcApiReader35.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList45);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList45);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        boolean boolean63 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader55.swagger = swagger64;
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader55.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet66);
        io.swagger.models.Swagger swagger68 = null;
        springMvcApiReader2.swagger = swagger68;
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader2.parseOperationPath("hi!", strMap71);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        springMvcApiReader2.LOG = logAdapter73;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "/hi!" + "'", str72, "/hi!");
    }

    @Test
    public void test08222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08222");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Operation operation3 = null;
        io.swagger.annotations.ApiOperation apiOperation4 = null;
        springMvcApiReader2.updateTagsForOperation(operation3, apiOperation4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(swagger7);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(typeSet9);
    }

    @Test
    public void test08223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08223");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader18.canReadApi(false, api28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader18.parseOperationPath("hi!", strMap31);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.Class<?> wildcardClass36 = springMvcApiReader35.getClass();
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        io.swagger.models.Swagger swagger38 = null;
        springMvcApiReader18.swagger = swagger38;
        io.swagger.models.Swagger swagger40 = springMvcApiReader18.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader18.typesToSkip;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = springMvcApiReader44.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader44.parseOperationPath("", strMap51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.Class<?> wildcardClass56 = springMvcApiReader55.getClass();
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] { wildcardClass56 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader44.typesToSkip = typeSet58;
        io.swagger.models.Swagger swagger61 = springMvcApiReader44.swagger;
        java.lang.Class<?> wildcardClass62 = springMvcApiReader44.getClass();
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type type68 = null;
        springMvcApiReader67.addTypeToSkippedTypes(type68);
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader67.typesToSkip;
        java.lang.Class<?> wildcardClass71 = typeSet70.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        java.lang.reflect.Type type77 = null;
        springMvcApiReader76.addTypeToSkippedTypes(type77);
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader76.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader76.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = springMvcApiReader76.LOG;
        io.swagger.models.Swagger swagger82 = springMvcApiReader76.swagger;
        io.swagger.models.Swagger swagger83 = null;
        springMvcApiReader76.swagger = swagger83;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        springMvcApiReader76.LOG = logAdapter85;
        io.swagger.annotations.Api api88 = null;
        boolean boolean89 = springMvcApiReader76.canReadApi(true, api88);
        java.lang.Class<?> wildcardClass90 = springMvcApiReader76.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass90);
        java.util.Set<java.lang.reflect.Type> typeSet92 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNull(logAdapter14);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNull(swagger40);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(logAdapter49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(swagger61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNull(logAdapter81);
        org.junit.Assert.assertNull(swagger82);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(typeSet92);
    }

    @Test
    public void test08224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08224");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader2.getTypesToSkip();
        java.lang.reflect.Type type40 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type40);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader44.typesToSkip;
        springMvcApiReader44.updateExtensionChain();
        io.swagger.models.Operation operation55 = null;
        io.swagger.annotations.ApiOperation apiOperation56 = null;
        springMvcApiReader44.updateTagsForOperation(operation55, apiOperation56);
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader44.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet58);
        io.swagger.annotations.Api api61 = null;
        boolean boolean62 = springMvcApiReader2.canReadApi(false, api61);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource63 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger64 = springMvcApiReader2.read(springResource63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test08225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08225");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type type23 = null;
        springMvcApiReader22.addTypeToSkippedTypes(type23);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader22.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader22.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader2.parseOperationPath("hi!", strMap29);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        springMvcApiReader2.LOG = logAdapter32;
        io.swagger.annotations.Api api35 = null;
        boolean boolean36 = springMvcApiReader2.canReadApi(true, api35);
        io.swagger.annotations.Api api38 = null;
        boolean boolean39 = springMvcApiReader2.canReadApi(false, api38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        io.swagger.models.Operation operation57 = null;
        io.swagger.annotations.ApiOperation apiOperation58 = null;
        springMvcApiReader42.updateTagsForOperation(operation57, apiOperation58);
        io.swagger.models.Operation operation60 = null;
        io.swagger.annotations.ApiOperation apiOperation61 = null;
        springMvcApiReader42.updateTagsForOperation(operation60, apiOperation61);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader42.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet63;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(typeSet63);
    }

    @Test
    public void test08226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08226");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        io.swagger.models.Operation operation15 = null;
        io.swagger.annotations.ApiOperation apiOperation16 = null;
        springMvcApiReader2.updateTagsForOperation(operation15, apiOperation16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type18);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader2.swagger = swagger20;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = springMvcApiReader25.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader25.parseOperationPath("hi!", strMap32);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        springMvcApiReader25.LOG = logAdapter34;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList48 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList48, typeArray47);
        springMvcApiReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        java.lang.String[] strArray51 = new java.lang.String[] {};
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap56 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray57 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList58 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList58, securityRequirementArray57);
        io.swagger.models.Operation operation60 = null;
        springMvcApiReader38.updateOperation(strArray51, strArray55, strMap56, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList58, operation60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader38.parseOperationPath("", strMap63);
        springMvcApiReader38.updateExtensionChain();
        io.swagger.models.Swagger swagger66 = null;
        springMvcApiReader38.swagger = swagger66;
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader38.typesToSkip;
        io.swagger.models.Swagger swagger69 = null;
        springMvcApiReader38.swagger = swagger69;
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader38.canReadApi(false, api72);
        java.lang.Class<?> wildcardClass74 = springMvcApiReader38.getClass();
        springMvcApiReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        springMvcApiReader2.LOG = logAdapter78;
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(logAdapter30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "/hi!" + "'", str33, "/hi!");
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(securityRequirementArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test08227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08227");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader13.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        java.lang.String str21 = springMvcApiReader13.parseOperationPath("", strMap20);
        io.swagger.annotations.Api api23 = null;
        boolean boolean24 = springMvcApiReader13.canReadApi(false, api23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader13.parseOperationPath("hi!", strMap26);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = springMvcApiReader45.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader45.parseOperationPath("", strMap52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader45.canReadApi(false, api55);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader45.parseOperationPath("hi!", strMap58);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.Class<?> wildcardClass63 = springMvcApiReader62.getClass();
        springMvcApiReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        springMvcApiReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        springMvcApiReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        io.swagger.models.Operation operation67 = null;
        io.swagger.annotations.ApiOperation apiOperation68 = null;
        springMvcApiReader13.updateTagsForOperation(operation67, apiOperation68);
        springMvcApiReader13.updateExtensionChain();
        java.lang.Class<?> wildcardClass71 = springMvcApiReader13.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        java.lang.String str75 = springMvcApiReader2.parseOperationPath("hi!", strMap74);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        springMvcApiReader2.LOG = logAdapter76;
        java.util.List<io.swagger.models.parameters.Parameter> parameterList78 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        io.swagger.models.Operation operation80 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList78, strMap79, operation80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeSet9);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(logAdapter50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/hi!" + "'", str75, "/hi!");
    }

    @Test
    public void test08228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08228");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        boolean boolean16 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList14);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Swagger swagger19 = null;
        springMvcApiReader2.swagger = swagger19;
        io.swagger.models.Operation operation21 = null;
        io.swagger.annotations.ApiOperation apiOperation22 = null;
        springMvcApiReader2.updateTagsForOperation(operation21, apiOperation22);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray24 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap25 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray24);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(strMap25);
    }

    @Test
    public void test08229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08229");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        boolean boolean37 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList35);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader29.typesToSkip;
        springMvcApiReader29.updateExtensionChain();
        io.swagger.models.Operation operation40 = null;
        io.swagger.annotations.ApiOperation apiOperation41 = null;
        springMvcApiReader29.updateTagsForOperation(operation40, apiOperation41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        boolean boolean53 = springMvcApiReader45.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader56.parseOperationPath("", strMap63);
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader56.canReadApi(false, api66);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader56.parseOperationPath("hi!", strMap69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.Class<?> wildcardClass74 = springMvcApiReader73.getClass();
        springMvcApiReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = null;
        java.lang.String str78 = springMvcApiReader56.parseOperationPath("/hi!", strMap77);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray79 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap80 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray79);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap81 = springMvcApiReader45.parseResponseHeaders(responseHeaderArray79);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap82 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray79);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap83 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray79);
        io.swagger.models.Swagger swagger84 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger85 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation86 = null;
        io.swagger.annotations.ApiResponses apiResponses87 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation86, apiResponses87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/hi!" + "'", str78, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNull(swagger84);
        org.junit.Assert.assertNull(swagger85);
    }

    @Test
    public void test08230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08230");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertNotNull(typeSet45);
    }

    @Test
    public void test08231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08231");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("", strMap23);
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(false, api26);
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet28);
    }

    @Test
    public void test08232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08232");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        springMvcApiReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader57.typesToSkip;
        springMvcApiReader57.updateExtensionChain();
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.Class<?> wildcardClass67 = springMvcApiReader66.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader2.parseOperationPath("", strMap71);
        io.swagger.models.Swagger swagger73 = springMvcApiReader2.swagger;
        java.lang.reflect.Type type74 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type74);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNull(swagger73);
    }

    @Test
    public void test08233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08233");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap19 = null;
        io.swagger.annotations.Api api20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = springMvcApiReader2.updateTagsForApi(strMap19, api20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNull(swagger17);
        org.junit.Assert.assertNull(logAdapter18);
    }

    @Test
    public void test08234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08234");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger19 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        springMvcApiReader2.LOG = logAdapter20;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api24 = null;
        boolean boolean25 = springMvcApiReader2.canReadApi(false, api24);
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        springMvcApiReader2.updateTagsForOperation(operation26, apiOperation27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        springMvcApiReader2.LOG = logAdapter29;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertNull(swagger19);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test08235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08235");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter3 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap5 = null;
        java.lang.String str6 = springMvcApiReader2.parseOperationPath("", strMap5);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        springMvcApiReader12.swagger = swagger32;
        io.swagger.models.Swagger swagger34 = springMvcApiReader12.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader12.typesToSkip;
        springMvcApiReader12.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader12.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader12.parseOperationPath("hi!", strMap39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader43.typesToSkip;
        springMvcApiReader43.updateExtensionChain();
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.Class<?> wildcardClass53 = springMvcApiReader52.getClass();
        springMvcApiReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.Class<?> wildcardClass58 = springMvcApiReader57.getClass();
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList62 = springMvcApiReader43.getParameters((java.lang.reflect.Type) wildcardClass58, (java.util.List<java.lang.annotation.Annotation>) annotationList60);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet67 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet67, typeArray66);
        springMvcApiReader65.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet67);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = springMvcApiReader65.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap72 = null;
        java.lang.String str73 = springMvcApiReader65.parseOperationPath("", strMap72);
        java.lang.reflect.Type[] typeArray74 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList75 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList75, typeArray74);
        springMvcApiReader65.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList75);
        io.swagger.models.Swagger swagger78 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader80 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger78, logAdapter79);
        java.lang.reflect.Type[] typeArray81 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet82 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet82, typeArray81);
        springMvcApiReader80.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet82);
        java.lang.annotation.Annotation[] annotationArray85 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList86 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList86, annotationArray85);
        boolean boolean88 = springMvcApiReader80.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList86);
        boolean boolean89 = springMvcApiReader65.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList86);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList90 = springMvcApiReader12.getParameters((java.lang.reflect.Type) wildcardClass58, (java.util.List<java.lang.annotation.Annotation>) annotationList86);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass58);
        org.junit.Assert.assertNull(logAdapter3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNull(swagger34);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(parameterList62);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(logAdapter70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(annotationArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(parameterList90);
    }

    @Test
    public void test08236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08236");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(true, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("/hi!", strMap15);
        java.lang.Class<?> wildcardClass17 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test08237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08237");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.Class<?> wildcardClass54 = springMvcApiReader53.getClass();
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] { wildcardClass54 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet56 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet56, typeArray55);
        springMvcApiReader42.typesToSkip = typeSet56;
        java.lang.Class<?> wildcardClass59 = typeSet56.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(typeSet61);
    }

    @Test
    public void test08238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08238");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray25 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap26 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader29.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader29.parseOperationPath("", strMap36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList39 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList39, typeArray38);
        springMvcApiReader29.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList39);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap47 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray48 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList49 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList49, securityRequirementArray48);
        io.swagger.models.Operation operation51 = null;
        springMvcApiReader29.updateOperation(strArray42, strArray46, strMap47, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList49, operation51);
        java.lang.String[] strArray58 = new java.lang.String[] { "/hi!", "", "", "", "" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap59 = null;
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader62.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader62.parseOperationPath("", strMap69);
        java.lang.reflect.Type[] typeArray71 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList72 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList72, typeArray71);
        springMvcApiReader62.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        java.lang.String[] strArray75 = new java.lang.String[] {};
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap80 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray81 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList82 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList82, securityRequirementArray81);
        io.swagger.models.Operation operation84 = null;
        springMvcApiReader62.updateOperation(strArray75, strArray79, strMap80, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList82, operation84);
        io.swagger.models.Operation operation86 = null;
        springMvcApiReader2.updateOperation(strArray46, strArray58, strMap59, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList82, operation86);
        java.util.Set<java.lang.reflect.Type> typeSet88 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(securityRequirementArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(logAdapter67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(securityRequirementArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(typeSet88);
    }

    @Test
    public void test08239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08239");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        springMvcApiReader42.addTypeToSkippedTypes(type43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader42.typesToSkip;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader48.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader48.parseOperationPath("", strMap55);
        io.swagger.annotations.Api api58 = null;
        boolean boolean59 = springMvcApiReader48.canReadApi(false, api58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        java.lang.String str62 = springMvcApiReader48.parseOperationPath("hi!", strMap61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.Class<?> wildcardClass66 = springMvcApiReader65.getClass();
        springMvcApiReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader48.parseOperationPath("/hi!", strMap69);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray71 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray71);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap73 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray71);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray71);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        springMvcApiReader2.LOG = logAdapter76;
        io.swagger.models.Swagger swagger78 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap81 = null;
        java.lang.String str82 = springMvcApiReader2.parseOperationPath("hi!", strMap81);
        io.swagger.annotations.Api api84 = null;
        boolean boolean85 = springMvcApiReader2.canReadApi(true, api84);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "/hi!" + "'", str62, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(swagger78);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "/hi!" + "'", str82, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test08240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08240");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader24.canReadApi(false, api34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader24.parseOperationPath("hi!", strMap37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.Class<?> wildcardClass42 = springMvcApiReader41.getClass();
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader24.parseOperationPath("/hi!", strMap45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray47);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray47);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader2.parseOperationPath("", strMap51);
        io.swagger.models.Operation operation53 = null;
        io.swagger.annotations.ApiOperation apiOperation54 = null;
        springMvcApiReader2.updateTagsForOperation(operation53, apiOperation54);
        io.swagger.models.Swagger swagger56 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(swagger56);
    }

    @Test
    public void test08241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08241");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type type27 = null;
        springMvcApiReader26.addTypeToSkippedTypes(type27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader26.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader26.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        java.lang.Class<?> wildcardClass47 = typeSet42.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api51 = null;
        boolean boolean52 = springMvcApiReader2.canReadApi(false, api51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        java.lang.String str55 = springMvcApiReader2.parseOperationPath("", strMap54);
        io.swagger.models.Swagger swagger56 = null;
        springMvcApiReader2.swagger = swagger56;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNull(logAdapter49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test08242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08242");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList34 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList34, typeArray33);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList34);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader24.updateOperation(strArray37, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.String[] strArray54 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader58.updateOperation(strArray71, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray37, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation82);
        io.swagger.models.Swagger swagger84 = null;
        springMvcApiReader2.swagger = swagger84;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation87 = null;
        io.swagger.annotations.ApiOperation apiOperation88 = null;
        springMvcApiReader2.updateTagsForOperation(operation87, apiOperation88);
        io.swagger.models.Swagger swagger90 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation94 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "", operation94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(logAdapter86);
        org.junit.Assert.assertNull(swagger90);
        org.junit.Assert.assertNotNull(typeSet91);
    }

    @Test
    public void test08243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08243");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type type32 = null;
        springMvcApiReader31.addTypeToSkippedTypes(type32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader31.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader31.typesToSkip;
        springMvcApiReader17.setTypesToSkip(typeSet35);
        springMvcApiReader2.typesToSkip = typeSet35;
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader2.canReadApi(true, api39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeSet42);
    }

    @Test
    public void test08244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08244");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        boolean boolean26 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader29.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader29.parseOperationPath("", strMap36);
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader29.canReadApi(false, api39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader29.parseOperationPath("hi!", strMap42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.Class<?> wildcardClass47 = springMvcApiReader46.getClass();
        springMvcApiReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader29.parseOperationPath("/hi!", strMap50);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray52);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray52);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray52);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        io.swagger.models.Swagger swagger67 = springMvcApiReader58.swagger;
        io.swagger.annotations.Api api69 = null;
        boolean boolean70 = springMvcApiReader58.canReadApi(false, api69);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader58.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader58.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet72);
        io.swagger.models.Operation operation74 = null;
        io.swagger.annotations.ApiOperation apiOperation75 = null;
        springMvcApiReader2.updateTagsForOperation(operation74, apiOperation75);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet81 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet81, typeArray80);
        springMvcApiReader79.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet81);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = springMvcApiReader79.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap86 = null;
        java.lang.String str87 = springMvcApiReader79.parseOperationPath("", strMap86);
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList89 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList89, typeArray88);
        springMvcApiReader79.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        io.swagger.models.Operation operation93 = null;
        io.swagger.annotations.ApiOperation apiOperation94 = null;
        springMvcApiReader2.updateTagsForOperation(operation93, apiOperation94);
        io.swagger.annotations.Api api96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet97 = springMvcApiReader2.extractTags(api96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/hi!" + "'", str51, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNull(swagger67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(logAdapter84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test08245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08245");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        springMvcApiReader2.LOG = logAdapter16;
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.typesToSkip;
        java.lang.Class<?> wildcardClass20 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test08246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08246");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation61 = null;
        io.swagger.annotations.ApiOperation apiOperation62 = null;
        springMvcApiReader2.updateTagsForOperation(operation61, apiOperation62);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertNotNull(typeSet60);
    }

    @Test
    public void test08247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08247");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation9 = null;
        io.swagger.annotations.ApiOperation apiOperation10 = null;
        springMvcApiReader2.updateTagsForOperation(operation9, apiOperation10);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource16 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger17 = springMvcApiReader2.read(springResource16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNull(logAdapter15);
    }

    @Test
    public void test08248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08248");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(false, api8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger12 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(logAdapter10);
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNull(swagger12);
    }

    @Test
    public void test08249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08249");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader2.parseOperationPath("hi!", strMap39);
        io.swagger.models.Swagger swagger41 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader2.canReadApi(false, api44);
        java.lang.reflect.Method method46 = null;
        io.swagger.models.Operation operation47 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method46, operation47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNull(swagger41);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test08250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08250");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        java.lang.annotation.Annotation[] annotationArray30 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList31 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList31, annotationArray30);
        boolean boolean33 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        springMvcApiReader19.LOG = logAdapter34;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type type39 = null;
        springMvcApiReader38.addTypeToSkippedTypes(type39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader38.typesToSkip;
        springMvcApiReader19.setTypesToSkip(typeSet41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = springMvcApiReader45.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader45.parseOperationPath("", strMap52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList55 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList55, typeArray54);
        springMvcApiReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = springMvcApiReader60.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader60.parseOperationPath("", strMap67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.Class<?> wildcardClass72 = springMvcApiReader71.getClass();
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] { wildcardClass72 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        springMvcApiReader60.typesToSkip = typeSet74;
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader60.getTypesToSkip();
        springMvcApiReader45.setTypesToSkip(typeSet77);
        springMvcApiReader19.setTypesToSkip(typeSet77);
        springMvcApiReader2.setTypesToSkip(typeSet77);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = null;
        springMvcApiReader2.LOG = logAdapter81;
        io.swagger.models.Operation operation85 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "", operation85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(logAdapter50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(logAdapter65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(typeSet77);
    }

    @Test
    public void test08251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08251");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader24.canReadApi(false, api34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader24.parseOperationPath("hi!", strMap37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.Class<?> wildcardClass42 = springMvcApiReader41.getClass();
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader24.parseOperationPath("/hi!", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        boolean boolean65 = springMvcApiReader57.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        io.swagger.models.Swagger swagger66 = null;
        springMvcApiReader57.swagger = swagger66;
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type[] typeArray71 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet72 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet72, typeArray71);
        springMvcApiReader70.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet72);
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        boolean boolean78 = springMvcApiReader70.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        io.swagger.models.Swagger swagger79 = null;
        springMvcApiReader70.swagger = swagger79;
        java.lang.annotation.Annotation[] annotationArray81 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList82 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList82, annotationArray81);
        boolean boolean84 = springMvcApiReader70.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        boolean boolean85 = springMvcApiReader57.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        boolean boolean86 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        boolean boolean87 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter88 = null;
        springMvcApiReader2.LOG = logAdapter88;
        java.lang.Class<?> wildcardClass90 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(annotationArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test08252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08252");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type type36 = null;
        springMvcApiReader35.addTypeToSkippedTypes(type36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader35.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader35.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader35.LOG;
        springMvcApiReader35.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader35.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader35.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger46 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger47 = null;
        springMvcApiReader2.swagger = swagger47;
        io.swagger.annotations.Api api49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList50 = springMvcApiReader2.getSecurityRequirements(api49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNull(swagger46);
    }

    @Test
    public void test08253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08253");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        boolean boolean26 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader18.swagger = swagger27;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        springMvcApiReader18.LOG = logAdapter29;
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        springMvcApiReader48.addTypeToSkippedTypes(type49);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader48.typesToSkip;
        springMvcApiReader33.setTypesToSkip(typeSet51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader33.getTypesToSkip();
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader33.canReadApi(true, api55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type type60 = null;
        springMvcApiReader59.addTypeToSkippedTypes(type60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader59.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader59.getTypesToSkip();
        springMvcApiReader33.typesToSkip = typeSet63;
        springMvcApiReader18.setTypesToSkip(typeSet63);
        springMvcApiReader2.typesToSkip = typeSet63;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray67 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap68 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray67);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader2.parseOperationPath("hi!", strMap70);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader2.parseOperationPath("", strMap73);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(swagger15);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "/hi!" + "'", str71, "/hi!");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
    }

    @Test
    public void test08254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08254");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader2.parseOperationPath("", strMap46);
        io.swagger.models.Swagger swagger48 = null;
        springMvcApiReader2.swagger = swagger48;
        io.swagger.models.Swagger swagger50 = null;
        springMvcApiReader2.swagger = swagger50;
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader2.parseOperationPath("/hi!", strMap53);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        boolean boolean65 = springMvcApiReader57.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader57.typesToSkip;
        io.swagger.models.Swagger swagger67 = null;
        springMvcApiReader57.swagger = swagger67;
        springMvcApiReader57.updateExtensionChain();
        io.swagger.models.Swagger swagger70 = springMvcApiReader57.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader57.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet71);
        io.swagger.annotations.Api api73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet74 = springMvcApiReader2.extractTags(api73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "/hi!" + "'", str54, "/hi!");
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNull(swagger70);
        org.junit.Assert.assertNotNull(typeSet71);
    }

    @Test
    public void test08255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08255");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        io.swagger.annotations.Api api19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet20 = springMvcApiReader2.extractTags(api19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
    }

    @Test
    public void test08256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08256");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader17.LOG = logAdapter23;
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        java.lang.annotation.Annotation[] annotationArray32 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList33 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList33, annotationArray32);
        boolean boolean35 = springMvcApiReader27.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList33);
        io.swagger.models.Swagger swagger36 = null;
        springMvcApiReader27.swagger = swagger36;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray38 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap39 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = springMvcApiReader57.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader57.parseOperationPath("", strMap64);
        io.swagger.annotations.Api api67 = null;
        boolean boolean68 = springMvcApiReader57.canReadApi(false, api67);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader57.parseOperationPath("hi!", strMap70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.Class<?> wildcardClass75 = springMvcApiReader74.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = springMvcApiReader42.LOG;
        io.swagger.models.Swagger swagger79 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader81 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger79, logAdapter80);
        java.lang.reflect.Type[] typeArray82 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet83 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet83, typeArray82);
        springMvcApiReader81.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet83);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = springMvcApiReader81.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap88 = null;
        java.lang.String str89 = springMvcApiReader81.parseOperationPath("", strMap88);
        java.lang.reflect.Type[] typeArray90 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList91 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList91, typeArray90);
        springMvcApiReader81.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        springMvcApiReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        springMvcApiReader27.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        springMvcApiReader17.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter98 = null;
        springMvcApiReader2.LOG = logAdapter98;
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(logAdapter62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "/hi!" + "'", str71, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNull(logAdapter78);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(logAdapter86);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNotNull(typeArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test08257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08257");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader24.canReadApi(false, api34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader24.parseOperationPath("hi!", strMap37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.Class<?> wildcardClass42 = springMvcApiReader41.getClass();
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader24.parseOperationPath("/hi!", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        boolean boolean65 = springMvcApiReader57.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        io.swagger.models.Swagger swagger66 = null;
        springMvcApiReader57.swagger = swagger66;
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader70 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger68, logAdapter69);
        java.lang.reflect.Type[] typeArray71 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet72 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet72, typeArray71);
        springMvcApiReader70.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet72);
        java.lang.annotation.Annotation[] annotationArray75 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList76 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList76, annotationArray75);
        boolean boolean78 = springMvcApiReader70.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList76);
        io.swagger.models.Swagger swagger79 = null;
        springMvcApiReader70.swagger = swagger79;
        java.lang.annotation.Annotation[] annotationArray81 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList82 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList82, annotationArray81);
        boolean boolean84 = springMvcApiReader70.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        boolean boolean85 = springMvcApiReader57.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        boolean boolean86 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        boolean boolean87 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList82);
        java.util.Set<java.lang.reflect.Type> typeSet88 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation91 = null;
        io.swagger.annotations.ApiOperation apiOperation92 = null;
        springMvcApiReader2.updateTagsForOperation(operation91, apiOperation92);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter94 = null;
        springMvcApiReader2.LOG = logAdapter94;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(annotationArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(annotationArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(typeSet88);
    }

    @Test
    public void test08258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08258");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        boolean boolean16 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        springMvcApiReader21.addTypeToSkippedTypes(type22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader21.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader28.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader28.parseOperationPath("", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] { wildcardClass40 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader28.typesToSkip = typeSet42;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader28.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader28.parseOperationPath("/hi!", strMap47);
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader28.getTypesToSkip();
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet54 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet54, typeArray53);
        springMvcApiReader52.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet54);
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        boolean boolean60 = springMvcApiReader52.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        io.swagger.models.Swagger swagger61 = null;
        springMvcApiReader52.swagger = swagger61;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray63 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap64 = springMvcApiReader52.parseResponseHeaders(responseHeaderArray63);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap65 = springMvcApiReader28.parseResponseHeaders(responseHeaderArray63);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap66 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray63);
        io.swagger.models.Operation operation67 = null;
        io.swagger.annotations.ApiOperation apiOperation68 = null;
        springMvcApiReader2.updateTagsForOperation(operation67, apiOperation68);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strMap66);
    }

    @Test
    public void test08259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08259");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation9 = null;
        io.swagger.annotations.ApiOperation apiOperation10 = null;
        springMvcApiReader2.updateTagsForOperation(operation9, apiOperation10);
        java.util.Set<java.lang.reflect.Type> typeSet12 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        java.lang.annotation.Annotation[] annotationArray21 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList22 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList22, annotationArray21);
        boolean boolean24 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList22);
        io.swagger.models.Swagger swagger25 = null;
        springMvcApiReader16.swagger = swagger25;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        springMvcApiReader16.LOG = logAdapter27;
        springMvcApiReader16.updateExtensionChain();
        java.lang.Class<?> wildcardClass30 = springMvcApiReader16.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.annotations.Api api32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList33 = springMvcApiReader2.getSecurityRequirements(api32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test08260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08260");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        boolean boolean56 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        boolean boolean57 = springMvcApiReader45.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        boolean boolean58 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.models.Swagger swagger59 = null;
        springMvcApiReader2.swagger = swagger59;
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader2.parseOperationPath("hi!", strMap62);
        io.swagger.annotations.ApiOperation apiOperation64 = null;
        io.swagger.models.Operation operation65 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation64, operation65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "/hi!" + "'", str63, "/hi!");
    }

    @Test
    public void test08261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08261");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation41 = null;
        io.swagger.annotations.ApiOperation apiOperation42 = null;
        springMvcApiReader2.updateTagsForOperation(operation41, apiOperation42);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(typeSet45);
    }

    @Test
    public void test08262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08262");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.Class<?> wildcardClass12 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        springMvcApiReader34.addTypeToSkippedTypes(type35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader34.typesToSkip;
        springMvcApiReader19.setTypesToSkip(typeSet37);
        io.swagger.models.Swagger swagger39 = springMvcApiReader19.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader19.getTypesToSkip();
        io.swagger.models.Swagger swagger41 = null;
        springMvcApiReader19.swagger = swagger41;
        java.lang.Class<?> wildcardClass43 = springMvcApiReader19.getClass();
        java.util.List<java.lang.annotation.Annotation> annotationList44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.parameters.Parameter> parameterList45 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass43, annotationList44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNull(swagger39);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test08263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08263");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        boolean boolean20 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        springMvcApiReader12.swagger = swagger21;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray23 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap24 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader27.LOG;
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = springMvcApiReader66.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader66.parseOperationPath("", strMap73);
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList76 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList76, typeArray75);
        springMvcApiReader66.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        springMvcApiReader27.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        springMvcApiReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        io.swagger.models.Swagger swagger82 = springMvcApiReader2.swagger;
        io.swagger.models.parameters.Parameter[] parameterArray83 = new io.swagger.models.parameters.Parameter[] {};
        java.util.ArrayList<io.swagger.models.parameters.Parameter> parameterList84 = new java.util.ArrayList<io.swagger.models.parameters.Parameter>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.parameters.Parameter>) parameterList84, parameterArray83);
        java.util.Map<java.lang.String, java.lang.String> strMap86 = null;
        io.swagger.models.Operation operation87 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters((java.util.List<io.swagger.models.parameters.Parameter>) parameterList84, strMap86, operation87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(logAdapter71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(swagger82);
        org.junit.Assert.assertNotNull(parameterArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test08264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08264");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = null;
        springMvcApiReader2.setTypesToSkip(typeSet16);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test08265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08265");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        springMvcApiReader12.addTypeToSkippedTypes(type13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader12.typesToSkip;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader18.canReadApi(false, api28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader18.parseOperationPath("hi!", strMap31);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.Class<?> wildcardClass36 = springMvcApiReader35.getClass();
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader18.parseOperationPath("/hi!", strMap39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray41);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray41);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray41);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader2.parseOperationPath("/hi!", strMap46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.ApiOperation apiOperation49 = null;
        io.swagger.models.Operation operation50 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation49, operation50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/hi!" + "'", str47, "/hi!");
        org.junit.Assert.assertNotNull(typeSet48);
    }

    @Test
    public void test08266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08266");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap11 = null;
        io.swagger.annotations.Api api12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap13 = springMvcApiReader2.updateTagsForApi(strMap11, api12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
    }

    @Test
    public void test08267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08267");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray13);
        io.swagger.annotations.Api api16 = null;
        boolean boolean17 = springMvcApiReader2.canReadApi(false, api16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        java.lang.annotation.Annotation[] annotationArray25 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList26 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList26, annotationArray25);
        boolean boolean28 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList26);
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader20.swagger = swagger29;
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        boolean boolean34 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        java.lang.Class<?> wildcardClass35 = annotationList32.getClass();
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        java.lang.annotation.Annotation[] annotationArray46 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList47 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList47, annotationArray46);
        boolean boolean49 = springMvcApiReader41.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList47);
        boolean boolean50 = springMvcApiReader38.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList47);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass35, (java.util.List<java.lang.annotation.Annotation>) annotationList47);
        io.swagger.annotations.Api api53 = null;
        boolean boolean54 = springMvcApiReader2.canReadApi(true, api53);
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeSet55);
    }

    @Test
    public void test08268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08268");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("hi!", strMap23);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader2.LOG = logAdapter25;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        io.swagger.annotations.ApiOperation apiOperation28 = null;
        io.swagger.models.Operation operation29 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation28, operation29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNull(logAdapter27);
    }

    @Test
    public void test08269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08269");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter3 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger4 = null;
        springMvcApiReader2.swagger = swagger4;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        java.lang.annotation.Annotation[] annotationArray15 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList16 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList16, annotationArray15);
        boolean boolean18 = springMvcApiReader10.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList16);
        io.swagger.models.Swagger swagger19 = null;
        springMvcApiReader10.swagger = swagger19;
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader10.getTypesToSkip();
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type type25 = null;
        springMvcApiReader24.addTypeToSkippedTypes(type25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader24.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader10.setTypesToSkip(typeSet28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type type48 = null;
        springMvcApiReader47.addTypeToSkippedTypes(type48);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader47.typesToSkip;
        springMvcApiReader32.setTypesToSkip(typeSet50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader32.getTypesToSkip();
        java.lang.Class<?> wildcardClass53 = springMvcApiReader32.getClass();
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        java.lang.annotation.Annotation[] annotationArray61 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList62 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList62, annotationArray61);
        boolean boolean64 = springMvcApiReader56.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList62);
        io.swagger.models.Swagger swagger65 = null;
        springMvcApiReader56.swagger = swagger65;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray67 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap68 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet73 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet73, typeArray72);
        springMvcApiReader71.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet73);
        io.swagger.models.Swagger swagger76 = springMvcApiReader71.swagger;
        io.swagger.models.Swagger swagger77 = springMvcApiReader71.swagger;
        io.swagger.models.Swagger swagger78 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader80 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger78, logAdapter79);
        java.lang.reflect.Type[] typeArray81 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet82 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet82, typeArray81);
        springMvcApiReader80.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet82);
        java.lang.annotation.Annotation[] annotationArray85 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList86 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList86, annotationArray85);
        boolean boolean88 = springMvcApiReader80.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList86);
        boolean boolean89 = springMvcApiReader71.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList86);
        boolean boolean90 = springMvcApiReader56.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList86);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList91 = springMvcApiReader10.getParameters((java.lang.reflect.Type) wildcardClass53, (java.util.List<java.lang.annotation.Annotation>) annotationList86);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        java.util.Set<java.lang.reflect.Type> typeSet93 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNull(logAdapter3);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(annotationArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(swagger76);
        org.junit.Assert.assertNull(swagger77);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(annotationArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(parameterList91);
        org.junit.Assert.assertNotNull(typeSet93);
    }

    @Test
    public void test08270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08270");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        springMvcApiReader2.LOG = logAdapter22;
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader2.LOG = logAdapter25;
        io.swagger.models.Operation operation27 = null;
        io.swagger.annotations.ApiOperation apiOperation28 = null;
        springMvcApiReader2.updateTagsForOperation(operation27, apiOperation28);
        io.swagger.annotations.Api api31 = null;
        boolean boolean32 = springMvcApiReader2.canReadApi(true, api31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        springMvcApiReader2.LOG = logAdapter33;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test08271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08271");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger9 = null;
        springMvcApiReader2.swagger = swagger9;
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        boolean boolean21 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader13.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        boolean boolean34 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        io.swagger.models.Swagger swagger35 = null;
        springMvcApiReader26.swagger = swagger35;
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        boolean boolean40 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList38);
        boolean boolean41 = springMvcApiReader13.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList38);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader13.LOG;
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        boolean boolean53 = springMvcApiReader45.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader56.parseOperationPath("", strMap63);
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader56.canReadApi(false, api66);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader56.parseOperationPath("hi!", strMap69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.Class<?> wildcardClass74 = springMvcApiReader73.getClass();
        springMvcApiReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = null;
        java.lang.String str78 = springMvcApiReader56.parseOperationPath("/hi!", strMap77);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray79 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap80 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray79);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap81 = springMvcApiReader45.parseResponseHeaders(responseHeaderArray79);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap82 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray79);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap83 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray79);
        io.swagger.models.Operation operation84 = null;
        io.swagger.annotations.ApiOperation apiOperation85 = null;
        springMvcApiReader2.updateTagsForOperation(operation84, apiOperation85);
        io.swagger.models.Swagger swagger87 = null;
        springMvcApiReader2.swagger = swagger87;
        java.util.Map<java.lang.String, java.lang.String> strMap90 = null;
        java.lang.String str91 = springMvcApiReader2.parseOperationPath("/hi!", strMap90);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/hi!" + "'", str78, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "/hi!" + "'", str91, "/hi!");
    }

    @Test
    public void test08272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08272");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(true, api12);
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        io.swagger.annotations.Api api17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet18 = springMvcApiReader2.extractTags(api17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test08273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08273");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter3 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet4 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation5 = null;
        io.swagger.annotations.ApiOperation apiOperation6 = null;
        springMvcApiReader2.updateTagsForOperation(operation5, apiOperation6);
        io.swagger.annotations.Api api9 = null;
        boolean boolean10 = springMvcApiReader2.canReadApi(false, api9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader28.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader28.parseOperationPath("", strMap35);
        io.swagger.annotations.Api api38 = null;
        boolean boolean39 = springMvcApiReader28.canReadApi(false, api38);
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader28.parseOperationPath("hi!", strMap41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.Class<?> wildcardClass46 = springMvcApiReader45.getClass();
        springMvcApiReader28.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        springMvcApiReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = springMvcApiReader13.LOG;
        springMvcApiReader13.updateExtensionChain();
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader53.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = springMvcApiReader53.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader53.parseOperationPath("", strMap60);
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList63 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList63, typeArray62);
        springMvcApiReader53.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList63);
        springMvcApiReader13.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList63);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList63);
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation71 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "hi!", operation71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(logAdapter3);
        org.junit.Assert.assertNotNull(typeSet4);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "/hi!" + "'", str42, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(logAdapter49);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(logAdapter58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeSet68);
    }

    @Test
    public void test08274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08274");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader2.canReadApi(true, api22);
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader27.typesToSkip;
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader27.swagger = swagger33;
        springMvcApiReader27.updateExtensionChain();
        io.swagger.annotations.Api api37 = null;
        boolean boolean38 = springMvcApiReader27.canReadApi(false, api37);
        io.swagger.annotations.Api api40 = null;
        boolean boolean41 = springMvcApiReader27.canReadApi(true, api40);
        io.swagger.models.Operation operation42 = null;
        io.swagger.annotations.ApiOperation apiOperation43 = null;
        springMvcApiReader27.updateTagsForOperation(operation42, apiOperation43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader27.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet45;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap47 = null;
        io.swagger.annotations.Api api48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap49 = springMvcApiReader2.updateTagsForApi(strMap47, api48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeSet45);
    }

    @Test
    public void test08275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08275");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader47.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader47.getTypesToSkip();
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader47.updateTagsForOperation(operation50, apiOperation51);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader47.LOG;
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        io.swagger.annotations.Api api63 = null;
        boolean boolean64 = springMvcApiReader56.canReadApi(true, api63);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        springMvcApiReader56.LOG = logAdapter65;
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader56.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader56.typesToSkip;
        springMvcApiReader47.setTypesToSkip(typeSet68);
        springMvcApiReader2.setTypesToSkip(typeSet68);
        io.swagger.models.Swagger swagger71 = null;
        springMvcApiReader2.swagger = swagger71;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet68);
    }

    @Test
    public void test08276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08276");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader47.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader47.getTypesToSkip();
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader47.updateTagsForOperation(operation50, apiOperation51);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader47.LOG;
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        io.swagger.annotations.Api api63 = null;
        boolean boolean64 = springMvcApiReader56.canReadApi(true, api63);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        springMvcApiReader56.LOG = logAdapter65;
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader56.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader56.typesToSkip;
        springMvcApiReader47.setTypesToSkip(typeSet68);
        springMvcApiReader2.setTypesToSkip(typeSet68);
        io.swagger.models.Swagger swagger71 = null;
        springMvcApiReader2.swagger = swagger71;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet75 = null;
        springMvcApiReader2.typesToSkip = typeSet75;
        io.swagger.models.Operation operation77 = null;
        io.swagger.annotations.ApiResponses apiResponses78 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation77, apiResponses78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNull(logAdapter73);
        org.junit.Assert.assertNotNull(typeSet74);
    }

    @Test
    public void test08277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08277");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(true, api17);
        io.swagger.models.Operation operation19 = null;
        io.swagger.annotations.ApiOperation apiOperation20 = null;
        springMvcApiReader2.updateTagsForOperation(operation19, apiOperation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = null;
        springMvcApiReader2.typesToSkip = typeSet22;
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader2.swagger = swagger24;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet28 = springMvcApiReader2.extractTags(api27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(logAdapter26);
    }

    @Test
    public void test08278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08278");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        springMvcApiReader12.addTypeToSkippedTypes(type13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader12.typesToSkip;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader18.canReadApi(false, api28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader18.parseOperationPath("hi!", strMap31);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.Class<?> wildcardClass36 = springMvcApiReader35.getClass();
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader18.parseOperationPath("/hi!", strMap39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray41);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray41);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        springMvcApiReader2.LOG = logAdapter47;
        io.swagger.annotations.Api api50 = null;
        boolean boolean51 = springMvcApiReader2.canReadApi(false, api50);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(logAdapter45);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test08279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08279");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader2.canReadApi(false, api47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        boolean boolean63 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        boolean boolean64 = springMvcApiReader52.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet69 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet69, typeArray68);
        springMvcApiReader67.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet69);
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        boolean boolean75 = springMvcApiReader67.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        boolean boolean76 = springMvcApiReader52.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        boolean boolean77 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        java.lang.reflect.Type type78 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type78);
        io.swagger.models.Swagger swagger80 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(swagger49);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(swagger80);
    }

    @Test
    public void test08280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08280");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader12.typesToSkip;
        springMvcApiReader12.updateExtensionChain();
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.Class<?> wildcardClass22 = springMvcApiReader21.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.Class<?> wildcardClass27 = springMvcApiReader26.getClass();
        java.lang.annotation.Annotation[] annotationArray28 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList29 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList29, annotationArray28);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList31 = springMvcApiReader12.getParameters((java.lang.reflect.Type) wildcardClass27, (java.util.List<java.lang.annotation.Annotation>) annotationList29);
        io.swagger.models.Swagger swagger32 = null;
        springMvcApiReader12.swagger = swagger32;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader36.typesToSkip;
        io.swagger.models.Swagger swagger42 = springMvcApiReader36.swagger;
        io.swagger.models.Operation operation43 = null;
        io.swagger.annotations.ApiOperation apiOperation44 = null;
        springMvcApiReader36.updateTagsForOperation(operation43, apiOperation44);
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader36.getTypesToSkip();
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        java.lang.annotation.Annotation[] annotationArray54 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList55 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList55, annotationArray54);
        boolean boolean57 = springMvcApiReader49.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList55);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = springMvcApiReader60.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader60.parseOperationPath("", strMap67);
        io.swagger.annotations.Api api70 = null;
        boolean boolean71 = springMvcApiReader60.canReadApi(false, api70);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader60.parseOperationPath("hi!", strMap73);
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader77 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger75, logAdapter76);
        java.lang.Class<?> wildcardClass78 = springMvcApiReader77.getClass();
        springMvcApiReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass78);
        java.util.Map<java.lang.String, java.lang.String> strMap81 = null;
        java.lang.String str82 = springMvcApiReader60.parseOperationPath("/hi!", strMap81);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray83 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap84 = springMvcApiReader60.parseResponseHeaders(responseHeaderArray83);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap85 = springMvcApiReader49.parseResponseHeaders(responseHeaderArray83);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap86 = springMvcApiReader36.parseResponseHeaders(responseHeaderArray83);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap87 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray83);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap88 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray83);
        io.swagger.models.Swagger swagger89 = null;
        springMvcApiReader2.swagger = swagger89;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(annotationArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(parameterList31);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNull(swagger42);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(annotationArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(logAdapter65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/hi!" + "'", str74, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "/hi!" + "'", str82, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNull(strMap88);
    }

    @Test
    public void test08281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08281");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        io.swagger.models.Swagger swagger37 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        springMvcApiReader40.addTypeToSkippedTypes(type41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader40.typesToSkip;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader46.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader46.parseOperationPath("", strMap53);
        io.swagger.annotations.Api api56 = null;
        boolean boolean57 = springMvcApiReader46.canReadApi(false, api56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        java.lang.String str60 = springMvcApiReader46.parseOperationPath("hi!", strMap59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.Class<?> wildcardClass64 = springMvcApiReader63.getClass();
        springMvcApiReader46.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader46.parseOperationPath("/hi!", strMap67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray69);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray69);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray69);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api75 = null;
        boolean boolean76 = springMvcApiReader2.canReadApi(false, api75);
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger78 = null;
        springMvcApiReader2.swagger = swagger78;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(swagger37);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "/hi!" + "'", str60, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "/hi!" + "'", str68, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(logAdapter73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNull(logAdapter80);
    }

    @Test
    public void test08282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08282");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        boolean boolean38 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        springMvcApiReader24.LOG = logAdapter39;
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        springMvcApiReader43.addTypeToSkippedTypes(type44);
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader43.typesToSkip;
        springMvcApiReader24.setTypesToSkip(typeSet46);
        springMvcApiReader2.typesToSkip = typeSet46;
        io.swagger.models.Operation operation49 = null;
        io.swagger.annotations.ApiOperation apiOperation50 = null;
        springMvcApiReader2.updateTagsForOperation(operation49, apiOperation50);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeSet46);
    }

    @Test
    public void test08283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08283");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        springMvcApiReader19.LOG = logAdapter30;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader19.getTypesToSkip();
        java.lang.Class<?> wildcardClass33 = typeSet32.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        io.swagger.models.Operation operation35 = null;
        io.swagger.annotations.ApiOperation apiOperation36 = null;
        springMvcApiReader2.updateTagsForOperation(operation35, apiOperation36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader2.parseOperationPath("", strMap39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader43.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader43.parseOperationPath("", strMap50);
        io.swagger.annotations.Api api53 = null;
        boolean boolean54 = springMvcApiReader43.canReadApi(false, api53);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        java.lang.String str57 = springMvcApiReader43.parseOperationPath("hi!", strMap56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.Class<?> wildcardClass61 = springMvcApiReader60.getClass();
        springMvcApiReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        springMvcApiReader43.updateExtensionChain();
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader43.swagger = swagger64;
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader43.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet66;
        io.swagger.annotations.Api api69 = null;
        boolean boolean70 = springMvcApiReader2.canReadApi(false, api69);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation72 = null;
        io.swagger.annotations.ApiResponses apiResponses73 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation72, apiResponses73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test08284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08284");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation7 = null;
        io.swagger.annotations.ApiOperation apiOperation8 = null;
        springMvcApiReader2.updateTagsForOperation(operation7, apiOperation8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        springMvcApiReader12.addTypeToSkippedTypes(type13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader12.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet16 = springMvcApiReader12.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet17 = null;
        springMvcApiReader12.typesToSkip = typeSet17;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader12.getTypesToSkip();
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type type23 = null;
        springMvcApiReader22.addTypeToSkippedTypes(type23);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader22.typesToSkip;
        springMvcApiReader12.typesToSkip = typeSet25;
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader12.typesToSkip;
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        boolean boolean38 = springMvcApiReader30.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader30.parseOperationPath("hi!", strMap40);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type type60 = null;
        springMvcApiReader59.addTypeToSkippedTypes(type60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader59.typesToSkip;
        springMvcApiReader44.setTypesToSkip(typeSet62);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader44.typesToSkip;
        springMvcApiReader30.typesToSkip = typeSet64;
        springMvcApiReader12.typesToSkip = typeSet64;
        springMvcApiReader2.setTypesToSkip(typeSet64);
        io.swagger.models.Swagger swagger68 = null;
        springMvcApiReader2.swagger = swagger68;
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader2.parseOperationPath("", strMap71);
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet75 = springMvcApiReader2.extractTags(api74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "/hi!" + "'", str41, "/hi!");
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(typeSet73);
    }

    @Test
    public void test08285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08285");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation9 = null;
        io.swagger.annotations.ApiOperation apiOperation10 = null;
        springMvcApiReader2.updateTagsForOperation(operation9, apiOperation10);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        java.lang.String str14 = springMvcApiReader2.parseOperationPath("/hi!", strMap13);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        springMvcApiReader2.LOG = logAdapter15;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        io.swagger.models.Operation operation19 = null;
        io.swagger.annotations.ApiOperation apiOperation20 = null;
        springMvcApiReader2.updateTagsForOperation(operation19, apiOperation20);
        io.swagger.annotations.Api api22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList23 = springMvcApiReader2.getSecurityRequirements(api22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/hi!" + "'", str14, "/hi!");
    }

    @Test
    public void test08286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08286");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader2.canReadApi(false, api33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger36 = null;
        springMvcApiReader2.swagger = swagger36;
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader2.parseOperationPath("hi!", strMap39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger42 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNull(swagger42);
    }

    @Test
    public void test08287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08287");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type38 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type38);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader2.swagger = swagger40;
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader2.canReadApi(false, api44);
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader2.parseOperationPath("hi!", strMap48);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader2.parseOperationPath("", strMap52);
        io.swagger.models.Swagger swagger54 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/hi!" + "'", str49, "/hi!");
        org.junit.Assert.assertNull(logAdapter50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(swagger54);
    }

    @Test
    public void test08288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08288");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api30 = null;
        boolean boolean31 = springMvcApiReader2.canReadApi(false, api30);
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader37.typesToSkip;
        springMvcApiReader37.updateExtensionChain();
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.Class<?> wildcardClass47 = springMvcApiReader46.getClass();
        springMvcApiReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList56 = springMvcApiReader37.getParameters((java.lang.reflect.Type) wildcardClass52, (java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.models.Operation operation57 = null;
        io.swagger.annotations.ApiOperation apiOperation58 = null;
        springMvcApiReader37.updateTagsForOperation(operation57, apiOperation58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader37.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet60;
        io.swagger.models.Operation operation62 = null;
        io.swagger.annotations.ApiOperation apiOperation63 = null;
        springMvcApiReader2.updateTagsForOperation(operation62, apiOperation63);
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNull(logAdapter28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(parameterList56);
        org.junit.Assert.assertNotNull(typeSet60);
    }

    @Test
    public void test08289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08289");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader2.swagger = swagger27;
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader31.typesToSkip;
        io.swagger.models.Swagger swagger37 = springMvcApiReader31.swagger;
        io.swagger.models.Operation operation38 = null;
        io.swagger.annotations.ApiOperation apiOperation39 = null;
        springMvcApiReader31.updateTagsForOperation(operation38, apiOperation39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader31.getTypesToSkip();
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader55.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader55.parseOperationPath("", strMap62);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader55.canReadApi(false, api65);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader55.parseOperationPath("hi!", strMap68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.Class<?> wildcardClass73 = springMvcApiReader72.getClass();
        springMvcApiReader55.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        java.lang.String str77 = springMvcApiReader55.parseOperationPath("/hi!", strMap76);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray78 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap79 = springMvcApiReader55.parseResponseHeaders(responseHeaderArray78);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap80 = springMvcApiReader44.parseResponseHeaders(responseHeaderArray78);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap81 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray78);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap82 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray78);
        io.swagger.models.Swagger swagger83 = null;
        springMvcApiReader2.swagger = swagger83;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNull(swagger37);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "/hi!" + "'", str77, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(strMap82);
    }

    @Test
    public void test08290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08290");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        springMvcApiReader2.LOG = logAdapter54;
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiResponses apiResponses57 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation56, apiResponses57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(logAdapter53);
    }

    @Test
    public void test08291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08291");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        springMvcApiReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        springMvcApiReader2.LOG = logAdapter56;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation59 = null;
        io.swagger.annotations.ApiOperation apiOperation60 = null;
        springMvcApiReader2.updateTagsForOperation(operation59, apiOperation60);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList64 = springMvcApiReader2.getSecurityRequirements(api63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(logAdapter58);
    }

    @Test
    public void test08292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08292");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader2.parseOperationPath("hi!", strMap42);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api46 = null;
        boolean boolean47 = springMvcApiReader2.canReadApi(true, api46);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test08293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08293");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation16 = null;
        io.swagger.annotations.ApiOperation apiOperation17 = null;
        springMvcApiReader2.updateTagsForOperation(operation16, apiOperation17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet23 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet23, typeArray22);
        springMvcApiReader21.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet23);
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader21.swagger = swagger30;
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.models.Swagger swagger43 = null;
        springMvcApiReader34.swagger = swagger43;
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        boolean boolean48 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList46);
        boolean boolean49 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList46);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList46);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader2.canReadApi(true, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader2.parseOperationPath("", strMap55);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger58 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNull(logAdapter57);
        org.junit.Assert.assertNull(swagger58);
    }

    @Test
    public void test08294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08294");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        springMvcApiReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.lang.String[] strArray23 = new java.lang.String[] {};
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap28 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray29 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList30 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList30, securityRequirementArray29);
        io.swagger.models.Operation operation32 = null;
        springMvcApiReader10.updateOperation(strArray23, strArray27, strMap28, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList30, operation32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader10.parseOperationPath("", strMap35);
        springMvcApiReader10.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader10.parseOperationPath("/hi!", strMap39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader10.parseOperationPath("/hi!", strMap42);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader10.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet44);
        io.swagger.models.Operation operation46 = null;
        io.swagger.annotations.ApiResponses apiResponses47 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation46, apiResponses47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(securityRequirementArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
        org.junit.Assert.assertNotNull(typeSet44);
    }

    @Test
    public void test08295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08295");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass30, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader2.swagger = swagger44;
        io.swagger.models.Swagger swagger46 = null;
        springMvcApiReader2.swagger = swagger46;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader2.parseOperationPath("", strMap49);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test08296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08296");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader31.swagger = swagger40;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray42);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray42);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader2.parseOperationPath("/hi!", strMap46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader50.parseOperationPath("/hi!", strMap64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = springMvcApiReader50.LOG;
        io.swagger.annotations.Api api68 = null;
        boolean boolean69 = springMvcApiReader50.canReadApi(false, api68);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = springMvcApiReader50.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader50.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet71;
        io.swagger.models.Operation operation73 = null;
        io.swagger.annotations.ApiOperation apiOperation74 = null;
        springMvcApiReader2.updateTagsForOperation(operation73, apiOperation74);
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "/hi!" + "'", str47, "/hi!");
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "/hi!" + "'", str65, "/hi!");
        org.junit.Assert.assertNull(logAdapter66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(logAdapter70);
        org.junit.Assert.assertNotNull(typeSet71);
    }

    @Test
    public void test08297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08297");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        springMvcApiReader2.LOG = logAdapter16;
        java.util.Set<java.lang.reflect.Type> typeSet18 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(true, api20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test08298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08298");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(false, api26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader2.parseOperationPath("", strMap29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader33.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        java.lang.String str41 = springMvcApiReader33.parseOperationPath("", strMap40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList43 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList43, typeArray42);
        springMvcApiReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList43);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        boolean boolean56 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        boolean boolean57 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader33.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet58;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        springMvcApiReader2.LOG = logAdapter60;
        io.swagger.models.Operation operation62 = null;
        io.swagger.annotations.ApiOperation apiOperation63 = null;
        springMvcApiReader2.updateTagsForOperation(operation62, apiOperation63);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeSet58);
    }

    @Test
    public void test08299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08299");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertNotNull(typeSet23);
    }

    @Test
    public void test08300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08300");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader2.parseOperationPath("hi!", strMap18);
        io.swagger.models.Operation operation20 = null;
        io.swagger.annotations.ApiOperation apiOperation21 = null;
        springMvcApiReader2.updateTagsForOperation(operation20, apiOperation21);
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        io.swagger.models.Swagger swagger25 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiResponses apiResponses27 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation26, apiResponses27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "/hi!" + "'", str19, "/hi!");
        org.junit.Assert.assertNull(swagger25);
    }

    @Test
    public void test08301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08301");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader10.canReadApi(false, api20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader10.parseOperationPath("hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        boolean boolean74 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader66.swagger = swagger75;
        java.lang.annotation.Annotation[] annotationArray77 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList78 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList78, annotationArray77);
        boolean boolean80 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList81 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass60, (java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        springMvcApiReader2.LOG = logAdapter85;
        io.swagger.models.Swagger swagger87 = null;
        springMvcApiReader2.swagger = swagger87;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(annotationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(parameterList81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(typeSet84);
    }

    @Test
    public void test08302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08302");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader2.parseOperationPath("", strMap46);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api50 = null;
        boolean boolean51 = springMvcApiReader2.canReadApi(false, api50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeSet53);
    }

    @Test
    public void test08303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08303");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        boolean boolean26 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader29.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader29.parseOperationPath("", strMap36);
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader29.canReadApi(false, api39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader29.parseOperationPath("hi!", strMap42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.Class<?> wildcardClass47 = springMvcApiReader46.getClass();
        springMvcApiReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader29.parseOperationPath("/hi!", strMap50);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray52);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray52);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray52);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        io.swagger.models.Swagger swagger67 = springMvcApiReader58.swagger;
        io.swagger.annotations.Api api69 = null;
        boolean boolean70 = springMvcApiReader58.canReadApi(false, api69);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader58.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader58.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet72);
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/hi!" + "'", str51, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNull(swagger67);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet76);
    }

    @Test
    public void test08304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08304");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type type32 = null;
        springMvcApiReader31.addTypeToSkippedTypes(type32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader31.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader31.typesToSkip;
        springMvcApiReader17.setTypesToSkip(typeSet35);
        springMvcApiReader2.typesToSkip = typeSet35;
        io.swagger.models.Operation operation38 = null;
        io.swagger.annotations.ApiOperation apiOperation39 = null;
        springMvcApiReader2.updateTagsForOperation(operation38, apiOperation39);
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeSet35);
    }

    @Test
    public void test08305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08305");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = null;
        springMvcApiReader2.typesToSkip = typeSet7;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        boolean boolean20 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        springMvcApiReader12.swagger = swagger21;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader12.LOG = logAdapter23;
        springMvcApiReader12.updateExtensionChain();
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        springMvcApiReader12.updateTagsForOperation(operation26, apiOperation27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader31.swagger = swagger40;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader44.swagger = swagger53;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        boolean boolean58 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean60 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean61 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        springMvcApiReader2.LOG = logAdapter62;
        io.swagger.models.Swagger swagger64 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet67 = springMvcApiReader2.extractTags(api66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(typeSet9);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(swagger64);
        org.junit.Assert.assertNull(typeSet65);
    }

    @Test
    public void test08306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08306");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger25 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader28.typesToSkip;
        springMvcApiReader28.updateExtensionChain();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.Class<?> wildcardClass38 = springMvcApiReader37.getClass();
        springMvcApiReader28.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        io.swagger.annotations.ApiOperation apiOperation41 = null;
        io.swagger.models.Operation operation42 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation41, operation42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNull(swagger25);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test08307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08307");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader2.swagger = swagger29;
        io.swagger.models.Operation operation31 = null;
        io.swagger.annotations.ApiOperation apiOperation32 = null;
        springMvcApiReader2.updateTagsForOperation(operation31, apiOperation32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        io.swagger.annotations.Api api48 = null;
        boolean boolean49 = springMvcApiReader38.canReadApi(false, api48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader38.parseOperationPath("hi!", strMap51);
        io.swagger.models.Operation operation53 = null;
        io.swagger.annotations.ApiOperation apiOperation54 = null;
        springMvcApiReader38.updateTagsForOperation(operation53, apiOperation54);
        io.swagger.models.Swagger swagger56 = null;
        springMvcApiReader38.swagger = swagger56;
        io.swagger.models.Swagger swagger58 = springMvcApiReader38.swagger;
        springMvcApiReader38.updateExtensionChain();
        java.lang.Class<?> wildcardClass60 = springMvcApiReader38.getClass();
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        java.lang.annotation.Annotation[] annotationArray68 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList69 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList69, annotationArray68);
        boolean boolean71 = springMvcApiReader63.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList69);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList72 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass60, (java.util.List<java.lang.annotation.Annotation>) annotationList69);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        springMvcApiReader2.LOG = logAdapter73;
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(typeSet34);
        org.junit.Assert.assertNull(typeSet35);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertNull(swagger58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(annotationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(parameterList72);
    }

    @Test
    public void test08308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08308");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        springMvcApiReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        java.lang.annotation.Annotation[] annotationArray65 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList66 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList66, annotationArray65);
        boolean boolean68 = springMvcApiReader60.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList66);
        boolean boolean69 = springMvcApiReader57.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList66);
        boolean boolean70 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(annotationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(logAdapter71);
    }

    @Test
    public void test08309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08309");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap61 = null;
        io.swagger.annotations.Api api62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap63 = springMvcApiReader2.updateTagsForApi(strMap61, api62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertNotNull(typeSet60);
    }

    @Test
    public void test08310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08310");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        springMvcApiReader33.addTypeToSkippedTypes(type34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader33.typesToSkip;
        springMvcApiReader18.setTypesToSkip(typeSet36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader18.typesToSkip;
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader18.swagger = swagger39;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader18.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet41;
        io.swagger.models.Operation operation43 = null;
        io.swagger.annotations.ApiOperation apiOperation44 = null;
        springMvcApiReader2.updateTagsForOperation(operation43, apiOperation44);
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeSet46);
    }

    @Test
    public void test08311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08311");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(false, api8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray14 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap15 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray14);
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(false, api17);
        io.swagger.models.Swagger swagger19 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(logAdapter10);
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(swagger19);
    }

    @Test
    public void test08312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08312");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader2.updateTagsForOperation(operation17, apiOperation18);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        java.lang.String str23 = springMvcApiReader2.parseOperationPath("hi!", strMap22);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader2.swagger = swagger24;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        springMvcApiReader2.LOG = logAdapter26;
        java.lang.reflect.Method method28 = null;
        io.swagger.models.Operation operation29 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method28, operation29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/hi!" + "'", str23, "/hi!");
    }

    @Test
    public void test08313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08313");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        springMvcApiReader2.LOG = logAdapter28;
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader47.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        java.lang.String str55 = springMvcApiReader47.parseOperationPath("", strMap54);
        io.swagger.annotations.Api api57 = null;
        boolean boolean58 = springMvcApiReader47.canReadApi(false, api57);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader47.parseOperationPath("hi!", strMap60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.Class<?> wildcardClass65 = springMvcApiReader64.getClass();
        springMvcApiReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass65);
        springMvcApiReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass65);
        springMvcApiReader32.updateExtensionChain();
        io.swagger.models.Swagger swagger69 = null;
        springMvcApiReader32.swagger = swagger69;
        springMvcApiReader32.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader32.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = springMvcApiReader32.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader32.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet74);
        java.lang.Class<?> wildcardClass76 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "/hi!" + "'", str61, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNull(logAdapter73);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test08314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08314");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = springMvcApiReader10.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap17 = null;
        java.lang.String str18 = springMvcApiReader10.parseOperationPath("", strMap17);
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader10.canReadApi(false, api20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader10.parseOperationPath("hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        springMvcApiReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.annotation.Annotation[] annotationArray71 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList72 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList72, annotationArray71);
        boolean boolean74 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList72);
        io.swagger.models.Swagger swagger75 = null;
        springMvcApiReader66.swagger = swagger75;
        java.lang.annotation.Annotation[] annotationArray77 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList78 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList78, annotationArray77);
        boolean boolean80 = springMvcApiReader66.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList78);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList81 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass60, (java.util.List<java.lang.annotation.Annotation>) annotationList78);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap84 = null;
        java.lang.String str85 = springMvcApiReader2.parseOperationPath("hi!", strMap84);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation87 = null;
        io.swagger.annotations.ApiOperation apiOperation88 = null;
        springMvcApiReader2.updateTagsForOperation(operation87, apiOperation88);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(logAdapter15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(annotationArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(annotationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(parameterList81);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "/hi!" + "'", str85, "/hi!");
    }

    @Test
    public void test08315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08315");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        springMvcApiReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader57.typesToSkip;
        springMvcApiReader57.updateExtensionChain();
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.Class<?> wildcardClass67 = springMvcApiReader66.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader2.parseOperationPath("", strMap71);
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader75 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger73, logAdapter74);
        java.lang.reflect.Type[] typeArray76 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet77 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet77, typeArray76);
        springMvcApiReader75.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet77);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = springMvcApiReader75.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap82 = null;
        java.lang.String str83 = springMvcApiReader75.parseOperationPath("", strMap82);
        io.swagger.models.Swagger swagger84 = springMvcApiReader75.swagger;
        io.swagger.annotations.Api api86 = null;
        boolean boolean87 = springMvcApiReader75.canReadApi(false, api86);
        java.util.Set<java.lang.reflect.Type> typeSet88 = springMvcApiReader75.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader75.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet90 = springMvcApiReader75.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet90);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(logAdapter80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNull(swagger84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(typeSet90);
    }

    @Test
    public void test08316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08316");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type type32 = null;
        springMvcApiReader31.addTypeToSkippedTypes(type32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader31.typesToSkip;
        springMvcApiReader16.setTypesToSkip(typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader16.typesToSkip;
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader39.typesToSkip;
        io.swagger.models.Swagger swagger45 = springMvcApiReader39.swagger;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        boolean boolean56 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.models.Swagger swagger57 = null;
        springMvcApiReader48.swagger = swagger57;
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        boolean boolean62 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean63 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean64 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean65 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        io.swagger.models.Operation operation66 = null;
        io.swagger.annotations.ApiOperation apiOperation67 = null;
        springMvcApiReader2.updateTagsForOperation(operation66, apiOperation67);
        io.swagger.annotations.Api api70 = null;
        boolean boolean71 = springMvcApiReader2.canReadApi(false, api70);
        io.swagger.models.Swagger swagger72 = springMvcApiReader2.swagger;
        java.lang.reflect.Method method73 = null;
        io.swagger.models.Operation operation74 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method73, operation74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(swagger72);
    }

    @Test
    public void test08317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08317");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type[] typeArray9 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet10 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet10, typeArray9);
        springMvcApiReader8.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet10);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        springMvcApiReader8.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader23.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader23.parseOperationPath("", strMap30);
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader23.canReadApi(false, api33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader23.parseOperationPath("hi!", strMap36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.Class<?> wildcardClass41 = springMvcApiReader40.getClass();
        springMvcApiReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader8.LOG;
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader47.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        java.lang.String str55 = springMvcApiReader47.parseOperationPath("", strMap54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList57 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList57, typeArray56);
        springMvcApiReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        springMvcApiReader8.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader2.parseOperationPath("/hi!", strMap63);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap65 = null;
        io.swagger.annotations.Api api66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap67 = springMvcApiReader2.updateTagsForApi(strMap65, api66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(logAdapter28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
    }

    @Test
    public void test08318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08318");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader2.parseOperationPath("hi!", strMap42);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
    }

    @Test
    public void test08319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08319");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader2.LOG = logAdapter25;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        springMvcApiReader2.LOG = logAdapter27;
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger30 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger31 = null;
        springMvcApiReader2.swagger = swagger31;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNull(swagger30);
    }

    @Test
    public void test08320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08320");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader28.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader28.parseOperationPath("", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] { wildcardClass40 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader28.typesToSkip = typeSet42;
        io.swagger.models.Swagger swagger45 = springMvcApiReader28.swagger;
        java.lang.Class<?> wildcardClass46 = springMvcApiReader28.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader50.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader50.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet52;
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation55 = null;
        io.swagger.annotations.ApiOperation apiOperation56 = null;
        springMvcApiReader2.updateTagsForOperation(operation55, apiOperation56);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeSet54);
    }

    @Test
    public void test08321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08321");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        io.swagger.models.Swagger swagger25 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList27 = springMvcApiReader2.getSecurityRequirements(api26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger25);
    }

    @Test
    public void test08322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08322");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        io.swagger.models.Operation operation59 = null;
        io.swagger.annotations.ApiOperation apiOperation60 = null;
        springMvcApiReader2.updateTagsForOperation(operation59, apiOperation60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        springMvcApiReader2.LOG = logAdapter62;
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader2.getTypesToSkip();
        java.lang.reflect.Method method66 = null;
        io.swagger.models.Operation operation67 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method66, operation67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(typeSet65);
    }

    @Test
    public void test08323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08323");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api25 = null;
        boolean boolean26 = springMvcApiReader2.canReadApi(false, api25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        springMvcApiReader32.addTypeToSkippedTypes(type33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader32.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader32.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = springMvcApiReader32.LOG;
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader55.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader55.parseOperationPath("", strMap62);
        io.swagger.annotations.Api api65 = null;
        boolean boolean66 = springMvcApiReader55.canReadApi(false, api65);
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader55.parseOperationPath("hi!", strMap68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.Class<?> wildcardClass73 = springMvcApiReader72.getClass();
        springMvcApiReader55.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        springMvcApiReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = springMvcApiReader40.LOG;
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet81 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet81, typeArray80);
        springMvcApiReader79.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet81);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = springMvcApiReader79.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap86 = null;
        java.lang.String str87 = springMvcApiReader79.parseOperationPath("", strMap86);
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList89 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList89, typeArray88);
        springMvcApiReader79.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        springMvcApiReader40.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        springMvcApiReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        springMvcApiReader29.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        java.lang.Class<?> wildcardClass95 = springMvcApiReader29.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass95);
        io.swagger.models.Swagger swagger97 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNull(logAdapter37);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNull(logAdapter76);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(logAdapter84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNull(swagger97);
    }

    @Test
    public void test08324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08324");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        springMvcApiReader37.addTypeToSkippedTypes(type38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader37.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet40;
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeSet42);
    }

    @Test
    public void test08325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08325");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.Class<?> wildcardClass29 = springMvcApiReader28.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass29 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader17.typesToSkip = typeSet31;
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader17.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet34);
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        springMvcApiReader2.updateTagsForOperation(operation36, apiOperation37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        io.swagger.annotations.Api api51 = null;
        boolean boolean52 = springMvcApiReader41.canReadApi(false, api51);
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        java.lang.String str55 = springMvcApiReader41.parseOperationPath("hi!", strMap54);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader41.parseOperationPath("hi!", strMap57);
        io.swagger.models.Operation operation59 = null;
        io.swagger.annotations.ApiOperation apiOperation60 = null;
        springMvcApiReader41.updateTagsForOperation(operation59, apiOperation60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader41.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet62);
        io.swagger.annotations.Api api64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList65 = springMvcApiReader2.getSecurityRequirements(api64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "/hi!" + "'", str55, "/hi!");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "/hi!" + "'", str58, "/hi!");
        org.junit.Assert.assertNotNull(typeSet62);
    }

    @Test
    public void test08326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08326");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = null;
        springMvcApiReader2.typesToSkip = typeSet7;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        java.lang.String str11 = springMvcApiReader2.parseOperationPath("/hi!", strMap10);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.ApiOperation apiOperation16 = null;
        io.swagger.models.Operation operation17 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation16, operation17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/hi!" + "'", str11, "/hi!");
        org.junit.Assert.assertNull(typeSet13);
    }

    @Test
    public void test08327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08327");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        springMvcApiReader32.addTypeToSkippedTypes(type33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader32.typesToSkip;
        springMvcApiReader17.setTypesToSkip(typeSet35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader17.getTypesToSkip();
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader17.canReadApi(true, api39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        springMvcApiReader43.addTypeToSkippedTypes(type44);
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader43.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader43.getTypesToSkip();
        springMvcApiReader17.typesToSkip = typeSet47;
        springMvcApiReader2.typesToSkip = typeSet47;
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader2.updateTagsForOperation(operation50, apiOperation51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = springMvcApiReader55.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap62 = null;
        java.lang.String str63 = springMvcApiReader55.parseOperationPath("", strMap62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList65 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList65, typeArray64);
        springMvcApiReader55.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList65);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList65);
        io.swagger.models.Swagger swagger69 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api71 = null;
        boolean boolean72 = springMvcApiReader2.canReadApi(true, api71);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(swagger69);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test08328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08328");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        springMvcApiReader2.LOG = logAdapter24;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter23);
    }

    @Test
    public void test08329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08329");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiResponses apiResponses29 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation28, apiResponses29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet27);
    }

    @Test
    public void test08330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08330");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type[] typeArray9 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet10 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet10, typeArray9);
        springMvcApiReader8.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet10);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        springMvcApiReader8.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader23.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader23.parseOperationPath("", strMap30);
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader23.canReadApi(false, api33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader23.parseOperationPath("hi!", strMap36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.Class<?> wildcardClass41 = springMvcApiReader40.getClass();
        springMvcApiReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader8.LOG;
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader47.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        java.lang.String str55 = springMvcApiReader47.parseOperationPath("", strMap54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList57 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList57, typeArray56);
        springMvcApiReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        springMvcApiReader8.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet66 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet66, typeArray65);
        springMvcApiReader64.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = springMvcApiReader64.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader64.parseOperationPath("", strMap71);
        io.swagger.annotations.Api api74 = null;
        boolean boolean75 = springMvcApiReader64.canReadApi(false, api74);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = null;
        java.lang.String str78 = springMvcApiReader64.parseOperationPath("hi!", strMap77);
        io.swagger.models.Swagger swagger79 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader81 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger79, logAdapter80);
        java.lang.Class<?> wildcardClass82 = springMvcApiReader81.getClass();
        springMvcApiReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass82);
        java.util.Map<java.lang.String, java.lang.String> strMap85 = null;
        java.lang.String str86 = springMvcApiReader64.parseOperationPath("/hi!", strMap85);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray87 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap88 = springMvcApiReader64.parseResponseHeaders(responseHeaderArray87);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap89 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray87);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter90 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api93 = null;
        boolean boolean94 = springMvcApiReader2.canReadApi(true, api93);
        io.swagger.annotations.Api api96 = null;
        boolean boolean97 = springMvcApiReader2.canReadApi(false, api96);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(logAdapter28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(logAdapter69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/hi!" + "'", str78, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "/hi!" + "'", str86, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNull(logAdapter90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test08331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08331");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        java.lang.String str21 = springMvcApiReader2.parseOperationPath("/hi!", strMap20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray35 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap36 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray35);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap37 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray35);
        io.swagger.models.Swagger swagger38 = null;
        springMvcApiReader2.swagger = swagger38;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "/hi!" + "'", str21, "/hi!");
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
    }

    @Test
    public void test08332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08332");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type type20 = null;
        springMvcApiReader19.addTypeToSkippedTypes(type20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader19.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader19.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader19.LOG;
        io.swagger.models.Swagger swagger25 = springMvcApiReader19.swagger;
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader19.canReadApi(true, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader19.parseOperationPath("hi!", strMap30);
        java.lang.Class<?> wildcardClass32 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        springMvcApiReader2.updateExtensionChain();
        java.lang.Class<?> wildcardClass35 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNull(swagger25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test08333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08333");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(false, api8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader34.parseOperationPath("/hi!", strMap55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray57);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap59 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray57);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap60 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray57);
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation63 = null;
        io.swagger.annotations.ApiOperation apiOperation64 = null;
        springMvcApiReader2.updateTagsForOperation(operation63, apiOperation64);
        java.lang.reflect.Method method66 = null;
        io.swagger.models.Operation operation67 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method66, operation67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(typeSet62);
    }

    @Test
    public void test08334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08334");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        boolean boolean56 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        boolean boolean57 = springMvcApiReader45.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        boolean boolean58 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api61 = null;
        boolean boolean62 = springMvcApiReader2.canReadApi(false, api61);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource63 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger64 = springMvcApiReader2.read(springResource63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test08335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08335");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.Class<?> wildcardClass12 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.updateExtensionChain();
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader16.swagger = swagger53;
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        java.lang.annotation.Annotation[] annotationArray67 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList68 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList68, annotationArray67);
        boolean boolean70 = springMvcApiReader62.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList68);
        boolean boolean71 = springMvcApiReader59.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList68);
        java.lang.Class<?> wildcardClass72 = annotationList68.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        io.swagger.models.Swagger swagger74 = null;
        springMvcApiReader2.swagger = swagger74;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(annotationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test08336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08336");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger60 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api62 = null;
        boolean boolean63 = springMvcApiReader2.canReadApi(false, api62);
        io.swagger.annotations.Api api64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet65 = springMvcApiReader2.extractTags(api64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNull(logAdapter57);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNull(swagger60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test08337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08337");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = null;
        springMvcApiReader2.typesToSkip = typeSet7;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        springMvcApiReader12.addTypeToSkippedTypes(type13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader12.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet15;
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader35.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader35.parseOperationPath("", strMap42);
        io.swagger.annotations.Api api45 = null;
        boolean boolean46 = springMvcApiReader35.canReadApi(false, api45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader35.parseOperationPath("hi!", strMap48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.Class<?> wildcardClass53 = springMvcApiReader52.getClass();
        springMvcApiReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        springMvcApiReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader20.LOG;
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet61 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet61, typeArray60);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = springMvcApiReader59.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        java.lang.String str67 = springMvcApiReader59.parseOperationPath("", strMap66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList69 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList69, typeArray68);
        springMvcApiReader59.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        springMvcApiReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        io.swagger.annotations.Api api75 = null;
        boolean boolean76 = springMvcApiReader2.canReadApi(true, api75);
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader2.parseOperationPath("", strMap79);
        io.swagger.annotations.Api api82 = null;
        boolean boolean83 = springMvcApiReader2.canReadApi(true, api82);
        java.lang.Class<?> wildcardClass84 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(typeSet9);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/hi!" + "'", str49, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNull(logAdapter56);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(logAdapter64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test08338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08338");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader12.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader12.getTypesToSkip();
        io.swagger.models.Operation operation15 = null;
        io.swagger.annotations.ApiOperation apiOperation16 = null;
        springMvcApiReader12.updateTagsForOperation(operation15, apiOperation16);
        io.swagger.annotations.Api api19 = null;
        boolean boolean20 = springMvcApiReader12.canReadApi(false, api19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        springMvcApiReader12.LOG = logAdapter21;
        io.swagger.models.Swagger swagger23 = springMvcApiReader12.swagger;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader26.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        java.lang.String str34 = springMvcApiReader26.parseOperationPath("", strMap33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.Class<?> wildcardClass38 = springMvcApiReader37.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass38 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader26.typesToSkip = typeSet40;
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader26.getTypesToSkip();
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        boolean boolean54 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList52);
        boolean boolean55 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList52);
        boolean boolean56 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList52);
        boolean boolean57 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList52);
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader2.canReadApi(false, api59);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(swagger7);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNull(logAdapter9);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(swagger23);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test08339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08339");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader2.swagger = swagger27;
        io.swagger.models.Swagger swagger29 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader2.canReadApi(false, api33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        springMvcApiReader37.addTypeToSkippedTypes(type38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader37.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader37.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        java.lang.String str44 = springMvcApiReader37.parseOperationPath("", strMap43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader47.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        java.lang.String str55 = springMvcApiReader47.parseOperationPath("", strMap54);
        io.swagger.annotations.Api api57 = null;
        boolean boolean58 = springMvcApiReader47.canReadApi(false, api57);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader47.parseOperationPath("hi!", strMap60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.Class<?> wildcardClass65 = springMvcApiReader64.getClass();
        springMvcApiReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet71 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet71, typeArray70);
        springMvcApiReader69.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet71);
        java.lang.annotation.Annotation[] annotationArray74 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList75 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList75, annotationArray74);
        boolean boolean77 = springMvcApiReader69.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList75);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList78 = springMvcApiReader37.getParameters((java.lang.reflect.Type) wildcardClass65, (java.util.List<java.lang.annotation.Annotation>) annotationList75);
        springMvcApiReader37.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader37.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader37.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet81;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(swagger29);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "/hi!" + "'", str61, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(annotationArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(parameterList78);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(typeSet81);
    }

    @Test
    public void test08340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08340");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader39.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader39.parseOperationPath("", strMap46);
        io.swagger.annotations.Api api49 = null;
        boolean boolean50 = springMvcApiReader39.canReadApi(false, api49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader39.parseOperationPath("hi!", strMap52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet73 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet73, typeArray72);
        springMvcApiReader71.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = springMvcApiReader71.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        java.lang.String str79 = springMvcApiReader71.parseOperationPath("", strMap78);
        io.swagger.annotations.Api api81 = null;
        boolean boolean82 = springMvcApiReader71.canReadApi(false, api81);
        java.util.Map<java.lang.String, java.lang.String> strMap84 = null;
        java.lang.String str85 = springMvcApiReader71.parseOperationPath("hi!", strMap84);
        io.swagger.models.Swagger swagger86 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter87 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader88 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger86, logAdapter87);
        java.lang.Class<?> wildcardClass89 = springMvcApiReader88.getClass();
        springMvcApiReader71.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        springMvcApiReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        springMvcApiReader39.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        io.swagger.models.Operation operation94 = null;
        io.swagger.annotations.ApiOperation apiOperation95 = null;
        springMvcApiReader2.updateTagsForOperation(operation94, apiOperation95);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter97 = springMvcApiReader2.LOG;
        java.lang.Class<?> wildcardClass98 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "/hi!" + "'", str53, "/hi!");
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(logAdapter76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "/hi!" + "'", str85, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNull(logAdapter97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test08341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08341");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.lang.annotation.Annotation[] annotationArray13 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList14 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList14, annotationArray13);
        boolean boolean16 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        springMvcApiReader2.LOG = logAdapter17;
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type type22 = null;
        springMvcApiReader21.addTypeToSkippedTypes(type22);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader21.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader2.parseOperationPath("hi!", strMap36);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(annotationArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(swagger30);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "/hi!" + "'", str37, "/hi!");
    }

    @Test
    public void test08342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08342");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        boolean boolean44 = springMvcApiReader36.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader36.typesToSkip;
        springMvcApiReader36.updateExtensionChain();
        io.swagger.models.Operation operation47 = null;
        io.swagger.annotations.ApiOperation apiOperation48 = null;
        springMvcApiReader36.updateTagsForOperation(operation47, apiOperation48);
        io.swagger.annotations.Api api51 = null;
        boolean boolean52 = springMvcApiReader36.canReadApi(true, api51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        boolean boolean63 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader55.swagger = swagger64;
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader55.getTypesToSkip();
        java.lang.Class<?> wildcardClass67 = springMvcApiReader55.getClass();
        java.lang.annotation.Annotation[] annotationArray68 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList69 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList69, annotationArray68);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList71 = springMvcApiReader36.getParameters((java.lang.reflect.Type) wildcardClass67, (java.util.List<java.lang.annotation.Annotation>) annotationList69);
        boolean boolean72 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList69);
        io.swagger.annotations.Api api74 = null;
        boolean boolean75 = springMvcApiReader2.canReadApi(true, api74);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        springMvcApiReader2.LOG = logAdapter76;
        io.swagger.models.Operation operation78 = null;
        io.swagger.annotations.ApiResponses apiResponses79 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation78, apiResponses79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(annotationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(parameterList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test08343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08343");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger7 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = springMvcApiReader2.LOG;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNull(swagger7);
        org.junit.Assert.assertNull(logAdapter8);
    }

    @Test
    public void test08344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08344");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        springMvcApiReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader2.parseOperationPath("hi!", strMap57);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader2.parseOperationPath("/hi!", strMap60);
        io.swagger.models.Swagger swagger62 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "/hi!" + "'", str58, "/hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "/hi!" + "'", str61, "/hi!");
        org.junit.Assert.assertNull(swagger62);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertNotNull(typeSet64);
    }

    @Test
    public void test08345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08345");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        io.swagger.models.Operation operation22 = null;
        io.swagger.annotations.ApiOperation apiOperation23 = null;
        springMvcApiReader2.updateTagsForOperation(operation22, apiOperation23);
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(true, api26);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        boolean boolean38 = springMvcApiReader30.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader30.swagger = swagger39;
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        boolean boolean44 = springMvcApiReader30.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        boolean boolean45 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        springMvcApiReader2.LOG = logAdapter47;
        io.swagger.annotations.Api api49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet50 = springMvcApiReader2.extractTags(api49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(typeSet46);
    }

    @Test
    public void test08346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08346");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        boolean boolean43 = springMvcApiReader35.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList41);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader35.swagger = swagger44;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        boolean boolean56 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.models.Swagger swagger57 = null;
        springMvcApiReader48.swagger = swagger57;
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        boolean boolean62 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean63 = springMvcApiReader35.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean64 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger66 = null;
        springMvcApiReader2.swagger = swagger66;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(typeSet65);
    }

    @Test
    public void test08347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08347");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation11 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "hi!", operation11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger6);
        org.junit.Assert.assertNull(logAdapter8);
    }

    @Test
    public void test08348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08348");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader27.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader27.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet29;
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader2.canReadApi(true, api32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiResponses apiResponses37 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation36, apiResponses37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNull(logAdapter28);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeSet35);
    }

    @Test
    public void test08349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08349");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList43 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass30, (java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.models.Swagger swagger44 = null;
        springMvcApiReader2.swagger = swagger44;
        io.swagger.models.Swagger swagger46 = null;
        springMvcApiReader2.swagger = swagger46;
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger49 = null;
        springMvcApiReader2.swagger = swagger49;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList54 = springMvcApiReader2.getSecurityRequirements(api53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(parameterList43);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertNotNull(typeSet52);
    }

    @Test
    public void test08350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08350");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader2.swagger = swagger29;
        io.swagger.models.Operation operation31 = null;
        io.swagger.annotations.ApiOperation apiOperation32 = null;
        springMvcApiReader2.updateTagsForOperation(operation31, apiOperation32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        springMvcApiReader2.LOG = logAdapter35;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = springMvcApiReader2.LOG;
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        io.swagger.models.Operation operation39 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation38, operation39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(typeSet34);
        org.junit.Assert.assertNull(logAdapter37);
    }

    @Test
    public void test08351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08351");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = null;
        springMvcApiReader2.swagger = swagger6;
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        java.lang.String str11 = springMvcApiReader2.parseOperationPath("/hi!", strMap10);
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        java.lang.String str14 = springMvcApiReader2.parseOperationPath("hi!", strMap13);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "/hi!" + "'", str11, "/hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "/hi!" + "'", str14, "/hi!");
    }

    @Test
    public void test08352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08352");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        springMvcApiReader2.updateExtensionChain();
        java.lang.reflect.Type type20 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        springMvcApiReader24.LOG = logAdapter35;
        springMvcApiReader24.updateExtensionChain();
        io.swagger.models.Operation operation38 = null;
        io.swagger.annotations.ApiOperation apiOperation39 = null;
        springMvcApiReader24.updateTagsForOperation(operation38, apiOperation39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        boolean boolean51 = springMvcApiReader43.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.models.Swagger swagger52 = null;
        springMvcApiReader43.swagger = swagger52;
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        java.lang.annotation.Annotation[] annotationArray61 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList62 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList62, annotationArray61);
        boolean boolean64 = springMvcApiReader56.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList62);
        io.swagger.models.Swagger swagger65 = null;
        springMvcApiReader56.swagger = swagger65;
        java.lang.annotation.Annotation[] annotationArray67 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList68 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList68, annotationArray67);
        boolean boolean70 = springMvcApiReader56.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList68);
        boolean boolean71 = springMvcApiReader43.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList68);
        boolean boolean72 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList68);
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader24.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet73);
        java.lang.Class<?> wildcardClass75 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(annotationArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(annotationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test08353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08353");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.Class<?> wildcardClass12 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.Class<?> wildcardClass17 = springMvcApiReader16.getClass();
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader26.typesToSkip;
        io.swagger.models.Swagger swagger32 = springMvcApiReader26.swagger;
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader26.updateTagsForOperation(operation33, apiOperation34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader26.getTypesToSkip();
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        boolean boolean47 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader50 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger48, logAdapter49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader50.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = springMvcApiReader50.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader50.parseOperationPath("", strMap57);
        io.swagger.annotations.Api api60 = null;
        boolean boolean61 = springMvcApiReader50.canReadApi(false, api60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader50.parseOperationPath("hi!", strMap63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.Class<?> wildcardClass68 = springMvcApiReader67.getClass();
        springMvcApiReader50.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader50.parseOperationPath("/hi!", strMap71);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray73 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader50.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap75 = springMvcApiReader39.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap76 = springMvcApiReader26.parseResponseHeaders(responseHeaderArray73);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap77 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap80 = null;
        java.lang.String str81 = springMvcApiReader2.parseOperationPath("/hi!", strMap80);
        springMvcApiReader2.updateExtensionChain();
        java.lang.Class<?> wildcardClass83 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(logAdapter55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "/hi!" + "'", str72, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(logAdapter78);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "/hi!" + "'", str81, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test08354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08354");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        boolean boolean19 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader11.swagger = swagger20;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        springMvcApiReader11.LOG = logAdapter22;
        springMvcApiReader11.updateExtensionChain();
        io.swagger.models.Operation operation25 = null;
        io.swagger.annotations.ApiOperation apiOperation26 = null;
        springMvcApiReader11.updateTagsForOperation(operation25, apiOperation26);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        boolean boolean38 = springMvcApiReader30.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader30.swagger = swagger39;
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        java.lang.annotation.Annotation[] annotationArray48 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList49 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList49, annotationArray48);
        boolean boolean51 = springMvcApiReader43.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList49);
        io.swagger.models.Swagger swagger52 = null;
        springMvcApiReader43.swagger = swagger52;
        java.lang.annotation.Annotation[] annotationArray54 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList55 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList55, annotationArray54);
        boolean boolean57 = springMvcApiReader43.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList55);
        boolean boolean58 = springMvcApiReader30.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList55);
        boolean boolean59 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList55);
        boolean boolean60 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList55);
        io.swagger.annotations.Api api62 = null;
        boolean boolean63 = springMvcApiReader2.canReadApi(true, api62);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = springMvcApiReader66.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader66.parseOperationPath("", strMap73);
        io.swagger.models.Swagger swagger75 = springMvcApiReader66.swagger;
        io.swagger.annotations.Api api77 = null;
        boolean boolean78 = springMvcApiReader66.canReadApi(false, api77);
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader66.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader66.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader66.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet81);
        io.swagger.annotations.ApiOperation apiOperation83 = null;
        io.swagger.models.Operation operation84 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation83, operation84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(logAdapter71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNull(swagger75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(typeSet81);
    }

    @Test
    public void test08355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08355");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader2.swagger = swagger39;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger43 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation45 = null;
        io.swagger.annotations.ApiOperation apiOperation46 = null;
        springMvcApiReader2.updateTagsForOperation(operation45, apiOperation46);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNull(swagger43);
        org.junit.Assert.assertNull(logAdapter44);
    }

    @Test
    public void test08356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08356");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertNotNull(typeSet23);
    }

    @Test
    public void test08357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08357");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api13 = null;
        boolean boolean14 = springMvcApiReader2.canReadApi(false, api13);
        io.swagger.models.Swagger swagger15 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader18.typesToSkip;
        io.swagger.models.Swagger swagger24 = springMvcApiReader18.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader18.LOG = logAdapter25;
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        boolean boolean40 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList38);
        boolean boolean41 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList38);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = springMvcApiReader44.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader44.parseOperationPath("", strMap51);
        io.swagger.annotations.Api api54 = null;
        boolean boolean55 = springMvcApiReader44.canReadApi(false, api54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type type59 = null;
        springMvcApiReader58.addTypeToSkippedTypes(type59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader58.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader58.typesToSkip;
        springMvcApiReader44.setTypesToSkip(typeSet62);
        springMvcApiReader29.typesToSkip = typeSet62;
        springMvcApiReader18.typesToSkip = typeSet62;
        springMvcApiReader18.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader18.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet67;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(swagger11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(swagger15);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(logAdapter49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet67);
    }

    @Test
    public void test08358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08358");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader16.LOG;
        springMvcApiReader16.updateExtensionChain();
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader56.parseOperationPath("", strMap63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList66 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList66, typeArray65);
        springMvcApiReader56.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader16.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader2.typesToSkip;
        java.lang.Class<?> wildcardClass72 = typeSet71.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test08359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08359");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.Class<?> wildcardClass12 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        io.swagger.models.Swagger swagger16 = null;
        springMvcApiReader2.swagger = swagger16;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger19 = null;
        springMvcApiReader2.swagger = swagger19;
        io.swagger.annotations.ApiOperation apiOperation21 = null;
        io.swagger.models.Operation operation22 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation21, operation22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test08360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08360");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger25 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type type29 = null;
        springMvcApiReader28.addTypeToSkippedTypes(type29);
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader28.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet32;
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader2.swagger = swagger34;
        io.swagger.models.Swagger swagger36 = null;
        springMvcApiReader2.swagger = swagger36;
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList40 = springMvcApiReader2.getSecurityRequirements(api39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertNull(swagger25);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet38);
    }

    @Test
    public void test08361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08361");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(logAdapter16);
    }

    @Test
    public void test08362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08362");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.Class<?> wildcardClass12 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        springMvcApiReader2.LOG = logAdapter16;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader20.typesToSkip;
        springMvcApiReader20.updateExtensionChain();
        io.swagger.models.Operation operation27 = null;
        io.swagger.annotations.ApiOperation apiOperation28 = null;
        springMvcApiReader20.updateTagsForOperation(operation27, apiOperation28);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        springMvcApiReader20.LOG = logAdapter30;
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader56.parseOperationPath("", strMap63);
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader56.canReadApi(false, api66);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader56.parseOperationPath("hi!", strMap69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.Class<?> wildcardClass74 = springMvcApiReader73.getClass();
        springMvcApiReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = null;
        java.lang.String str78 = springMvcApiReader56.parseOperationPath("/hi!", strMap77);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray79 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap80 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray79);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap81 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray79);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap82 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray79);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap83 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray79);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/hi!" + "'", str78, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(strMap83);
    }

    @Test
    public void test08363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08363");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("", strMap12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.typesToSkip;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        io.swagger.annotations.Api api48 = null;
        boolean boolean49 = springMvcApiReader38.canReadApi(false, api48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader38.parseOperationPath("hi!", strMap51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.Class<?> wildcardClass56 = springMvcApiReader55.getClass();
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        springMvcApiReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader23.LOG;
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader62.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader62.parseOperationPath("", strMap69);
        java.lang.reflect.Type[] typeArray71 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList72 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList72, typeArray71);
        springMvcApiReader62.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        springMvcApiReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        springMvcApiReader16.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        springMvcApiReader2.LOG = logAdapter78;
        io.swagger.annotations.Api api81 = null;
        boolean boolean82 = springMvcApiReader2.canReadApi(true, api81);
        io.swagger.annotations.Api api83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList84 = springMvcApiReader2.getSecurityRequirements(api83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(logAdapter67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test08364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08364");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertNotNull(typeSet54);
    }

    @Test
    public void test08365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08365");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation11 = null;
        io.swagger.annotations.ApiOperation apiOperation12 = null;
        springMvcApiReader2.updateTagsForOperation(operation11, apiOperation12);
        io.swagger.models.Operation operation16 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "hi!", operation16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter10);
    }

    @Test
    public void test08366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08366");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation9 = null;
        io.swagger.annotations.ApiOperation apiOperation10 = null;
        springMvcApiReader2.updateTagsForOperation(operation9, apiOperation10);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList12 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap13 = null;
        io.swagger.models.Operation operation14 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationParameters(parameterList12, strMap13, operation14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
    }

    @Test
    public void test08367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08367");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader2.swagger = swagger27;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader32.typesToSkip;
        springMvcApiReader32.updateExtensionChain();
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.Class<?> wildcardClass42 = springMvcApiReader41.getClass();
        springMvcApiReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader53.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet63 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet63, typeArray62);
        springMvcApiReader61.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet63);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = springMvcApiReader61.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader61.parseOperationPath("", strMap68);
        io.swagger.annotations.Api api71 = null;
        boolean boolean72 = springMvcApiReader61.canReadApi(false, api71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        java.lang.String str75 = springMvcApiReader61.parseOperationPath("hi!", strMap74);
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.Class<?> wildcardClass79 = springMvcApiReader78.getClass();
        springMvcApiReader61.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        springMvcApiReader46.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        springMvcApiReader46.updateExtensionChain();
        io.swagger.models.Swagger swagger83 = null;
        springMvcApiReader46.swagger = swagger83;
        java.util.Set<java.lang.reflect.Type> typeSet85 = springMvcApiReader46.typesToSkip;
        springMvcApiReader32.setTypesToSkip(typeSet85);
        springMvcApiReader32.updateExtensionChain();
        java.lang.Class<?> wildcardClass88 = springMvcApiReader32.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass88);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(logAdapter66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/hi!" + "'", str75, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test08368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08368");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.lang.annotation.Annotation[] annotationArray39 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList40 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList40, annotationArray39);
        boolean boolean42 = springMvcApiReader34.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList40);
        io.swagger.models.Swagger swagger43 = null;
        springMvcApiReader34.swagger = swagger43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader34.getTypesToSkip();
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        springMvcApiReader48.addTypeToSkippedTypes(type49);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader48.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader48.getTypesToSkip();
        springMvcApiReader34.setTypesToSkip(typeSet52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        java.lang.annotation.Annotation[] annotationArray61 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList62 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList62, annotationArray61);
        boolean boolean64 = springMvcApiReader56.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList62);
        io.swagger.models.Swagger swagger65 = null;
        springMvcApiReader56.swagger = swagger65;
        java.lang.annotation.Annotation[] annotationArray67 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList68 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList68, annotationArray67);
        boolean boolean70 = springMvcApiReader56.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList68);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        springMvcApiReader56.LOG = logAdapter71;
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader75 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger73, logAdapter74);
        java.lang.reflect.Type type76 = null;
        springMvcApiReader75.addTypeToSkippedTypes(type76);
        java.util.Set<java.lang.reflect.Type> typeSet78 = springMvcApiReader75.typesToSkip;
        springMvcApiReader56.setTypesToSkip(typeSet78);
        springMvcApiReader34.typesToSkip = typeSet78;
        springMvcApiReader2.setTypesToSkip(typeSet78);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = null;
        springMvcApiReader2.LOG = logAdapter82;
        io.swagger.models.Operation operation84 = null;
        io.swagger.annotations.ApiOperation apiOperation85 = null;
        springMvcApiReader2.updateTagsForOperation(operation84, apiOperation85);
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter31);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(annotationArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(annotationArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(typeSet87);
    }

    @Test
    public void test08369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08369");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader37.typesToSkip;
        io.swagger.models.Swagger swagger43 = springMvcApiReader37.swagger;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        boolean boolean54 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList52);
        io.swagger.models.Swagger swagger55 = null;
        springMvcApiReader46.swagger = swagger55;
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        boolean boolean60 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        boolean boolean61 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        boolean boolean62 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        io.swagger.annotations.ApiOperation apiOperation63 = null;
        io.swagger.models.Operation operation64 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation63, operation64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNull(swagger43);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test08370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08370");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        springMvcApiReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader57.typesToSkip;
        springMvcApiReader57.updateExtensionChain();
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.Class<?> wildcardClass67 = springMvcApiReader66.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        springMvcApiReader2.LOG = logAdapter70;
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader2.parseOperationPath("hi!", strMap73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/hi!" + "'", str74, "/hi!");
        org.junit.Assert.assertNull(logAdapter75);
    }

    @Test
    public void test08371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08371");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        springMvcApiReader32.addTypeToSkippedTypes(type33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader32.typesToSkip;
        springMvcApiReader17.setTypesToSkip(typeSet35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader17.getTypesToSkip();
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader17.canReadApi(true, api39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        springMvcApiReader43.addTypeToSkippedTypes(type44);
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader43.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader43.getTypesToSkip();
        springMvcApiReader17.typesToSkip = typeSet47;
        springMvcApiReader2.typesToSkip = typeSet47;
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation51 = null;
        io.swagger.annotations.ApiOperation apiOperation52 = null;
        springMvcApiReader2.updateTagsForOperation(operation51, apiOperation52);
        io.swagger.models.Operation operation56 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "", operation56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet50);
    }

    @Test
    public void test08372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08372");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        boolean boolean44 = springMvcApiReader36.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader36.typesToSkip;
        springMvcApiReader36.updateExtensionChain();
        io.swagger.models.Operation operation47 = null;
        io.swagger.annotations.ApiOperation apiOperation48 = null;
        springMvcApiReader36.updateTagsForOperation(operation47, apiOperation48);
        io.swagger.annotations.Api api51 = null;
        boolean boolean52 = springMvcApiReader36.canReadApi(true, api51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        boolean boolean63 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader55.swagger = swagger64;
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader55.getTypesToSkip();
        java.lang.Class<?> wildcardClass67 = springMvcApiReader55.getClass();
        java.lang.annotation.Annotation[] annotationArray68 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList69 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList69, annotationArray68);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList71 = springMvcApiReader36.getParameters((java.lang.reflect.Type) wildcardClass67, (java.util.List<java.lang.annotation.Annotation>) annotationList69);
        boolean boolean72 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList69);
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(annotationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(parameterList71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(typeSet73);
    }

    @Test
    public void test08373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08373");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = null;
        springMvcApiReader2.typesToSkip = typeSet7;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        springMvcApiReader12.addTypeToSkippedTypes(type13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader12.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet15;
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader35.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader35.parseOperationPath("", strMap42);
        io.swagger.annotations.Api api45 = null;
        boolean boolean46 = springMvcApiReader35.canReadApi(false, api45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader35.parseOperationPath("hi!", strMap48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader52 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger50, logAdapter51);
        java.lang.Class<?> wildcardClass53 = springMvcApiReader52.getClass();
        springMvcApiReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        springMvcApiReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader20.LOG;
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet61 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet61, typeArray60);
        springMvcApiReader59.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = springMvcApiReader59.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap66 = null;
        java.lang.String str67 = springMvcApiReader59.parseOperationPath("", strMap66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList69 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList69, typeArray68);
        springMvcApiReader59.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        springMvcApiReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        springMvcApiReader2.LOG = logAdapter74;
        io.swagger.models.Swagger swagger76 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger77 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(typeSet9);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeSet17);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/hi!" + "'", str49, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNull(logAdapter56);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(logAdapter64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(swagger76);
        org.junit.Assert.assertNull(swagger77);
    }

    @Test
    public void test08374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08374");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader2.canReadApi(false, api47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger50 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger52 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api54 = null;
        boolean boolean55 = springMvcApiReader2.canReadApi(false, api54);
        io.swagger.annotations.ApiOperation apiOperation56 = null;
        io.swagger.models.Operation operation57 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation56, operation57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(swagger49);
        org.junit.Assert.assertNull(swagger50);
        org.junit.Assert.assertNull(swagger52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test08375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08375");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type[] typeArray9 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet10 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet10, typeArray9);
        springMvcApiReader8.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet10);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader8.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader8.parseOperationPath("", strMap15);
        io.swagger.annotations.Api api18 = null;
        boolean boolean19 = springMvcApiReader8.canReadApi(false, api18);
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        java.lang.String str22 = springMvcApiReader8.parseOperationPath("hi!", strMap21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.Class<?> wildcardClass26 = springMvcApiReader25.getClass();
        springMvcApiReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass26);
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader8.parseOperationPath("/hi!", strMap29);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray31 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap32 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray31);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap33 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray31);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        springMvcApiReader2.LOG = logAdapter35;
        io.swagger.models.Swagger swagger37 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "/hi!" + "'", str22, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "/hi!" + "'", str30, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNull(swagger37);
    }

    @Test
    public void test08376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08376");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        springMvcApiReader19.LOG = logAdapter30;
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader19.getTypesToSkip();
        java.lang.Class<?> wildcardClass33 = typeSet32.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNull(logAdapter35);
    }

    @Test
    public void test08377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08377");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader16.LOG;
        springMvcApiReader16.updateExtensionChain();
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader56.parseOperationPath("", strMap63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList66 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList66, typeArray65);
        springMvcApiReader56.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader16.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        springMvcApiReader2.LOG = logAdapter71;
        io.swagger.models.Operation operation73 = null;
        io.swagger.annotations.ApiOperation apiOperation74 = null;
        springMvcApiReader2.updateTagsForOperation(operation73, apiOperation74);
        io.swagger.models.Swagger swagger76 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource77 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger78 = springMvcApiReader2.read(springResource77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(swagger76);
    }

    @Test
    public void test08378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08378");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.Class<?> wildcardClass24 = springMvcApiReader23.getClass();
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] { wildcardClass24 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader12.typesToSkip = typeSet26;
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader12.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader66.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = springMvcApiReader66.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader66.parseOperationPath("", strMap73);
        io.swagger.annotations.Api api76 = null;
        boolean boolean77 = springMvcApiReader66.canReadApi(false, api76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader66.parseOperationPath("hi!", strMap79);
        io.swagger.models.Swagger swagger81 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader83 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger81, logAdapter82);
        java.lang.Class<?> wildcardClass84 = springMvcApiReader83.getClass();
        springMvcApiReader66.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        springMvcApiReader51.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        java.lang.annotation.Annotation[] annotationArray88 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList89 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList89, annotationArray88);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList91 = springMvcApiReader12.getParameters((java.lang.reflect.Type) wildcardClass84, (java.util.List<java.lang.annotation.Annotation>) annotationList89);
        boolean boolean92 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList89);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter93 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet94 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList97 = springMvcApiReader2.getSecurityRequirements(api96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(logAdapter71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "/hi!" + "'", str80, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(annotationArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(parameterList91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(logAdapter93);
        org.junit.Assert.assertNotNull(typeSet94);
    }

    @Test
    public void test08379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08379");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader37.typesToSkip;
        io.swagger.models.Swagger swagger43 = springMvcApiReader37.swagger;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        java.lang.annotation.Annotation[] annotationArray51 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList52 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList52, annotationArray51);
        boolean boolean54 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList52);
        io.swagger.models.Swagger swagger55 = null;
        springMvcApiReader46.swagger = swagger55;
        java.lang.annotation.Annotation[] annotationArray57 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList58 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList58, annotationArray57);
        boolean boolean60 = springMvcApiReader46.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        boolean boolean61 = springMvcApiReader37.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        boolean boolean62 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList58);
        io.swagger.models.Operation operation63 = null;
        io.swagger.annotations.ApiOperation apiOperation64 = null;
        springMvcApiReader2.updateTagsForOperation(operation63, apiOperation64);
        io.swagger.models.Swagger swagger66 = null;
        springMvcApiReader2.swagger = swagger66;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader2.parseOperationPath("hi!", strMap69);
        io.swagger.models.Operation operation71 = null;
        io.swagger.annotations.ApiOperation apiOperation72 = null;
        springMvcApiReader2.updateTagsForOperation(operation71, apiOperation72);
        io.swagger.models.Operation operation74 = null;
        io.swagger.annotations.ApiResponses apiResponses75 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation74, apiResponses75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNull(swagger43);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
    }

    @Test
    public void test08380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08380");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.reflect.Type[] typeArray14 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet15 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet15, typeArray14);
        springMvcApiReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet15);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader13.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap20 = null;
        java.lang.String str21 = springMvcApiReader13.parseOperationPath("", strMap20);
        io.swagger.annotations.Api api23 = null;
        boolean boolean24 = springMvcApiReader13.canReadApi(false, api23);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader13.parseOperationPath("hi!", strMap26);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.Class<?> wildcardClass31 = springMvcApiReader30.getClass();
        springMvcApiReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader13.parseOperationPath("/hi!", strMap34);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray36 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap37 = springMvcApiReader13.parseResponseHeaders(responseHeaderArray36);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap38 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray36);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type type57 = null;
        springMvcApiReader56.addTypeToSkippedTypes(type57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader56.typesToSkip;
        springMvcApiReader41.setTypesToSkip(typeSet59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        java.lang.annotation.Annotation[] annotationArray68 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList69 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList69, annotationArray68);
        boolean boolean71 = springMvcApiReader63.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList69);
        io.swagger.models.Swagger swagger72 = null;
        springMvcApiReader63.swagger = swagger72;
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader63.getTypesToSkip();
        springMvcApiReader41.setTypesToSkip(typeSet74);
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader41.typesToSkip;
        springMvcApiReader41.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet78 = springMvcApiReader41.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        springMvcApiReader41.LOG = logAdapter79;
        io.swagger.models.Swagger swagger81 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader83 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger81, logAdapter82);
        java.lang.reflect.Type type84 = null;
        springMvcApiReader83.addTypeToSkippedTypes(type84);
        java.util.Set<java.lang.reflect.Type> typeSet86 = springMvcApiReader83.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet87 = springMvcApiReader83.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter88 = springMvcApiReader83.LOG;
        springMvcApiReader83.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet90 = springMvcApiReader83.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader83.getTypesToSkip();
        springMvcApiReader41.typesToSkip = typeSet91;
        springMvcApiReader2.typesToSkip = typeSet91;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "/hi!" + "'", str27, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(annotationArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNull(logAdapter88);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(typeSet91);
    }

    @Test
    public void test08381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08381");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type38 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type38);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader2.swagger = swagger40;
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap43 = null;
        io.swagger.annotations.Api api44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap45 = springMvcApiReader2.updateTagsForApi(strMap43, api44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet42);
    }

    @Test
    public void test08382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08382");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("hi!", strMap12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.updateExtensionChain();
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader16.swagger = swagger53;
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        java.lang.String str57 = springMvcApiReader16.parseOperationPath("hi!", strMap56);
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader16.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet59);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        springMvcApiReader2.LOG = logAdapter61;
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet65 = springMvcApiReader2.extractTags(api64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/hi!" + "'", str13, "/hi!");
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeSet63);
    }

    @Test
    public void test08383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08383");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger23 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger25 = null;
        springMvcApiReader2.swagger = swagger25;
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader29.parseOperationPath("/hi!", strMap31);
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader29.getTypesToSkip();
        io.swagger.models.Swagger swagger34 = springMvcApiReader29.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader29.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader29.LOG;
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader39.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader39.getTypesToSkip();
        io.swagger.models.Operation operation42 = null;
        io.swagger.annotations.ApiOperation apiOperation43 = null;
        springMvcApiReader39.updateTagsForOperation(operation42, apiOperation43);
        io.swagger.annotations.Api api46 = null;
        boolean boolean47 = springMvcApiReader39.canReadApi(false, api46);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        springMvcApiReader39.LOG = logAdapter48;
        io.swagger.models.Swagger swagger50 = springMvcApiReader39.swagger;
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader53.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = springMvcApiReader53.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader53.parseOperationPath("", strMap60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.Class<?> wildcardClass65 = springMvcApiReader64.getClass();
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] { wildcardClass65 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet67 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet67, typeArray66);
        springMvcApiReader53.typesToSkip = typeSet67;
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader53.getTypesToSkip();
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.reflect.Type[] typeArray74 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet75 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet75, typeArray74);
        springMvcApiReader73.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet75);
        java.lang.annotation.Annotation[] annotationArray78 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList79 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList79, annotationArray78);
        boolean boolean81 = springMvcApiReader73.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        boolean boolean82 = springMvcApiReader53.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        boolean boolean83 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        boolean boolean84 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        boolean boolean85 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNull(swagger23);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNull(swagger34);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(swagger50);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(logAdapter58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(annotationArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test08384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08384");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader2.parseOperationPath("hi!", strMap39);
        io.swagger.models.Swagger swagger41 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger43 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        springMvcApiReader2.LOG = logAdapter45;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation50 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "/hi!", operation50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNull(swagger41);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertNull(swagger43);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertNull(logAdapter47);
    }

    @Test
    public void test08385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08385");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = springMvcApiReader20.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader20.parseOperationPath("", strMap27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.Class<?> wildcardClass32 = springMvcApiReader31.getClass();
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] { wildcardClass32 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader20.typesToSkip = typeSet34;
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader20.getTypesToSkip();
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        boolean boolean48 = springMvcApiReader40.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList46);
        boolean boolean49 = springMvcApiReader20.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList46);
        boolean boolean50 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList46);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader2.parseOperationPath("hi!", strMap52);
        io.swagger.annotations.Api api54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList55 = springMvcApiReader2.getSecurityRequirements(api54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(logAdapter25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "/hi!" + "'", str53, "/hi!");
    }

    @Test
    public void test08386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08386");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("hi!", strMap12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader16.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader16.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet53;
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.lang.annotation.Annotation[] annotationArray62 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList63 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList63, annotationArray62);
        boolean boolean65 = springMvcApiReader57.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList63);
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader57.typesToSkip;
        io.swagger.models.Swagger swagger67 = null;
        springMvcApiReader57.swagger = swagger67;
        springMvcApiReader57.updateExtensionChain();
        io.swagger.models.Swagger swagger70 = springMvcApiReader57.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = springMvcApiReader57.LOG;
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet76 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet76, typeArray75);
        springMvcApiReader74.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet76);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = springMvcApiReader74.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap81 = null;
        java.lang.String str82 = springMvcApiReader74.parseOperationPath("", strMap81);
        java.lang.reflect.Type[] typeArray83 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList84 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList84, typeArray83);
        springMvcApiReader74.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        springMvcApiReader57.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter89 = null;
        springMvcApiReader2.LOG = logAdapter89;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/hi!" + "'", str13, "/hi!");
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNull(swagger70);
        org.junit.Assert.assertNull(logAdapter71);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(logAdapter79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test08387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08387");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api9 = null;
        boolean boolean10 = springMvcApiReader2.canReadApi(true, api9);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader17.typesToSkip;
        springMvcApiReader17.updateExtensionChain();
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiOperation apiOperation29 = null;
        springMvcApiReader17.updateTagsForOperation(operation28, apiOperation29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader17.canReadApi(true, api32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        java.lang.annotation.Annotation[] annotationArray41 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList42 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList42, annotationArray41);
        boolean boolean44 = springMvcApiReader36.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        boolean boolean45 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        boolean boolean46 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList42);
        io.swagger.models.Swagger swagger47 = null;
        springMvcApiReader2.swagger = swagger47;
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader2.parseOperationPath("/hi!", strMap50);
        io.swagger.annotations.Api api52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet53 = springMvcApiReader2.extractTags(api52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/hi!" + "'", str51, "/hi!");
    }

    @Test
    public void test08388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08388");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger57 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation58 = null;
        io.swagger.annotations.ApiOperation apiOperation59 = null;
        springMvcApiReader2.updateTagsForOperation(operation58, apiOperation59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        java.lang.Class<?> wildcardClass68 = springMvcApiReader63.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        io.swagger.annotations.Api api71 = null;
        boolean boolean72 = springMvcApiReader2.canReadApi(true, api71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        java.lang.String str75 = springMvcApiReader2.parseOperationPath("", strMap74);
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNull(swagger57);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(typeSet76);
    }

    @Test
    public void test08389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08389");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader2.canReadApi(true, api22);
        io.swagger.annotations.Api api25 = null;
        boolean boolean26 = springMvcApiReader2.canReadApi(false, api25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        springMvcApiReader29.addTypeToSkippedTypes(type30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader29.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader29.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader29.LOG;
        java.lang.String[] strArray35 = null;
        java.lang.String[] strArray39 = new java.lang.String[] { "/hi!", "hi!", "/hi!" };
        io.swagger.models.Operation operation40 = null;
        java.lang.String[] strArray41 = springMvcApiReader29.updateOperationProduces(strArray35, strArray39, operation40);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type type45 = null;
        springMvcApiReader44.addTypeToSkippedTypes(type45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader44.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader44.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = springMvcApiReader44.LOG;
        java.lang.String[] strArray50 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "/hi!", "hi!", "/hi!" };
        io.swagger.models.Operation operation55 = null;
        java.lang.String[] strArray56 = springMvcApiReader44.updateOperationProduces(strArray50, strArray54, operation55);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap57 = null;
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = springMvcApiReader60.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader60.parseOperationPath("", strMap67);
        java.lang.reflect.Type[] typeArray69 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList70 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList70, typeArray69);
        springMvcApiReader60.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        java.lang.String[] strArray73 = new java.lang.String[] {};
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap78 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray79 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList80 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList80, securityRequirementArray79);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader60.updateOperation(strArray73, strArray77, strMap78, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList80, operation82);
        io.swagger.models.Operation operation84 = null;
        springMvcApiReader2.updateOperation(strArray39, strArray56, strMap57, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList80, operation84);
        java.lang.Class<?> wildcardClass86 = securityRequirementList80.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNull(logAdapter49);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(logAdapter65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(securityRequirementArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test08390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08390");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource60 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger61 = springMvcApiReader2.read(springResource60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNull(logAdapter59);
    }

    @Test
    public void test08391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08391");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        io.swagger.models.Operation operation15 = null;
        io.swagger.annotations.ApiOperation apiOperation16 = null;
        springMvcApiReader2.updateTagsForOperation(operation15, apiOperation16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type18);
        io.swagger.models.Operation operation20 = null;
        io.swagger.annotations.ApiOperation apiOperation21 = null;
        springMvcApiReader2.updateTagsForOperation(operation20, apiOperation21);
        io.swagger.annotations.Api api23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList24 = springMvcApiReader2.getSecurityRequirements(api23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
    }

    @Test
    public void test08392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08392");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = springMvcApiReader30.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader30.parseOperationPath("", strMap37);
        io.swagger.annotations.Api api40 = null;
        boolean boolean41 = springMvcApiReader30.canReadApi(false, api40);
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        java.lang.String str44 = springMvcApiReader30.parseOperationPath("hi!", strMap43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet56 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet56, typeArray55);
        springMvcApiReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader62.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader62.parseOperationPath("", strMap69);
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader62.canReadApi(false, api72);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader62.parseOperationPath("hi!", strMap75);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.Class<?> wildcardClass80 = springMvcApiReader79.getClass();
        springMvcApiReader62.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        springMvcApiReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        springMvcApiReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        java.util.Set<java.lang.reflect.Type> typeSet84 = springMvcApiReader30.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet84);
        io.swagger.models.Swagger swagger86 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger87 = null;
        springMvcApiReader2.swagger = swagger87;
        io.swagger.annotations.Api api90 = null;
        boolean boolean91 = springMvcApiReader2.canReadApi(false, api90);
        io.swagger.models.Swagger swagger92 = null;
        springMvcApiReader2.swagger = swagger92;
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(logAdapter35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "/hi!" + "'", str44, "/hi!");
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(logAdapter67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNull(swagger86);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test08393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08393");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray13);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        springMvcApiReader2.LOG = logAdapter15;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type type35 = null;
        springMvcApiReader34.addTypeToSkippedTypes(type35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader34.typesToSkip;
        springMvcApiReader19.setTypesToSkip(typeSet37);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader19.getTypesToSkip();
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader19.swagger = swagger40;
        springMvcApiReader19.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader19.LOG;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader46.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader46.parseOperationPath("", strMap53);
        io.swagger.annotations.Api api56 = null;
        boolean boolean57 = springMvcApiReader46.canReadApi(false, api56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = springMvcApiReader60.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader60.parseOperationPath("", strMap67);
        io.swagger.annotations.Api api70 = null;
        boolean boolean71 = springMvcApiReader60.canReadApi(false, api70);
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader60.parseOperationPath("hi!", strMap73);
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader77 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger75, logAdapter76);
        java.lang.Class<?> wildcardClass78 = springMvcApiReader77.getClass();
        springMvcApiReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass78);
        java.util.Map<java.lang.String, java.lang.String> strMap81 = null;
        java.lang.String str82 = springMvcApiReader60.parseOperationPath("/hi!", strMap81);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray83 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap84 = springMvcApiReader60.parseResponseHeaders(responseHeaderArray83);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap85 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray83);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap86 = springMvcApiReader19.parseResponseHeaders(responseHeaderArray83);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap87 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray83);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(logAdapter65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/hi!" + "'", str74, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "/hi!" + "'", str82, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNull(strMap87);
    }

    @Test
    public void test08394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08394");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger34 = null;
        springMvcApiReader2.swagger = swagger34;
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader2.canReadApi(false, api39);
        io.swagger.annotations.ApiOperation apiOperation41 = null;
        io.swagger.models.Operation operation42 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation41, operation42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test08395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08395");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray13 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap14 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray13);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = springMvcApiReader18.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader18.typesToSkip;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader23.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader23.parseOperationPath("", strMap30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList33 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList33, typeArray32);
        springMvcApiReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList33);
        springMvcApiReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList33);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList33);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(logAdapter19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(logAdapter28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test08396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08396");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type type32 = null;
        springMvcApiReader31.addTypeToSkippedTypes(type32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader31.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader31.typesToSkip;
        springMvcApiReader17.setTypesToSkip(typeSet35);
        springMvcApiReader2.typesToSkip = typeSet35;
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader2.canReadApi(true, api39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader2.parseOperationPath("", strMap42);
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test08397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08397");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray10 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap11 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray10);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader21 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger19, logAdapter20);
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet23 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet23, typeArray22);
        springMvcApiReader21.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet23);
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader21.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        java.lang.annotation.Annotation[] annotationArray38 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList39 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList39, annotationArray38);
        boolean boolean41 = springMvcApiReader33.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        boolean boolean42 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList39);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader18.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet43);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(swagger7);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(logAdapter12);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(annotationArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeSet43);
    }

    @Test
    public void test08398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08398");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        springMvcApiReader2.updateExtensionChain();
        java.lang.String[] strArray19 = new java.lang.String[] { "/hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader2.updateOperation(strArray19, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = springMvcApiReader30.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader30.parseOperationPath("", strMap37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        springMvcApiReader30.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        java.lang.String[] strArray43 = new java.lang.String[] {};
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap48 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray49 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList50 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList50, securityRequirementArray49);
        io.swagger.models.Operation operation52 = null;
        springMvcApiReader30.updateOperation(strArray43, strArray47, strMap48, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList50, operation52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader30.parseOperationPath("", strMap55);
        springMvcApiReader30.updateExtensionChain();
        io.swagger.models.Swagger swagger58 = null;
        springMvcApiReader30.swagger = swagger58;
        io.swagger.models.Operation operation60 = null;
        io.swagger.annotations.ApiOperation apiOperation61 = null;
        springMvcApiReader30.updateTagsForOperation(operation60, apiOperation61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet67 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet67, typeArray66);
        springMvcApiReader65.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet67);
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader65.typesToSkip;
        io.swagger.models.Swagger swagger71 = springMvcApiReader65.swagger;
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet76 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet76, typeArray75);
        springMvcApiReader74.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet76);
        java.lang.annotation.Annotation[] annotationArray79 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList80 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList80, annotationArray79);
        boolean boolean82 = springMvcApiReader74.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        io.swagger.models.Swagger swagger83 = null;
        springMvcApiReader74.swagger = swagger83;
        java.lang.annotation.Annotation[] annotationArray85 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList86 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList86, annotationArray85);
        boolean boolean88 = springMvcApiReader74.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList86);
        boolean boolean89 = springMvcApiReader65.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList86);
        boolean boolean90 = springMvcApiReader30.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList86);
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader30.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet91;
        io.swagger.annotations.Api api93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet94 = springMvcApiReader2.extractTags(api93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(logAdapter35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(securityRequirementArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNull(swagger71);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(annotationArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(annotationArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(typeSet91);
    }

    @Test
    public void test08399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08399");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet56 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger58 = null;
        springMvcApiReader2.swagger = swagger58;
        io.swagger.models.Swagger swagger60 = null;
        springMvcApiReader2.swagger = swagger60;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader2.parseOperationPath("", strMap63);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource65 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger66 = springMvcApiReader2.read(springResource65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNull(logAdapter57);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
    }

    @Test
    public void test08400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08400");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        springMvcApiReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader2.parseOperationPath("hi!", strMap57);
        java.util.Map<java.lang.String, java.lang.String> strMap60 = null;
        java.lang.String str61 = springMvcApiReader2.parseOperationPath("/hi!", strMap60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type type65 = null;
        springMvcApiReader64.addTypeToSkippedTypes(type65);
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader64.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet67);
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader2.parseOperationPath("/hi!", strMap70);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        springMvcApiReader2.LOG = logAdapter72;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet78 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        springMvcApiReader2.LOG = logAdapter79;
        io.swagger.annotations.ApiOperation apiOperation81 = null;
        io.swagger.models.Operation operation82 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation81, operation82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "/hi!" + "'", str58, "/hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "/hi!" + "'", str61, "/hi!");
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "/hi!" + "'", str71, "/hi!");
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(typeSet78);
    }

    @Test
    public void test08401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08401");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation9 = null;
        io.swagger.annotations.ApiOperation apiOperation10 = null;
        springMvcApiReader2.updateTagsForOperation(operation9, apiOperation10);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        springMvcApiReader2.LOG = logAdapter16;
        java.lang.Class<?> wildcardClass18 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test08402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08402");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        io.swagger.annotations.Api api19 = null;
        boolean boolean20 = springMvcApiReader2.canReadApi(false, api19);
        io.swagger.models.Swagger swagger21 = null;
        springMvcApiReader2.swagger = swagger21;
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader2.parseOperationPath("hi!", strMap25);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap29 = null;
        io.swagger.annotations.Api api30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap31 = springMvcApiReader2.updateTagsForApi(strMap29, api30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertNotNull(typeSet28);
    }

    @Test
    public void test08403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08403");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader2.swagger = swagger27;
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet66 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet66, typeArray65);
        springMvcApiReader64.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet66);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet66);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type type73 = null;
        springMvcApiReader72.addTypeToSkippedTypes(type73);
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader72.typesToSkip;
        springMvcApiReader57.setTypesToSkip(typeSet75);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet81 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet81, typeArray80);
        springMvcApiReader79.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet81);
        java.lang.annotation.Annotation[] annotationArray84 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList85 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList85, annotationArray84);
        boolean boolean87 = springMvcApiReader79.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList85);
        io.swagger.models.Swagger swagger88 = null;
        springMvcApiReader79.swagger = swagger88;
        java.util.Set<java.lang.reflect.Type> typeSet90 = springMvcApiReader79.getTypesToSkip();
        springMvcApiReader57.setTypesToSkip(typeSet90);
        springMvcApiReader2.setTypesToSkip(typeSet90);
        io.swagger.models.Swagger swagger93 = null;
        springMvcApiReader2.swagger = swagger93;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter95 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(annotationArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNull(logAdapter95);
    }

    @Test
    public void test08404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08404");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        springMvcApiReader2.LOG = logAdapter27;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        springMvcApiReader32.addTypeToSkippedTypes(type33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader32.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader32.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader32.parseOperationPath("", strMap38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader64 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger62, logAdapter63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet66 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet66, typeArray65);
        springMvcApiReader64.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet66);
        java.lang.annotation.Annotation[] annotationArray69 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList70 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList70, annotationArray69);
        boolean boolean72 = springMvcApiReader64.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList70);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList73 = springMvcApiReader32.getParameters((java.lang.reflect.Type) wildcardClass60, (java.util.List<java.lang.annotation.Annotation>) annotationList70);
        springMvcApiReader32.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader32.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader32.typesToSkip;
        io.swagger.models.Swagger swagger77 = null;
        springMvcApiReader32.swagger = swagger77;
        io.swagger.annotations.Api api80 = null;
        boolean boolean81 = springMvcApiReader32.canReadApi(false, api80);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader32.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet82);
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap84 = null;
        io.swagger.annotations.Api api85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap86 = springMvcApiReader2.updateTagsForApi(strMap84, api85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(annotationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(parameterList73);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(typeSet82);
    }

    @Test
    public void test08405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08405");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        boolean boolean26 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader18.swagger = swagger27;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        springMvcApiReader18.LOG = logAdapter29;
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type type49 = null;
        springMvcApiReader48.addTypeToSkippedTypes(type49);
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader48.typesToSkip;
        springMvcApiReader33.setTypesToSkip(typeSet51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader33.getTypesToSkip();
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader33.canReadApi(true, api55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.reflect.Type type60 = null;
        springMvcApiReader59.addTypeToSkippedTypes(type60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader59.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader59.getTypesToSkip();
        springMvcApiReader33.typesToSkip = typeSet63;
        springMvcApiReader18.setTypesToSkip(typeSet63);
        springMvcApiReader2.typesToSkip = typeSet63;
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader2.parseOperationPath("hi!", strMap70);
        io.swagger.annotations.Api api73 = null;
        boolean boolean74 = springMvcApiReader2.canReadApi(true, api73);
        io.swagger.models.Operation operation75 = null;
        io.swagger.annotations.ApiResponses apiResponses76 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation75, apiResponses76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(swagger15);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "/hi!" + "'", str71, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test08406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08406");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader16.LOG;
        springMvcApiReader16.updateExtensionChain();
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader56.parseOperationPath("", strMap63);
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList66 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList66, typeArray65);
        springMvcApiReader56.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader16.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        io.swagger.models.Operation operation71 = null;
        io.swagger.annotations.ApiOperation apiOperation72 = null;
        springMvcApiReader2.updateTagsForOperation(operation71, apiOperation72);
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass75 = typeSet74.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test08407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08407");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("hi!", strMap9);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.annotations.Api api14 = null;
        boolean boolean15 = springMvcApiReader2.canReadApi(false, api14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger17 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation18 = null;
        io.swagger.annotations.ApiOperation apiOperation19 = null;
        springMvcApiReader2.updateTagsForOperation(operation18, apiOperation19);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "/hi!" + "'", str10, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter16);
        org.junit.Assert.assertNull(swagger17);
    }

    @Test
    public void test08408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08408");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation9 = null;
        io.swagger.annotations.ApiOperation apiOperation10 = null;
        springMvcApiReader2.updateTagsForOperation(operation9, apiOperation10);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger13 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        springMvcApiReader2.swagger = swagger17;
        io.swagger.models.Operation operation19 = null;
        io.swagger.annotations.ApiOperation apiOperation20 = null;
        springMvcApiReader2.updateTagsForOperation(operation19, apiOperation20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type type55 = null;
        springMvcApiReader54.addTypeToSkippedTypes(type55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = springMvcApiReader54.typesToSkip;
        springMvcApiReader39.setTypesToSkip(typeSet57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader39.getTypesToSkip();
        io.swagger.annotations.Api api61 = null;
        boolean boolean62 = springMvcApiReader39.canReadApi(true, api61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.reflect.Type type66 = null;
        springMvcApiReader65.addTypeToSkippedTypes(type66);
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader65.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader65.getTypesToSkip();
        springMvcApiReader39.typesToSkip = typeSet69;
        springMvcApiReader24.typesToSkip = typeSet69;
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader24.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        java.lang.String str75 = springMvcApiReader24.parseOperationPath("/hi!", strMap74);
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader24.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet76;
        java.lang.reflect.Method method78 = null;
        io.swagger.models.Operation operation79 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method78, operation79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/hi!" + "'", str75, "/hi!");
        org.junit.Assert.assertNotNull(typeSet76);
    }

    @Test
    public void test08409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08409");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader2.updateTagsForOperation(operation17, apiOperation18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet21 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet23);
    }

    @Test
    public void test08410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08410");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.Class<?> wildcardClass29 = springMvcApiReader28.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass29 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader17.typesToSkip = typeSet31;
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader17.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet34);
        io.swagger.models.Swagger swagger36 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        java.lang.annotation.Annotation[] annotationArray45 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList46 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList46, annotationArray45);
        boolean boolean48 = springMvcApiReader40.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList46);
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader40.typesToSkip;
        io.swagger.models.Swagger swagger50 = null;
        springMvcApiReader40.swagger = swagger50;
        springMvcApiReader40.updateExtensionChain();
        io.swagger.models.Swagger swagger53 = springMvcApiReader40.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = springMvcApiReader40.LOG;
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = springMvcApiReader57.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader57.parseOperationPath("", strMap64);
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList67 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList67, typeArray66);
        springMvcApiReader57.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        springMvcApiReader40.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        io.swagger.models.Operation operation72 = null;
        io.swagger.annotations.ApiResponses apiResponses73 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation72, apiResponses73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNull(swagger36);
        org.junit.Assert.assertNull(logAdapter37);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNull(swagger53);
        org.junit.Assert.assertNull(logAdapter54);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(logAdapter62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test08411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08411");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(false, api26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        springMvcApiReader2.LOG = logAdapter28;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger31 = null;
        springMvcApiReader2.swagger = swagger31;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(logAdapter24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test08412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08412");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        springMvcApiReader10.addTypeToSkippedTypes(type11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader10.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader10.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader10.parseOperationPath("", strMap16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = springMvcApiReader20.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader20.parseOperationPath("", strMap27);
        io.swagger.annotations.Api api30 = null;
        boolean boolean31 = springMvcApiReader20.canReadApi(false, api30);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        java.lang.String str34 = springMvcApiReader20.parseOperationPath("hi!", strMap33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.Class<?> wildcardClass38 = springMvcApiReader37.getClass();
        springMvcApiReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        java.lang.annotation.Annotation[] annotationArray47 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList48 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList48, annotationArray47);
        boolean boolean50 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList48);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList51 = springMvcApiReader10.getParameters((java.lang.reflect.Type) wildcardClass38, (java.util.List<java.lang.annotation.Annotation>) annotationList48);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        boolean boolean63 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        java.util.Set<java.lang.reflect.Type> typeSet64 = springMvcApiReader55.typesToSkip;
        springMvcApiReader55.updateExtensionChain();
        io.swagger.models.Operation operation66 = null;
        io.swagger.annotations.ApiOperation apiOperation67 = null;
        springMvcApiReader55.updateTagsForOperation(operation66, apiOperation67);
        io.swagger.annotations.Api api70 = null;
        boolean boolean71 = springMvcApiReader55.canReadApi(true, api70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet76 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet76, typeArray75);
        springMvcApiReader74.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet76);
        java.lang.annotation.Annotation[] annotationArray79 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList80 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList80, annotationArray79);
        boolean boolean82 = springMvcApiReader74.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList80);
        io.swagger.models.Swagger swagger83 = null;
        springMvcApiReader74.swagger = swagger83;
        java.util.Set<java.lang.reflect.Type> typeSet85 = springMvcApiReader74.getTypesToSkip();
        java.lang.Class<?> wildcardClass86 = springMvcApiReader74.getClass();
        java.lang.annotation.Annotation[] annotationArray87 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList88 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList88, annotationArray87);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList90 = springMvcApiReader55.getParameters((java.lang.reflect.Type) wildcardClass86, (java.util.List<java.lang.annotation.Annotation>) annotationList88);
        boolean boolean91 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList88);
        io.swagger.annotations.Api api93 = null;
        boolean boolean94 = springMvcApiReader2.canReadApi(false, api93);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(swagger7);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(logAdapter25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/hi!" + "'", str34, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(annotationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(parameterList51);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(annotationArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(annotationArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(parameterList90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test08413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08413");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        java.lang.annotation.Annotation[] annotationArray21 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList22 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList22, annotationArray21);
        boolean boolean24 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList22);
        io.swagger.models.Swagger swagger25 = null;
        springMvcApiReader16.swagger = swagger25;
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        boolean boolean30 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        java.lang.Class<?> wildcardClass31 = annotationList28.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass31);
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("hi!", strMap34);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader2.LOG;
        io.swagger.models.Operation operation37 = null;
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        springMvcApiReader2.updateTagsForOperation(operation37, apiOperation38);
        io.swagger.models.Swagger swagger40 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger42 = null;
        springMvcApiReader2.swagger = swagger42;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap44 = null;
        io.swagger.annotations.Api api45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap46 = springMvcApiReader2.updateTagsForApi(strMap44, api45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertNull(swagger40);
        org.junit.Assert.assertNotNull(typeSet41);
    }

    @Test
    public void test08414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08414");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api20 = null;
        boolean boolean21 = springMvcApiReader2.canReadApi(false, api20);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
    }

    @Test
    public void test08415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08415");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader2.swagger = swagger40;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertNotNull(typeSet44);
    }

    @Test
    public void test08416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08416");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet12 = springMvcApiReader8.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader8.LOG;
        io.swagger.models.Swagger swagger14 = springMvcApiReader8.swagger;
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader8.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        boolean boolean40 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList38);
        io.swagger.models.Swagger swagger41 = null;
        springMvcApiReader32.swagger = swagger41;
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        boolean boolean46 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList44);
        boolean boolean47 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader19.LOG;
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        springMvcApiReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        java.lang.annotation.Annotation[] annotationArray56 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList57 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList57, annotationArray56);
        boolean boolean59 = springMvcApiReader51.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList57);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader62.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader62.parseOperationPath("", strMap69);
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader62.canReadApi(false, api72);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader62.parseOperationPath("hi!", strMap75);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.Class<?> wildcardClass80 = springMvcApiReader79.getClass();
        springMvcApiReader62.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader62.parseOperationPath("/hi!", strMap83);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray85 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap86 = springMvcApiReader62.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap87 = springMvcApiReader51.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap88 = springMvcApiReader19.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap89 = springMvcApiReader8.parseResponseHeaders(responseHeaderArray85);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap90 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray85);
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter92 = null;
        springMvcApiReader2.LOG = logAdapter92;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNull(swagger14);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(annotationArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(logAdapter67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "/hi!" + "'", str84, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray85);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNull(strMap88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNotNull(typeSet91);
    }

    @Test
    public void test08417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08417");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader39.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap46 = null;
        java.lang.String str47 = springMvcApiReader39.parseOperationPath("", strMap46);
        io.swagger.annotations.Api api49 = null;
        boolean boolean50 = springMvcApiReader39.canReadApi(false, api49);
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader39.parseOperationPath("hi!", strMap52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet73 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet73, typeArray72);
        springMvcApiReader71.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet73);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = springMvcApiReader71.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        java.lang.String str79 = springMvcApiReader71.parseOperationPath("", strMap78);
        io.swagger.annotations.Api api81 = null;
        boolean boolean82 = springMvcApiReader71.canReadApi(false, api81);
        java.util.Map<java.lang.String, java.lang.String> strMap84 = null;
        java.lang.String str85 = springMvcApiReader71.parseOperationPath("hi!", strMap84);
        io.swagger.models.Swagger swagger86 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter87 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader88 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger86, logAdapter87);
        java.lang.Class<?> wildcardClass89 = springMvcApiReader88.getClass();
        springMvcApiReader71.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        springMvcApiReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        springMvcApiReader39.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        io.swagger.models.Swagger swagger94 = null;
        springMvcApiReader2.swagger = swagger94;
        java.util.Set<java.lang.reflect.Type> typeSet96 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap97 = null;
        io.swagger.annotations.Api api98 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap99 = springMvcApiReader2.updateTagsForApi(strMap97, api98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "/hi!" + "'", str53, "/hi!");
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(logAdapter76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "/hi!" + "'", str85, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(typeSet96);
    }

    @Test
    public void test08418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08418");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource34 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger35 = springMvcApiReader2.read(springResource34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeSet33);
    }

    @Test
    public void test08419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08419");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api9 = null;
        boolean boolean10 = springMvcApiReader2.canReadApi(true, api9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        java.lang.String[] strArray15 = null;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader18.canReadApi(false, api28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader18.parseOperationPath("hi!", strMap31);
        springMvcApiReader18.updateExtensionChain();
        java.lang.String[] strArray35 = new java.lang.String[] { "/hi!" };
        java.lang.String[] strArray36 = new java.lang.String[] {};
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap37 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray38 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList39 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList39, securityRequirementArray38);
        io.swagger.models.Operation operation41 = null;
        springMvcApiReader18.updateOperation(strArray35, strArray36, strMap37, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList39, operation41);
        io.swagger.models.Operation operation43 = null;
        java.lang.String[] strArray44 = springMvcApiReader2.updateOperationProduces(strArray15, strArray36, operation43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation46 = null;
        io.swagger.annotations.ApiOperation apiOperation47 = null;
        springMvcApiReader2.updateTagsForOperation(operation46, apiOperation47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(securityRequirementArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNull(swagger49);
    }

    @Test
    public void test08420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08420");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation9 = null;
        io.swagger.annotations.ApiOperation apiOperation10 = null;
        springMvcApiReader2.updateTagsForOperation(operation9, apiOperation10);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader15.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader15.parseOperationPath("", strMap18);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        io.swagger.models.Swagger swagger42 = null;
        springMvcApiReader22.swagger = swagger42;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type type47 = null;
        springMvcApiReader46.addTypeToSkippedTypes(type47);
        java.util.Set<java.lang.reflect.Type> typeSet49 = springMvcApiReader46.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader46.getTypesToSkip();
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader53.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader60.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        springMvcApiReader53.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet62);
        java.lang.Class<?> wildcardClass67 = typeSet62.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        springMvcApiReader22.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader22.getTypesToSkip();
        springMvcApiReader15.typesToSkip = typeSet70;
        springMvcApiReader2.typesToSkip = typeSet70;
        io.swagger.annotations.Api api73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList74 = springMvcApiReader2.getSecurityRequirements(api73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(logAdapter12);
        org.junit.Assert.assertNull(logAdapter16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(typeSet70);
    }

    @Test
    public void test08421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08421");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type type33 = null;
        springMvcApiReader32.addTypeToSkippedTypes(type33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader32.typesToSkip;
        springMvcApiReader17.setTypesToSkip(typeSet35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader17.getTypesToSkip();
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader17.canReadApi(true, api39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        springMvcApiReader43.addTypeToSkippedTypes(type44);
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader43.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader43.getTypesToSkip();
        springMvcApiReader17.typesToSkip = typeSet47;
        springMvcApiReader2.typesToSkip = typeSet47;
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader2.parseOperationPath("/hi!", strMap52);
        io.swagger.models.Operation operation54 = null;
        io.swagger.annotations.ApiOperation apiOperation55 = null;
        springMvcApiReader2.updateTagsForOperation(operation54, apiOperation55);
        io.swagger.models.Operation operation59 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "/hi!", operation59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "/hi!" + "'", str53, "/hi!");
    }

    @Test
    public void test08422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08422");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader2.canReadApi(false, api33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        springMvcApiReader2.LOG = logAdapter35;
        java.lang.String[] strArray37 = null;
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        springMvcApiReader40.addTypeToSkippedTypes(type41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader40.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader40.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = springMvcApiReader40.LOG;
        java.lang.String[] strArray46 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "/hi!", "hi!", "/hi!" };
        io.swagger.models.Operation operation51 = null;
        java.lang.String[] strArray52 = springMvcApiReader40.updateOperationProduces(strArray46, strArray50, operation51);
        io.swagger.models.Operation operation53 = null;
        java.lang.String[] strArray54 = springMvcApiReader2.updateOperationProduces(strArray37, strArray50, operation53);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = springMvcApiReader57.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader57.parseOperationPath("", strMap64);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader68 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger66, logAdapter67);
        java.lang.Class<?> wildcardClass69 = springMvcApiReader68.getClass();
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] { wildcardClass69 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet71 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet71, typeArray70);
        springMvcApiReader57.typesToSkip = typeSet71;
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader57.getTypesToSkip();
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader77 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger75, logAdapter76);
        java.lang.reflect.Type type78 = null;
        springMvcApiReader77.addTypeToSkippedTypes(type78);
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader77.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader77.typesToSkip;
        springMvcApiReader57.setTypesToSkip(typeSet81);
        springMvcApiReader2.typesToSkip = typeSet81;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = null;
        springMvcApiReader2.LOG = logAdapter84;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNull(logAdapter45);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(logAdapter62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNull(logAdapter86);
    }

    @Test
    public void test08423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08423");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader11.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader11.parseOperationPath("", strMap18);
        io.swagger.annotations.Api api21 = null;
        boolean boolean22 = springMvcApiReader11.canReadApi(false, api21);
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader11.parseOperationPath("hi!", strMap24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader43.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader43.parseOperationPath("", strMap50);
        io.swagger.annotations.Api api53 = null;
        boolean boolean54 = springMvcApiReader43.canReadApi(false, api53);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        java.lang.String str57 = springMvcApiReader43.parseOperationPath("hi!", strMap56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.Class<?> wildcardClass61 = springMvcApiReader60.getClass();
        springMvcApiReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        springMvcApiReader28.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        springMvcApiReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader11.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet65;
        io.swagger.models.Operation operation67 = null;
        io.swagger.annotations.ApiOperation apiOperation68 = null;
        springMvcApiReader2.updateTagsForOperation(operation67, apiOperation68);
        io.swagger.annotations.ApiOperation apiOperation70 = null;
        io.swagger.models.Operation operation71 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation70, operation71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(logAdapter16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "/hi!" + "'", str25, "/hi!");
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeSet65);
    }

    @Test
    public void test08424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08424");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        springMvcApiReader2.LOG = logAdapter16;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.ApiOperation apiOperation19 = null;
        io.swagger.models.Operation operation20 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation19, operation20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(swagger15);
    }

    @Test
    public void test08425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08425");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader17.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader17.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet23;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet30 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet30, typeArray29);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet30);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        springMvcApiReader28.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type type44 = null;
        springMvcApiReader43.addTypeToSkippedTypes(type44);
        java.util.Set<java.lang.reflect.Type> typeSet46 = springMvcApiReader43.typesToSkip;
        springMvcApiReader28.setTypesToSkip(typeSet46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader28.typesToSkip;
        io.swagger.models.Swagger swagger49 = null;
        springMvcApiReader28.swagger = swagger49;
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader28.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet51;
        io.swagger.models.Operation operation53 = null;
        io.swagger.annotations.ApiOperation apiOperation54 = null;
        springMvcApiReader2.updateTagsForOperation(operation53, apiOperation54);
        io.swagger.models.Swagger swagger56 = null;
        springMvcApiReader2.swagger = swagger56;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = springMvcApiReader2.LOG;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass59 = logAdapter58.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNull(logAdapter58);
    }

    @Test
    public void test08426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08426");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet12 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet12, typeArray11);
        springMvcApiReader10.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet12);
        io.swagger.annotations.Api api16 = null;
        boolean boolean17 = springMvcApiReader10.canReadApi(false, api16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type[] typeArray21 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet22 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet22, typeArray21);
        springMvcApiReader20.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet22);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = springMvcApiReader20.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader20.parseOperationPath("", strMap27);
        io.swagger.annotations.Api api30 = null;
        boolean boolean31 = springMvcApiReader20.canReadApi(false, api30);
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        java.lang.String str34 = springMvcApiReader20.parseOperationPath("hi!", strMap33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.Class<?> wildcardClass38 = springMvcApiReader37.getClass();
        springMvcApiReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader42.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader42.parseOperationPath("", strMap49);
        io.swagger.annotations.Api api52 = null;
        boolean boolean53 = springMvcApiReader42.canReadApi(false, api52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader42.parseOperationPath("hi!", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        springMvcApiReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader42.parseOperationPath("/hi!", strMap63);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray65 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap66 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray65);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader20.parseResponseHeaders(responseHeaderArray65);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap68 = springMvcApiReader10.parseResponseHeaders(responseHeaderArray65);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap69 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray65);
        java.lang.reflect.Method method70 = null;
        io.swagger.models.Operation operation71 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method70, operation71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(swagger7);
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(logAdapter25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "/hi!" + "'", str34, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strMap69);
    }

    @Test
    public void test08427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08427");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.annotations.Api api33 = null;
        boolean boolean34 = springMvcApiReader2.canReadApi(false, api33);
        io.swagger.models.Swagger swagger35 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader2.parseOperationPath("", strMap38);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(swagger35);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test08428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08428");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader35.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader35.parseOperationPath("", strMap42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList45 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList45, typeArray44);
        springMvcApiReader35.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList45);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList45);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = springMvcApiReader2.LOG;
        java.lang.Class<?> wildcardClass51 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(swagger49);
        org.junit.Assert.assertNull(logAdapter50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test08429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08429");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader15.getTypesToSkip();
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = springMvcApiReader44.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader44.parseOperationPath("", strMap51);
        io.swagger.annotations.Api api54 = null;
        boolean boolean55 = springMvcApiReader44.canReadApi(false, api54);
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader44.parseOperationPath("hi!", strMap57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.Class<?> wildcardClass62 = springMvcApiReader61.getClass();
        springMvcApiReader44.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        springMvcApiReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        springMvcApiReader15.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        java.lang.reflect.Method method67 = null;
        io.swagger.models.Operation operation68 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method67, operation68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(logAdapter49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "/hi!" + "'", str58, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test08430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08430");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        springMvcApiReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        springMvcApiReader57.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader57.typesToSkip;
        springMvcApiReader57.updateExtensionChain();
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader66 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger64, logAdapter65);
        java.lang.Class<?> wildcardClass67 = springMvcApiReader66.getClass();
        springMvcApiReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNull(logAdapter70);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNull(logAdapter72);
        org.junit.Assert.assertNotNull(typeSet73);
    }

    @Test
    public void test08431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08431");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        boolean boolean19 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader11.swagger = swagger20;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader2.swagger = swagger27;
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation33 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "/hi!", operation33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet29);
    }

    @Test
    public void test08432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08432");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader31.swagger = swagger40;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray42 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader31.parseResponseHeaders(responseHeaderArray42);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray42);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader47.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap54 = null;
        java.lang.String str55 = springMvcApiReader47.parseOperationPath("", strMap54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList57 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList57, typeArray56);
        springMvcApiReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        java.lang.String[] strArray60 = new java.lang.String[] {};
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap65 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray66 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList67 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList67, securityRequirementArray66);
        io.swagger.models.Operation operation69 = null;
        springMvcApiReader47.updateOperation(strArray60, strArray64, strMap65, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList67, operation69);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader47.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet71;
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(logAdapter52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(securityRequirementArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeSet71);
    }

    @Test
    public void test08433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08433");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type type27 = null;
        springMvcApiReader26.addTypeToSkippedTypes(type27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader26.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader26.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        java.lang.Class<?> wildcardClass47 = typeSet42.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNull(logAdapter52);
    }

    @Test
    public void test08434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08434");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        io.swagger.models.Swagger swagger37 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        springMvcApiReader40.addTypeToSkippedTypes(type41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader40.typesToSkip;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader46.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader46.parseOperationPath("", strMap53);
        io.swagger.annotations.Api api56 = null;
        boolean boolean57 = springMvcApiReader46.canReadApi(false, api56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        java.lang.String str60 = springMvcApiReader46.parseOperationPath("hi!", strMap59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.Class<?> wildcardClass64 = springMvcApiReader63.getClass();
        springMvcApiReader46.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader46.parseOperationPath("/hi!", strMap67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray69);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray69);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray69);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api75 = null;
        boolean boolean76 = springMvcApiReader2.canReadApi(false, api75);
        io.swagger.annotations.ApiOperation apiOperation77 = null;
        io.swagger.models.Operation operation78 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation77, operation78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(swagger37);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "/hi!" + "'", str60, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "/hi!" + "'", str68, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test08435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08435");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        boolean boolean19 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader11.swagger = swagger20;
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        springMvcApiReader29.addTypeToSkippedTypes(type30);
        io.swagger.models.Swagger swagger32 = springMvcApiReader29.swagger;
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type type36 = null;
        springMvcApiReader35.addTypeToSkippedTypes(type36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader35.typesToSkip;
        springMvcApiReader29.setTypesToSkip(typeSet38);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader29.LOG;
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader43.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader43.parseOperationPath("", strMap50);
        io.swagger.annotations.Api api53 = null;
        boolean boolean54 = springMvcApiReader43.canReadApi(false, api53);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        java.lang.String str57 = springMvcApiReader43.parseOperationPath("hi!", strMap56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.Class<?> wildcardClass61 = springMvcApiReader60.getClass();
        springMvcApiReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        springMvcApiReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        springMvcApiReader2.LOG = logAdapter65;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        springMvcApiReader2.LOG = logAdapter67;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test08436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08436");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger15 = null;
        springMvcApiReader2.swagger = swagger15;
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.lang.annotation.Annotation[] annotationArray24 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList25 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList25, annotationArray24);
        boolean boolean27 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList25);
        io.swagger.models.Swagger swagger28 = null;
        springMvcApiReader19.swagger = swagger28;
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        java.lang.annotation.Annotation[] annotationArray37 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList38 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList38, annotationArray37);
        boolean boolean40 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList38);
        io.swagger.models.Swagger swagger41 = null;
        springMvcApiReader32.swagger = swagger41;
        java.lang.annotation.Annotation[] annotationArray43 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList44 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList44, annotationArray43);
        boolean boolean46 = springMvcApiReader32.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList44);
        boolean boolean47 = springMvcApiReader19.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList44);
        springMvcApiReader19.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader19.parseOperationPath("", strMap50);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet56 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet56, typeArray55);
        springMvcApiReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        boolean boolean62 = springMvcApiReader54.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        io.swagger.models.Swagger swagger63 = null;
        springMvcApiReader54.swagger = swagger63;
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet69 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet69, typeArray68);
        springMvcApiReader67.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet69);
        java.lang.annotation.Annotation[] annotationArray72 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList73 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList73, annotationArray72);
        boolean boolean75 = springMvcApiReader67.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList73);
        io.swagger.models.Swagger swagger76 = null;
        springMvcApiReader67.swagger = swagger76;
        java.lang.annotation.Annotation[] annotationArray78 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList79 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList79, annotationArray78);
        boolean boolean81 = springMvcApiReader67.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        boolean boolean82 = springMvcApiReader54.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList79);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = springMvcApiReader54.LOG;
        io.swagger.models.Swagger swagger84 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader86 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger84, logAdapter85);
        java.util.Map<java.lang.String, java.lang.String> strMap88 = null;
        java.lang.String str89 = springMvcApiReader86.parseOperationPath("/hi!", strMap88);
        java.util.Set<java.lang.reflect.Type> typeSet90 = springMvcApiReader86.getTypesToSkip();
        springMvcApiReader54.setTypesToSkip(typeSet90);
        springMvcApiReader19.setTypesToSkip(typeSet90);
        springMvcApiReader2.setTypesToSkip(typeSet90);
        io.swagger.annotations.Api api95 = null;
        boolean boolean96 = springMvcApiReader2.canReadApi(true, api95);
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNull(logAdapter14);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(annotationArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(annotationArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(annotationArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(annotationArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(annotationArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(logAdapter83);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "/hi!" + "'", str89, "/hi!");
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test08437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08437");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = springMvcApiReader27.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader27.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet29;
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader2.canReadApi(true, api32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger35 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        io.swagger.annotations.Api api48 = null;
        boolean boolean49 = springMvcApiReader38.canReadApi(false, api48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader38.parseOperationPath("hi!", strMap51);
        io.swagger.models.Operation operation53 = null;
        io.swagger.annotations.ApiOperation apiOperation54 = null;
        springMvcApiReader38.updateTagsForOperation(operation53, apiOperation54);
        springMvcApiReader38.updateExtensionChain();
        io.swagger.annotations.Api api58 = null;
        boolean boolean59 = springMvcApiReader38.canReadApi(true, api58);
        io.swagger.models.Swagger swagger60 = springMvcApiReader38.swagger;
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = springMvcApiReader63.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap70 = null;
        java.lang.String str71 = springMvcApiReader63.parseOperationPath("", strMap70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader74 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger72, logAdapter73);
        java.lang.Class<?> wildcardClass75 = springMvcApiReader74.getClass();
        java.lang.reflect.Type[] typeArray76 = new java.lang.reflect.Type[] { wildcardClass75 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet77 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet77, typeArray76);
        springMvcApiReader63.typesToSkip = typeSet77;
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader63.getTypesToSkip();
        io.swagger.models.Swagger swagger81 = null;
        springMvcApiReader63.swagger = swagger81;
        io.swagger.models.Swagger swagger83 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader85 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger83, logAdapter84);
        java.lang.reflect.Type[] typeArray86 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet87 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet87, typeArray86);
        springMvcApiReader85.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet87);
        java.util.Set<java.lang.reflect.Type> typeSet90 = springMvcApiReader85.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader85.getTypesToSkip();
        springMvcApiReader63.setTypesToSkip(typeSet91);
        java.lang.Class<?> wildcardClass93 = typeSet91.getClass();
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass93);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass93);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource96 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger97 = springMvcApiReader2.read(springResource96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNull(logAdapter28);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNull(swagger35);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(swagger60);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(logAdapter68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test08438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08438");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        java.lang.String str9 = springMvcApiReader2.parseOperationPath("", strMap8);
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] { wildcardClass30 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader18.typesToSkip = typeSet32;
        io.swagger.models.Swagger swagger35 = null;
        springMvcApiReader18.swagger = swagger35;
        java.util.Set<java.lang.reflect.Type> typeSet37 = springMvcApiReader18.getTypesToSkip();
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = springMvcApiReader40.LOG;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader48.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader48.parseOperationPath("", strMap55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader59 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger57, logAdapter58);
        java.lang.Class<?> wildcardClass60 = springMvcApiReader59.getClass();
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] { wildcardClass60 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet62 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet62, typeArray61);
        springMvcApiReader48.typesToSkip = typeSet62;
        io.swagger.models.Swagger swagger65 = null;
        springMvcApiReader48.swagger = swagger65;
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        springMvcApiReader72.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet74);
        java.lang.annotation.Annotation[] annotationArray77 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList78 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList78, annotationArray77);
        boolean boolean80 = springMvcApiReader72.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList78);
        boolean boolean81 = springMvcApiReader69.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList78);
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader84 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger82, logAdapter83);
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet86 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet86, typeArray85);
        springMvcApiReader84.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet86);
        java.lang.annotation.Annotation[] annotationArray89 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList90 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList90, annotationArray89);
        boolean boolean92 = springMvcApiReader84.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean93 = springMvcApiReader69.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean94 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean95 = springMvcApiReader40.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean96 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        boolean boolean97 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList90);
        java.lang.Class<?> wildcardClass98 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(logAdapter45);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(annotationArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(annotationArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test08439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08439");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader24.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        io.swagger.models.Swagger swagger37 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type type41 = null;
        springMvcApiReader40.addTypeToSkippedTypes(type41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader40.typesToSkip;
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader46.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader46.parseOperationPath("", strMap53);
        io.swagger.annotations.Api api56 = null;
        boolean boolean57 = springMvcApiReader46.canReadApi(false, api56);
        java.util.Map<java.lang.String, java.lang.String> strMap59 = null;
        java.lang.String str60 = springMvcApiReader46.parseOperationPath("hi!", strMap59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.Class<?> wildcardClass64 = springMvcApiReader63.getClass();
        springMvcApiReader46.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader46.parseOperationPath("/hi!", strMap67);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray69 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader46.parseResponseHeaders(responseHeaderArray69);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap71 = springMvcApiReader40.parseResponseHeaders(responseHeaderArray69);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray69);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation78 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "hi!", operation78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(swagger37);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "/hi!" + "'", str60, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "/hi!" + "'", str68, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet75);
    }

    @Test
    public void test08440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08440");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader36 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger34, logAdapter35);
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet38 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet38, typeArray37);
        springMvcApiReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet38);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = springMvcApiReader36.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        java.lang.String str44 = springMvcApiReader36.parseOperationPath("", strMap43);
        io.swagger.annotations.Api api46 = null;
        boolean boolean47 = springMvcApiReader36.canReadApi(false, api46);
        java.util.Map<java.lang.String, java.lang.String> strMap49 = null;
        java.lang.String str50 = springMvcApiReader36.parseOperationPath("hi!", strMap49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.Class<?> wildcardClass54 = springMvcApiReader53.getClass();
        springMvcApiReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        io.swagger.models.Swagger swagger56 = null;
        springMvcApiReader36.swagger = swagger56;
        io.swagger.models.Swagger swagger58 = springMvcApiReader36.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader36.typesToSkip;
        springMvcApiReader36.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader36.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader36.parseOperationPath("hi!", strMap63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet69 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet69, typeArray68);
        springMvcApiReader67.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet69);
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader67.typesToSkip;
        java.lang.Class<?> wildcardClass73 = springMvcApiReader67.getClass();
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader76 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger74, logAdapter75);
        java.lang.reflect.Type[] typeArray77 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet78 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet78, typeArray77);
        springMvcApiReader76.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet78);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = springMvcApiReader76.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap83 = null;
        java.lang.String str84 = springMvcApiReader76.parseOperationPath("", strMap83);
        io.swagger.models.Swagger swagger85 = springMvcApiReader76.swagger;
        io.swagger.annotations.Api api87 = null;
        boolean boolean88 = springMvcApiReader76.canReadApi(false, api87);
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader76.typesToSkip;
        java.lang.annotation.Annotation[] annotationArray90 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList91 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList91, annotationArray90);
        boolean boolean93 = springMvcApiReader76.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList91);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList94 = springMvcApiReader36.getParameters((java.lang.reflect.Type) wildcardClass73, (java.util.List<java.lang.annotation.Annotation>) annotationList91);
        java.lang.Class<?> wildcardClass95 = parameterList94.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass95);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter98 = null;
        springMvcApiReader2.LOG = logAdapter98;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter33);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(logAdapter41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "/hi!" + "'", str50, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNull(swagger58);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "/hi!" + "'", str64, "/hi!");
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(logAdapter81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNull(swagger85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(annotationArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(parameterList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test08441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08441");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter6 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader7 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger5, logAdapter6);
        java.lang.reflect.Type[] typeArray8 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet9 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet9, typeArray8);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet9);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader14 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger12, logAdapter13);
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader14.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        springMvcApiReader7.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet16);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = springMvcApiReader22.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap29 = null;
        java.lang.String str30 = springMvcApiReader22.parseOperationPath("", strMap29);
        io.swagger.annotations.Api api32 = null;
        boolean boolean33 = springMvcApiReader22.canReadApi(false, api32);
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader22.parseOperationPath("hi!", strMap35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.Class<?> wildcardClass40 = springMvcApiReader39.getClass();
        springMvcApiReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        springMvcApiReader7.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader7.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api47 = null;
        boolean boolean48 = springMvcApiReader2.canReadApi(false, api47);
        io.swagger.models.Swagger swagger49 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger50 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet56 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet56, typeArray55);
        springMvcApiReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader54.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        java.lang.String str62 = springMvcApiReader54.parseOperationPath("", strMap61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.Class<?> wildcardClass66 = springMvcApiReader65.getClass();
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] { wildcardClass66 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        springMvcApiReader54.typesToSkip = typeSet68;
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader54.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = null;
        java.lang.String str74 = springMvcApiReader54.parseOperationPath("/hi!", strMap73);
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader54.getTypesToSkip();
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        springMvcApiReader78.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        java.lang.annotation.Annotation[] annotationArray83 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList84 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList84, annotationArray83);
        boolean boolean86 = springMvcApiReader78.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList84);
        io.swagger.models.Swagger swagger87 = null;
        springMvcApiReader78.swagger = swagger87;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray89 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap90 = springMvcApiReader78.parseResponseHeaders(responseHeaderArray89);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap91 = springMvcApiReader54.parseResponseHeaders(responseHeaderArray89);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap92 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray89);
        io.swagger.models.Swagger swagger93 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet94 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation95 = null;
        io.swagger.annotations.ApiResponses apiResponses96 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation95, apiResponses96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(logAdapter27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "/hi!" + "'", str36, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(swagger49);
        org.junit.Assert.assertNull(swagger50);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "/hi!" + "'", str74, "/hi!");
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(annotationArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNull(strMap92);
        org.junit.Assert.assertNull(swagger93);
        org.junit.Assert.assertNotNull(typeSet94);
    }

    @Test
    public void test08442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08442");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader2.parseOperationPath("/hi!", strMap16);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger19 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        springMvcApiReader2.LOG = logAdapter20;
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("", strMap23);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "/hi!" + "'", str17, "/hi!");
        org.junit.Assert.assertNull(logAdapter18);
        org.junit.Assert.assertNull(swagger19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(typeSet25);
    }

    @Test
    public void test08443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08443");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet24 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet24, typeArray23);
        springMvcApiReader22.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet24);
        java.lang.annotation.Annotation[] annotationArray27 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList28 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList28, annotationArray27);
        boolean boolean30 = springMvcApiReader22.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        boolean boolean31 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        java.util.Set<java.lang.reflect.Type> typeSet39 = springMvcApiReader34.typesToSkip;
        io.swagger.models.Swagger swagger40 = springMvcApiReader34.swagger;
        io.swagger.models.Operation operation41 = null;
        io.swagger.annotations.ApiOperation apiOperation42 = null;
        springMvcApiReader34.updateTagsForOperation(operation41, apiOperation42);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader34.getTypesToSkip();
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet49 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet49, typeArray48);
        springMvcApiReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet49);
        java.lang.annotation.Annotation[] annotationArray52 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList53 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList53, annotationArray52);
        boolean boolean55 = springMvcApiReader47.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList53);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        io.swagger.annotations.Api api68 = null;
        boolean boolean69 = springMvcApiReader58.canReadApi(false, api68);
        java.util.Map<java.lang.String, java.lang.String> strMap71 = null;
        java.lang.String str72 = springMvcApiReader58.parseOperationPath("hi!", strMap71);
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader75 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger73, logAdapter74);
        java.lang.Class<?> wildcardClass76 = springMvcApiReader75.getClass();
        springMvcApiReader58.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader58.parseOperationPath("/hi!", strMap79);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray81 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap82 = springMvcApiReader58.parseResponseHeaders(responseHeaderArray81);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap83 = springMvcApiReader47.parseResponseHeaders(responseHeaderArray81);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap84 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray81);
        java.lang.Class<?> wildcardClass85 = responseHeaderArray81.getClass();
        io.swagger.models.Swagger swagger86 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter87 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader88 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger86, logAdapter87);
        java.lang.reflect.Type[] typeArray89 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet90 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet90, typeArray89);
        springMvcApiReader88.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet90);
        java.lang.annotation.Annotation[] annotationArray93 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList94 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean95 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList94, annotationArray93);
        boolean boolean96 = springMvcApiReader88.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList94);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList97 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass85, (java.util.List<java.lang.annotation.Annotation>) annotationList94);
        java.util.Set<java.lang.reflect.Type> typeSet98 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(annotationArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNull(swagger40);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(annotationArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "/hi!" + "'", str72, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "/hi!" + "'", str80, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(annotationArray93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(parameterList97);
        org.junit.Assert.assertNotNull(typeSet98);
    }

    @Test
    public void test08444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08444");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        java.lang.annotation.Annotation[] annotationArray16 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList17 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList17, annotationArray16);
        boolean boolean19 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList17);
        io.swagger.models.Swagger swagger20 = null;
        springMvcApiReader11.swagger = swagger20;
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        java.lang.annotation.Annotation[] annotationArray29 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList30 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList30, annotationArray29);
        boolean boolean32 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList30);
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader24.swagger = swagger33;
        java.lang.annotation.Annotation[] annotationArray35 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList36 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList36, annotationArray35);
        boolean boolean38 = springMvcApiReader24.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        boolean boolean39 = springMvcApiReader11.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = springMvcApiReader11.LOG;
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader43.parseOperationPath("/hi!", strMap45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader43.getTypesToSkip();
        springMvcApiReader11.setTypesToSkip(typeSet47);
        springMvcApiReader2.typesToSkip = typeSet47;
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader2.updateTagsForOperation(operation50, apiOperation51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader63 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger61, logAdapter62);
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet65 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet65, typeArray64);
        springMvcApiReader63.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet65);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.reflect.Type type72 = null;
        springMvcApiReader71.addTypeToSkippedTypes(type72);
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader71.typesToSkip;
        springMvcApiReader56.setTypesToSkip(typeSet74);
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        springMvcApiReader78.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        java.lang.annotation.Annotation[] annotationArray83 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList84 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList84, annotationArray83);
        boolean boolean86 = springMvcApiReader78.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList84);
        io.swagger.models.Swagger swagger87 = null;
        springMvcApiReader78.swagger = swagger87;
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader78.getTypesToSkip();
        springMvcApiReader56.setTypesToSkip(typeSet89);
        springMvcApiReader2.typesToSkip = typeSet89;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter92 = null;
        springMvcApiReader2.LOG = logAdapter92;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap94 = null;
        io.swagger.annotations.Api api95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap96 = springMvcApiReader2.updateTagsForApi(strMap94, api95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(annotationArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(annotationArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(annotationArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(logAdapter40);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(annotationArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(typeSet89);
    }

    @Test
    public void test08445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08445");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader2.updateTagsForOperation(operation24, apiOperation25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        java.lang.annotation.Annotation[] annotationArray34 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList35 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList35, annotationArray34);
        boolean boolean37 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList35);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader29.typesToSkip;
        springMvcApiReader29.updateExtensionChain();
        io.swagger.models.Operation operation40 = null;
        io.swagger.annotations.ApiOperation apiOperation41 = null;
        springMvcApiReader29.updateTagsForOperation(operation40, apiOperation41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        boolean boolean53 = springMvcApiReader45.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList51);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader56 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger54, logAdapter55);
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet58 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet58, typeArray57);
        springMvcApiReader56.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet58);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = springMvcApiReader56.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap63 = null;
        java.lang.String str64 = springMvcApiReader56.parseOperationPath("", strMap63);
        io.swagger.annotations.Api api66 = null;
        boolean boolean67 = springMvcApiReader56.canReadApi(false, api66);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader56.parseOperationPath("hi!", strMap69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.Class<?> wildcardClass74 = springMvcApiReader73.getClass();
        springMvcApiReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = null;
        java.lang.String str78 = springMvcApiReader56.parseOperationPath("/hi!", strMap77);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray79 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap80 = springMvcApiReader56.parseResponseHeaders(responseHeaderArray79);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap81 = springMvcApiReader45.parseResponseHeaders(responseHeaderArray79);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap82 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray79);
        io.swagger.annotations.Api api84 = null;
        boolean boolean85 = springMvcApiReader29.canReadApi(false, api84);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter86 = null;
        springMvcApiReader29.LOG = logAdapter86;
        java.util.Set<java.lang.reflect.Type> typeSet88 = springMvcApiReader29.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet88;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(annotationArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(logAdapter61);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "/hi!" + "'", str78, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(typeSet88);
    }

    @Test
    public void test08446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08446");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        springMvcApiReader2.updateExtensionChain();
        java.lang.String[] strArray19 = new java.lang.String[] { "/hi!" };
        java.lang.String[] strArray20 = new java.lang.String[] {};
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap21 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray22 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList23 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList23, securityRequirementArray22);
        io.swagger.models.Operation operation25 = null;
        springMvcApiReader2.updateOperation(strArray19, strArray20, strMap21, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList23, operation25);
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiResponses apiResponses30 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation29, apiResponses30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(securityRequirementArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(typeSet28);
    }

    @Test
    public void test08447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08447");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = null;
        springMvcApiReader2.typesToSkip = typeSet7;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        java.lang.annotation.Annotation[] annotationArray17 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList18 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList18, annotationArray17);
        boolean boolean20 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList18);
        io.swagger.models.Swagger swagger21 = null;
        springMvcApiReader12.swagger = swagger21;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader12.LOG = logAdapter23;
        springMvcApiReader12.updateExtensionChain();
        io.swagger.models.Operation operation26 = null;
        io.swagger.annotations.ApiOperation apiOperation27 = null;
        springMvcApiReader12.updateTagsForOperation(operation26, apiOperation27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        java.lang.annotation.Annotation[] annotationArray36 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList37 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList37, annotationArray36);
        boolean boolean39 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList37);
        io.swagger.models.Swagger swagger40 = null;
        springMvcApiReader31.swagger = swagger40;
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader44 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger42, logAdapter43);
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet46 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet46, typeArray45);
        springMvcApiReader44.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet46);
        java.lang.annotation.Annotation[] annotationArray49 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList50 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList50, annotationArray49);
        boolean boolean52 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList50);
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader44.swagger = swagger53;
        java.lang.annotation.Annotation[] annotationArray55 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList56 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList56, annotationArray55);
        boolean boolean58 = springMvcApiReader44.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean59 = springMvcApiReader31.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean60 = springMvcApiReader12.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        boolean boolean61 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        springMvcApiReader2.LOG = logAdapter62;
        io.swagger.models.Swagger swagger64 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        springMvcApiReader2.LOG = logAdapter66;
        io.swagger.annotations.Api api69 = null;
        boolean boolean70 = springMvcApiReader2.canReadApi(true, api69);
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNull(typeSet9);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(annotationArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(annotationArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(annotationArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(swagger64);
        org.junit.Assert.assertNull(typeSet65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(typeSet71);
    }

    @Test
    public void test08448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08448");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        java.lang.String str5 = springMvcApiReader2.parseOperationPath("/hi!", strMap4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = springMvcApiReader9.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        java.lang.String str17 = springMvcApiReader9.parseOperationPath("", strMap16);
        io.swagger.annotations.Api api19 = null;
        boolean boolean20 = springMvcApiReader9.canReadApi(false, api19);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        java.lang.String str23 = springMvcApiReader9.parseOperationPath("hi!", strMap22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.Class<?> wildcardClass27 = springMvcApiReader26.getClass();
        springMvcApiReader9.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader9.parseOperationPath("/hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        springMvcApiReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        java.lang.annotation.Annotation[] annotationArray47 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList48 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList48, annotationArray47);
        boolean boolean50 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList48);
        io.swagger.models.Swagger swagger51 = null;
        springMvcApiReader42.swagger = swagger51;
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet57 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet57, typeArray56);
        springMvcApiReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet57);
        java.lang.annotation.Annotation[] annotationArray60 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList61 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList61, annotationArray60);
        boolean boolean63 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList61);
        io.swagger.models.Swagger swagger64 = null;
        springMvcApiReader55.swagger = swagger64;
        java.lang.annotation.Annotation[] annotationArray66 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList67 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList67, annotationArray66);
        boolean boolean69 = springMvcApiReader55.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        boolean boolean70 = springMvcApiReader42.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        boolean boolean71 = springMvcApiReader9.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList67);
        java.util.Set<java.lang.reflect.Type> typeSet72 = springMvcApiReader9.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet72;
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader2.parseOperationPath("", strMap75);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        springMvcApiReader2.LOG = logAdapter77;
        java.util.Map<java.lang.String, java.lang.String> strMap80 = null;
        java.lang.String str81 = springMvcApiReader2.parseOperationPath("", strMap80);
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader2.getTypesToSkip();
        io.swagger.annotations.Api api84 = null;
        boolean boolean85 = springMvcApiReader2.canReadApi(true, api84);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource86 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger87 = springMvcApiReader2.read(springResource86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "/hi!" + "'", str5, "/hi!");
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(logAdapter14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "/hi!" + "'", str23, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(annotationArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(annotationArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test08449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08449");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.Class<?> wildcardClass12 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        springMvcApiReader2.LOG = logAdapter14;
        io.swagger.models.Swagger swagger16 = null;
        springMvcApiReader2.swagger = swagger16;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        springMvcApiReader2.LOG = logAdapter18;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNull(logAdapter20);
    }

    @Test
    public void test08450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08450");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type type27 = null;
        springMvcApiReader26.addTypeToSkippedTypes(type27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader26.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader26.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type[] typeArray34 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet35 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet35, typeArray34);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet35);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader40 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger38, logAdapter39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet42 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet42, typeArray41);
        springMvcApiReader40.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet42);
        java.lang.Class<?> wildcardClass47 = typeSet42.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource50 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger51 = springMvcApiReader2.read(springResource50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test08451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08451");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("", strMap12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.typesToSkip;
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        io.swagger.annotations.Api api48 = null;
        boolean boolean49 = springMvcApiReader38.canReadApi(false, api48);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader38.parseOperationPath("hi!", strMap51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader55 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger53, logAdapter54);
        java.lang.Class<?> wildcardClass56 = springMvcApiReader55.getClass();
        springMvcApiReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        springMvcApiReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader23.LOG;
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader62.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader62.parseOperationPath("", strMap69);
        java.lang.reflect.Type[] typeArray71 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList72 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList72, typeArray71);
        springMvcApiReader62.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        springMvcApiReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        springMvcApiReader16.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        springMvcApiReader2.LOG = logAdapter78;
        java.util.Set<java.lang.reflect.Type> typeSet80 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList82 = springMvcApiReader2.getSecurityRequirements(api81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "/hi!" + "'", str52, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(logAdapter67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(typeSet80);
    }

    @Test
    public void test08452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08452");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        springMvcApiReader2.LOG = logAdapter11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray26 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap27 = springMvcApiReader15.parseResponseHeaders(responseHeaderArray26);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader30 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger28, logAdapter29);
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet32 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet32, typeArray31);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet32);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        springMvcApiReader30.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = springMvcApiReader45.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader45.parseOperationPath("", strMap52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader45.canReadApi(false, api55);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader45.parseOperationPath("hi!", strMap58);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.Class<?> wildcardClass63 = springMvcApiReader62.getClass();
        springMvcApiReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        springMvcApiReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = springMvcApiReader30.LOG;
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader69 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger67, logAdapter68);
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet71 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet71, typeArray70);
        springMvcApiReader69.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet71);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = springMvcApiReader69.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        java.lang.String str77 = springMvcApiReader69.parseOperationPath("", strMap76);
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList79 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList79, typeArray78);
        springMvcApiReader69.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        springMvcApiReader30.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        springMvcApiReader15.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        java.lang.Class<?> wildcardClass84 = typeList79.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        io.swagger.models.Swagger swagger86 = null;
        springMvcApiReader2.swagger = swagger86;
        java.util.Set<java.lang.reflect.Type> typeSet88 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api90 = null;
        boolean boolean91 = springMvcApiReader2.canReadApi(true, api90);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(responseHeaderArray26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(logAdapter50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNull(logAdapter66);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(logAdapter74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test08453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08453");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet43 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet43, typeArray42);
        springMvcApiReader41.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader41.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader41.parseOperationPath("", strMap48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        springMvcApiReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger55 = springMvcApiReader2.swagger;
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader2.updateTagsForOperation(operation56, apiOperation57);
        io.swagger.annotations.Api api60 = null;
        boolean boolean61 = springMvcApiReader2.canReadApi(false, api60);
        io.swagger.models.Swagger swagger62 = null;
        springMvcApiReader2.swagger = swagger62;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNull(logAdapter38);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(swagger55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test08454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08454");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader11.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader11.parseOperationPath("", strMap18);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.Class<?> wildcardClass23 = springMvcApiReader22.getClass();
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] { wildcardClass23 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader11.typesToSkip = typeSet25;
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader11.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader11.parseOperationPath("/hi!", strMap30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = null;
        springMvcApiReader11.typesToSkip = typeSet32;
        java.lang.Class<?> wildcardClass34 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass34);
        io.swagger.models.Swagger swagger36 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        springMvcApiReader2.LOG = logAdapter37;
        java.lang.Class<?> wildcardClass39 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(swagger7);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(logAdapter16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNull(swagger36);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test08455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08455");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader58.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet63;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap67 = null;
        java.lang.String str68 = springMvcApiReader2.parseOperationPath("/hi!", strMap67);
        io.swagger.models.Swagger swagger69 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList71 = springMvcApiReader2.getSecurityRequirements(api70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNull(logAdapter65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "/hi!" + "'", str68, "/hi!");
        org.junit.Assert.assertNull(swagger69);
    }

    @Test
    public void test08456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08456");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader42 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger40, logAdapter41);
        java.lang.reflect.Type type43 = null;
        springMvcApiReader42.addTypeToSkippedTypes(type43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader42.typesToSkip;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = springMvcApiReader48.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader48.parseOperationPath("", strMap55);
        io.swagger.annotations.Api api58 = null;
        boolean boolean59 = springMvcApiReader48.canReadApi(false, api58);
        java.util.Map<java.lang.String, java.lang.String> strMap61 = null;
        java.lang.String str62 = springMvcApiReader48.parseOperationPath("hi!", strMap61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.Class<?> wildcardClass66 = springMvcApiReader65.getClass();
        springMvcApiReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader48.parseOperationPath("/hi!", strMap69);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray71 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap72 = springMvcApiReader48.parseResponseHeaders(responseHeaderArray71);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap73 = springMvcApiReader42.parseResponseHeaders(responseHeaderArray71);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap74 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray71);
        io.swagger.models.Operation operation75 = null;
        io.swagger.annotations.ApiOperation apiOperation76 = null;
        springMvcApiReader2.updateTagsForOperation(operation75, apiOperation76);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        springMvcApiReader2.LOG = logAdapter78;
        io.swagger.models.Operation operation80 = null;
        io.swagger.annotations.ApiOperation apiOperation81 = null;
        springMvcApiReader2.updateTagsForOperation(operation80, apiOperation81);
        java.util.Set<java.lang.reflect.Type> typeSet83 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.Api api84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList85 = springMvcApiReader2.getSecurityRequirements(api84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(logAdapter53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "/hi!" + "'", str62, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "/hi!" + "'", str70, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(typeSet83);
    }

    @Test
    public void test08457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08457");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader2.LOG = logAdapter25;
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader29.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader29.parseOperationPath("", strMap36);
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader29.canReadApi(false, api39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader29.parseOperationPath("hi!", strMap42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.Class<?> wildcardClass47 = springMvcApiReader46.getClass();
        springMvcApiReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        io.swagger.models.Swagger swagger49 = null;
        springMvcApiReader29.swagger = swagger49;
        io.swagger.models.Swagger swagger51 = springMvcApiReader29.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader29.typesToSkip;
        io.swagger.annotations.Api api54 = null;
        boolean boolean55 = springMvcApiReader29.canReadApi(false, api54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        boolean boolean66 = springMvcApiReader58.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean67 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean68 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger70 = null;
        springMvcApiReader2.swagger = swagger70;
        io.swagger.models.Operation operation72 = null;
        io.swagger.annotations.ApiOperation apiOperation73 = null;
        springMvcApiReader2.updateTagsForOperation(operation72, apiOperation73);
        io.swagger.annotations.Api api76 = null;
        boolean boolean77 = springMvcApiReader2.canReadApi(true, api76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader2.parseOperationPath("hi!", strMap79);
        java.lang.reflect.Type type81 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type81);
        io.swagger.models.Operation operation85 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "hi!", operation85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNull(swagger51);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "/hi!" + "'", str80, "/hi!");
    }

    @Test
    public void test08458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08458");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader5 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger3, logAdapter4);
        java.lang.reflect.Type[] typeArray6 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet7 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet7, typeArray6);
        springMvcApiReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet7);
        java.lang.annotation.Annotation[] annotationArray10 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList11 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList11, annotationArray10);
        boolean boolean13 = springMvcApiReader5.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        boolean boolean14 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.lang.annotation.Annotation[] annotationArray22 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList23 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList23, annotationArray22);
        boolean boolean25 = springMvcApiReader17.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        boolean boolean26 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = null;
        springMvcApiReader2.typesToSkip = typeSet27;
        io.swagger.models.Swagger swagger29 = null;
        springMvcApiReader2.swagger = swagger29;
        io.swagger.models.Operation operation31 = null;
        io.swagger.annotations.ApiOperation apiOperation32 = null;
        springMvcApiReader2.updateTagsForOperation(operation31, apiOperation32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet39 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet39, typeArray38);
        springMvcApiReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet39);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader37.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader37.parseOperationPath("", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass49 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader37.typesToSkip = typeSet51;
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader37.getTypesToSkip();
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.reflect.Type type58 = null;
        springMvcApiReader57.addTypeToSkippedTypes(type58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader57.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader57.typesToSkip;
        springMvcApiReader37.setTypesToSkip(typeSet61);
        springMvcApiReader2.setTypesToSkip(typeSet61);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet65 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(annotationArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(annotationArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(typeSet34);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNull(logAdapter64);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(typeSet66);
    }

    @Test
    public void test08459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08459");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.Class<?> wildcardClass24 = springMvcApiReader23.getClass();
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] { wildcardClass24 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader12.typesToSkip = typeSet26;
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader12.getTypesToSkip();
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = springMvcApiReader32.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader32.parseOperationPath("", strMap39);
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList42 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList42, typeArray41);
        springMvcApiReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList42);
        java.lang.String[] strArray45 = new java.lang.String[] {};
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap50 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray51 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList52 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList52, securityRequirementArray51);
        io.swagger.models.Operation operation54 = null;
        springMvcApiReader32.updateOperation(strArray45, strArray49, strMap50, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList52, operation54);
        springMvcApiReader32.updateExtensionChain();
        java.lang.Class<?> wildcardClass57 = springMvcApiReader32.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        io.swagger.models.Swagger swagger60 = null;
        springMvcApiReader2.swagger = swagger60;
        java.util.Set<java.lang.reflect.Type> typeSet62 = null;
        springMvcApiReader2.typesToSkip = typeSet62;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger6);
        org.junit.Assert.assertNull(logAdapter8);
        org.junit.Assert.assertNotNull(typeSet9);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(logAdapter37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(securityRequirementArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test08460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08460");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList34 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList34, typeArray33);
        springMvcApiReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList34);
        java.lang.String[] strArray37 = new java.lang.String[] {};
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap42 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray43 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList44 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList44, securityRequirementArray43);
        io.swagger.models.Operation operation46 = null;
        springMvcApiReader24.updateOperation(strArray37, strArray41, strMap42, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList44, operation46);
        java.lang.String[] strArray54 = new java.lang.String[] { "/hi!", "", "/hi!", "hi!", "hi!", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = springMvcApiReader58.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap65 = null;
        java.lang.String str66 = springMvcApiReader58.parseOperationPath("", strMap65);
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        springMvcApiReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.String[] strArray71 = new java.lang.String[] {};
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap76 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray77 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList78 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList78, securityRequirementArray77);
        io.swagger.models.Operation operation80 = null;
        springMvcApiReader58.updateOperation(strArray71, strArray75, strMap76, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation80);
        io.swagger.models.Operation operation82 = null;
        springMvcApiReader2.updateOperation(strArray37, strArray54, strMap55, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList78, operation82);
        io.swagger.models.Swagger swagger84 = null;
        springMvcApiReader2.swagger = swagger84;
        io.swagger.models.Operation operation86 = null;
        io.swagger.annotations.ApiOperation apiOperation87 = null;
        springMvcApiReader2.updateTagsForOperation(operation86, apiOperation87);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter89 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger90 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet91 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet92 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource93 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger94 = springMvcApiReader2.read(springResource93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(securityRequirementArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(logAdapter63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(securityRequirementArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(logAdapter89);
        org.junit.Assert.assertNull(swagger90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(typeSet92);
    }

    @Test
    public void test08461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08461");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader24.canReadApi(false, api34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader24.parseOperationPath("hi!", strMap37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.Class<?> wildcardClass42 = springMvcApiReader41.getClass();
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader24.parseOperationPath("/hi!", strMap45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray47);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray47);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet51 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader2.parseOperationPath("", strMap53);
        io.swagger.models.Operation operation55 = null;
        io.swagger.annotations.ApiOperation apiOperation56 = null;
        springMvcApiReader2.updateTagsForOperation(operation55, apiOperation56);
        io.swagger.annotations.Api api59 = null;
        boolean boolean60 = springMvcApiReader2.canReadApi(true, api59);
        io.swagger.annotations.Api api62 = null;
        boolean boolean63 = springMvcApiReader2.canReadApi(false, api62);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test08462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08462");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader28 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger26, logAdapter27);
        java.lang.Class<?> wildcardClass29 = springMvcApiReader28.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass29 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader17.typesToSkip = typeSet31;
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader17.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet34);
        io.swagger.models.Operation operation36 = null;
        io.swagger.annotations.ApiOperation apiOperation37 = null;
        springMvcApiReader2.updateTagsForOperation(operation36, apiOperation37);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource40 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger41 = springMvcApiReader2.read(springResource40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNull(logAdapter39);
    }

    @Test
    public void test08463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08463");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader2.parseOperationPath("hi!", strMap39);
        io.swagger.models.Swagger swagger41 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger43 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        springMvcApiReader2.LOG = logAdapter45;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger48 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList50 = springMvcApiReader2.getSecurityRequirements(api49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNull(swagger41);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertNull(swagger43);
        org.junit.Assert.assertNull(logAdapter44);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertNull(swagger48);
    }

    @Test
    public void test08464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08464");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = springMvcApiReader2.swagger;
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = springMvcApiReader2.LOG;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap15 = null;
        io.swagger.annotations.Api api16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap17 = springMvcApiReader2.updateTagsForApi(strMap15, api16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger6);
        org.junit.Assert.assertNull(logAdapter8);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
    }

    @Test
    public void test08465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08465");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = springMvcApiReader2.LOG;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter32);
        org.junit.Assert.assertNull(logAdapter33);
    }

    @Test
    public void test08466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08466");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader2.typesToSkip;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray21 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap22 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = springMvcApiReader25.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap32 = null;
        java.lang.String str33 = springMvcApiReader25.parseOperationPath("", strMap32);
        io.swagger.annotations.Api api35 = null;
        boolean boolean36 = springMvcApiReader25.canReadApi(false, api35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type type40 = null;
        springMvcApiReader39.addTypeToSkippedTypes(type40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader39.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader39.typesToSkip;
        springMvcApiReader25.setTypesToSkip(typeSet43);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        springMvcApiReader25.LOG = logAdapter45;
        java.util.Set<java.lang.reflect.Type> typeSet47 = springMvcApiReader25.typesToSkip;
        java.lang.Class<?> wildcardClass48 = springMvcApiReader25.getClass();
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.reflect.Type type52 = null;
        springMvcApiReader51.addTypeToSkippedTypes(type52);
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader51.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader51.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap57 = null;
        java.lang.String str58 = springMvcApiReader51.parseOperationPath("", strMap57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader61 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger59, logAdapter60);
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet63 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet63, typeArray62);
        springMvcApiReader61.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet63);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = springMvcApiReader61.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader61.parseOperationPath("", strMap68);
        io.swagger.annotations.Api api71 = null;
        boolean boolean72 = springMvcApiReader61.canReadApi(false, api71);
        java.util.Map<java.lang.String, java.lang.String> strMap74 = null;
        java.lang.String str75 = springMvcApiReader61.parseOperationPath("hi!", strMap74);
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.Class<?> wildcardClass79 = springMvcApiReader78.getClass();
        springMvcApiReader61.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        io.swagger.models.Swagger swagger81 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter82 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader83 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger81, logAdapter82);
        java.lang.reflect.Type[] typeArray84 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet85 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet85, typeArray84);
        springMvcApiReader83.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet85);
        java.lang.annotation.Annotation[] annotationArray88 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList89 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList89, annotationArray88);
        boolean boolean91 = springMvcApiReader83.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList89);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList92 = springMvcApiReader51.getParameters((java.lang.reflect.Type) wildcardClass79, (java.util.List<java.lang.annotation.Annotation>) annotationList89);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList93 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass48, (java.util.List<java.lang.annotation.Annotation>) annotationList89);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray94 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap95 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray94);
        io.swagger.models.Operation operation96 = null;
        io.swagger.annotations.ApiOperation apiOperation97 = null;
        springMvcApiReader2.updateTagsForOperation(operation96, apiOperation97);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(logAdapter30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(logAdapter66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "/hi!" + "'", str75, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(annotationArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(parameterList92);
        org.junit.Assert.assertNotNull(parameterList93);
        org.junit.Assert.assertNull(strMap95);
    }

    @Test
    public void test08467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08467");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        io.swagger.models.Swagger swagger5 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader8 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger6, logAdapter7);
        java.lang.reflect.Type type9 = null;
        springMvcApiReader8.addTypeToSkippedTypes(type9);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader8.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet11);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type type32 = null;
        springMvcApiReader31.addTypeToSkippedTypes(type32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = springMvcApiReader31.typesToSkip;
        springMvcApiReader16.setTypesToSkip(typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader16.typesToSkip;
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader39.typesToSkip;
        io.swagger.models.Swagger swagger45 = springMvcApiReader39.swagger;
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        springMvcApiReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.annotation.Annotation[] annotationArray53 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList54 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList54, annotationArray53);
        boolean boolean56 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList54);
        io.swagger.models.Swagger swagger57 = null;
        springMvcApiReader48.swagger = swagger57;
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        boolean boolean62 = springMvcApiReader48.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean63 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean64 = springMvcApiReader16.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean65 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        io.swagger.models.Operation operation66 = null;
        io.swagger.annotations.ApiOperation apiOperation67 = null;
        springMvcApiReader2.updateTagsForOperation(operation66, apiOperation67);
        io.swagger.annotations.Api api70 = null;
        boolean boolean71 = springMvcApiReader2.canReadApi(false, api70);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource72 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger73 = springMvcApiReader2.read(springResource72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(swagger5);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNull(logAdapter13);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNull(swagger45);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(annotationArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test08468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08468");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        springMvcApiReader2.LOG = logAdapter26;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        springMvcApiReader2.LOG = logAdapter28;
        io.swagger.models.Operation operation32 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("/hi!", "hi!", operation32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
    }

    @Test
    public void test08469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08469");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = springMvcApiReader2.swagger;
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(false, api8);
        io.swagger.models.Operation operation10 = null;
        io.swagger.annotations.ApiOperation apiOperation11 = null;
        springMvcApiReader2.updateTagsForOperation(operation10, apiOperation11);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type type17 = null;
        springMvcApiReader16.addTypeToSkippedTypes(type17);
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader16.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader16.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = null;
        java.lang.String str23 = springMvcApiReader16.parseOperationPath("", strMap22);
        io.swagger.models.Operation operation24 = null;
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        springMvcApiReader16.updateTagsForOperation(operation24, apiOperation25);
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader16.canReadApi(false, api28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = springMvcApiReader32.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader32.parseOperationPath("", strMap39);
        io.swagger.annotations.Api api42 = null;
        boolean boolean43 = springMvcApiReader32.canReadApi(false, api42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader32.parseOperationPath("hi!", strMap45);
        java.util.Map<java.lang.String, java.lang.String> strMap48 = null;
        java.lang.String str49 = springMvcApiReader32.parseOperationPath("hi!", strMap48);
        io.swagger.models.Operation operation50 = null;
        io.swagger.annotations.ApiOperation apiOperation51 = null;
        springMvcApiReader32.updateTagsForOperation(operation50, apiOperation51);
        java.lang.Class<?> wildcardClass53 = springMvcApiReader32.getClass();
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        java.util.Set<java.lang.reflect.Type> typeSet55 = springMvcApiReader16.getTypesToSkip();
        io.swagger.models.Operation operation56 = null;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        springMvcApiReader16.updateTagsForOperation(operation56, apiOperation57);
        springMvcApiReader16.updateExtensionChain();
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet64 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet64, typeArray63);
        springMvcApiReader62.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = springMvcApiReader62.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap69 = null;
        java.lang.String str70 = springMvcApiReader62.parseOperationPath("", strMap69);
        io.swagger.annotations.Api api72 = null;
        boolean boolean73 = springMvcApiReader62.canReadApi(false, api72);
        java.util.Map<java.lang.String, java.lang.String> strMap75 = null;
        java.lang.String str76 = springMvcApiReader62.parseOperationPath("hi!", strMap75);
        io.swagger.models.Swagger swagger77 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter78 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader79 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger77, logAdapter78);
        java.lang.Class<?> wildcardClass80 = springMvcApiReader79.getClass();
        springMvcApiReader62.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        io.swagger.models.Swagger swagger82 = null;
        springMvcApiReader62.swagger = swagger82;
        io.swagger.models.Swagger swagger84 = springMvcApiReader62.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        springMvcApiReader62.LOG = logAdapter85;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter87 = null;
        springMvcApiReader62.LOG = logAdapter87;
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader62.getTypesToSkip();
        springMvcApiReader16.typesToSkip = typeSet89;
        springMvcApiReader2.typesToSkip = typeSet89;
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNull(swagger6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(logAdapter37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "/hi!" + "'", str49, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(logAdapter67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "/hi!" + "'", str76, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNull(swagger84);
        org.junit.Assert.assertNotNull(typeSet89);
    }

    @Test
    public void test08470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08470");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        springMvcApiReader2.LOG = logAdapter16;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet20 = springMvcApiReader2.extractTags(api19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(swagger15);
    }

    @Test
    public void test08471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08471");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Operation operation17 = null;
        io.swagger.annotations.ApiOperation apiOperation18 = null;
        springMvcApiReader2.updateTagsForOperation(operation17, apiOperation18);
        io.swagger.models.Operation operation20 = null;
        io.swagger.annotations.ApiOperation apiOperation21 = null;
        springMvcApiReader2.updateTagsForOperation(operation20, apiOperation21);
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        boolean boolean34 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader26.typesToSkip;
        springMvcApiReader26.updateExtensionChain();
        io.swagger.models.Operation operation37 = null;
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        springMvcApiReader26.updateTagsForOperation(operation37, apiOperation38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader26.canReadApi(true, api41);
        io.swagger.models.Swagger swagger43 = springMvcApiReader26.swagger;
        io.swagger.models.Operation operation44 = null;
        io.swagger.annotations.ApiOperation apiOperation45 = null;
        springMvcApiReader26.updateTagsForOperation(operation44, apiOperation45);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = springMvcApiReader26.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet48 = springMvcApiReader26.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet48;
        io.swagger.models.Swagger swagger50 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader53 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger51, logAdapter52);
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet55 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet55, typeArray54);
        springMvcApiReader53.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet55);
        java.lang.annotation.Annotation[] annotationArray58 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList59 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList59, annotationArray58);
        boolean boolean61 = springMvcApiReader53.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList59);
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader53.typesToSkip;
        springMvcApiReader53.updateExtensionChain();
        io.swagger.models.Operation operation64 = null;
        io.swagger.annotations.ApiOperation apiOperation65 = null;
        springMvcApiReader53.updateTagsForOperation(operation64, apiOperation65);
        io.swagger.annotations.Api api68 = null;
        boolean boolean69 = springMvcApiReader53.canReadApi(true, api68);
        io.swagger.models.Operation operation70 = null;
        io.swagger.annotations.ApiOperation apiOperation71 = null;
        springMvcApiReader53.updateTagsForOperation(operation70, apiOperation71);
        java.util.Set<java.lang.reflect.Type> typeSet73 = springMvcApiReader53.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet73);
        java.lang.reflect.Method method75 = null;
        io.swagger.models.Operation operation76 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method75, operation76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(swagger43);
        org.junit.Assert.assertNull(logAdapter47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNull(swagger50);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(annotationArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(typeSet73);
    }

    @Test
    public void test08472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08472");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.getTypesToSkip();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        springMvcApiReader29.addTypeToSkippedTypes(type30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader29.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader29.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        java.lang.String str36 = springMvcApiReader29.parseOperationPath("", strMap35);
        io.swagger.models.Operation operation37 = null;
        io.swagger.annotations.ApiOperation apiOperation38 = null;
        springMvcApiReader29.updateTagsForOperation(operation37, apiOperation38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader29.canReadApi(false, api41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = springMvcApiReader29.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet43;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = springMvcApiReader2.LOG;
        io.swagger.annotations.Api api46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList47 = springMvcApiReader2.getSecurityRequirements(api46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNull(logAdapter45);
    }

    @Test
    public void test08473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08473");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader19.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader58.typesToSkip;
        springMvcApiReader2.typesToSkip = typeSet63;
        io.swagger.models.Swagger swagger65 = null;
        springMvcApiReader2.swagger = swagger65;
        java.util.Map<java.lang.String, java.lang.String> strMap68 = null;
        java.lang.String str69 = springMvcApiReader2.parseOperationPath("hi!", strMap68);
        springMvcApiReader2.updateExtensionChain();
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger72 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap73 = null;
        io.swagger.annotations.Api api74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap75 = springMvcApiReader2.updateTagsForApi(strMap73, api74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "/hi!" + "'", str69, "/hi!");
        org.junit.Assert.assertNull(swagger72);
    }

    @Test
    public void test08474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08474");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.Class<?> wildcardClass12 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.Class<?> wildcardClass17 = springMvcApiReader16.getClass();
        java.lang.annotation.Annotation[] annotationArray18 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList19 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList19, annotationArray18);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList21 = springMvcApiReader2.getParameters((java.lang.reflect.Type) wildcardClass17, (java.util.List<java.lang.annotation.Annotation>) annotationList19);
        io.swagger.models.Operation operation22 = null;
        io.swagger.annotations.ApiOperation apiOperation23 = null;
        springMvcApiReader2.updateTagsForOperation(operation22, apiOperation23);
        io.swagger.annotations.ApiOperation apiOperation25 = null;
        io.swagger.models.Operation operation26 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation25, operation26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(annotationArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(parameterList21);
    }

    @Test
    public void test08475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08475");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.lang.annotation.Annotation[] annotationArray26 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList27 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList27, annotationArray26);
        boolean boolean29 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        boolean boolean30 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        springMvcApiReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.annotation.Annotation[] annotationArray40 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList41 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList41, annotationArray40);
        boolean boolean43 = springMvcApiReader35.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList41);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader35.parseOperationPath("hi!", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = springMvcApiReader49.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        java.lang.String str57 = springMvcApiReader49.parseOperationPath("", strMap56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.Class<?> wildcardClass61 = springMvcApiReader60.getClass();
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] { wildcardClass61 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet63 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet63, typeArray62);
        springMvcApiReader49.typesToSkip = typeSet63;
        java.util.Set<java.lang.reflect.Type> typeSet66 = springMvcApiReader49.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet67 = springMvcApiReader49.typesToSkip;
        springMvcApiReader35.setTypesToSkip(typeSet67);
        springMvcApiReader2.typesToSkip = typeSet67;
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader72 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger70, logAdapter71);
        java.lang.reflect.Type type73 = null;
        springMvcApiReader72.addTypeToSkippedTypes(type73);
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader72.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader72.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = null;
        java.lang.String str79 = springMvcApiReader72.parseOperationPath("", strMap78);
        io.swagger.models.Operation operation80 = null;
        io.swagger.annotations.ApiOperation apiOperation81 = null;
        springMvcApiReader72.updateTagsForOperation(operation80, apiOperation81);
        io.swagger.annotations.Api api84 = null;
        boolean boolean85 = springMvcApiReader72.canReadApi(false, api84);
        java.util.Set<java.lang.reflect.Type> typeSet86 = springMvcApiReader72.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet86);
        java.util.Set<java.lang.reflect.Type> typeSet88 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet89 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.annotations.Api api91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList92 = springMvcApiReader2.getSecurityRequirements(api91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(annotationArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(annotationArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(logAdapter54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(typeSet89);
    }

    @Test
    public void test08476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08476");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger30 = null;
        springMvcApiReader2.swagger = swagger30;
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader2.LOG;
        java.lang.reflect.Method method37 = null;
        io.swagger.models.Operation operation38 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method37, operation38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(logAdapter35);
        org.junit.Assert.assertNull(logAdapter36);
    }

    @Test
    public void test08477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08477");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet8 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader11 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger9, logAdapter10);
        java.lang.reflect.Type[] typeArray12 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet13 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet13, typeArray12);
        springMvcApiReader11.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet13);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = springMvcApiReader11.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        java.lang.String str19 = springMvcApiReader11.parseOperationPath("", strMap18);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.Class<?> wildcardClass23 = springMvcApiReader22.getClass();
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] { wildcardClass23 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader11.typesToSkip = typeSet25;
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader11.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader11.parseOperationPath("/hi!", strMap30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = null;
        springMvcApiReader11.typesToSkip = typeSet32;
        java.lang.Class<?> wildcardClass34 = springMvcApiReader11.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader2.parseOperationPath("/hi!", strMap37);
        io.swagger.models.Operation operation39 = null;
        io.swagger.annotations.ApiOperation apiOperation40 = null;
        springMvcApiReader2.updateTagsForOperation(operation39, apiOperation40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(swagger7);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(typeArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(logAdapter16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(typeSet42);
    }

    @Test
    public void test08478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08478");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.util.Set<java.lang.reflect.Type> typeSet7 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger8 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet9 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        java.lang.String str12 = springMvcApiReader2.parseOperationPath("", strMap11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader15 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger13, logAdapter14);
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet17 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet17, typeArray16);
        springMvcApiReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet17);
        java.lang.annotation.Annotation[] annotationArray20 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList21 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList21, annotationArray20);
        boolean boolean23 = springMvcApiReader15.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList21);
        io.swagger.models.Swagger swagger24 = null;
        springMvcApiReader15.swagger = swagger24;
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader15.parseOperationPath("hi!", strMap27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        springMvcApiReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        springMvcApiReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = springMvcApiReader46.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap53 = null;
        java.lang.String str54 = springMvcApiReader46.parseOperationPath("", strMap53);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader57 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger55, logAdapter56);
        java.lang.Class<?> wildcardClass58 = springMvcApiReader57.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass58 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader46.typesToSkip = typeSet60;
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader46.getTypesToSkip();
        springMvcApiReader31.setTypesToSkip(typeSet63);
        springMvcApiReader15.typesToSkip = typeSet63;
        io.swagger.models.Swagger swagger66 = null;
        springMvcApiReader15.swagger = swagger66;
        springMvcApiReader15.updateExtensionChain();
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader71 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger69, logAdapter70);
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet73 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet73, typeArray72);
        springMvcApiReader71.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet73);
        java.lang.annotation.Annotation[] annotationArray76 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList77 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList77, annotationArray76);
        boolean boolean79 = springMvcApiReader71.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList77);
        io.swagger.models.Swagger swagger80 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter81 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader82 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger80, logAdapter81);
        java.lang.Class<?> wildcardClass83 = springMvcApiReader82.getClass();
        springMvcApiReader71.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass83);
        springMvcApiReader15.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass83);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass83);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNull(swagger8);
        org.junit.Assert.assertNotNull(typeSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(annotationArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "/hi!" + "'", str28, "/hi!");
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(logAdapter51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(annotationArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test08479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08479");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        java.lang.String str28 = springMvcApiReader2.parseOperationPath("", strMap27);
        io.swagger.models.Operation operation29 = null;
        io.swagger.annotations.ApiOperation apiOperation30 = null;
        springMvcApiReader2.updateTagsForOperation(operation29, apiOperation30);
        io.swagger.models.Swagger swagger32 = springMvcApiReader2.swagger;
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        java.lang.String str35 = springMvcApiReader2.parseOperationPath("/hi!", strMap34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader2.parseOperationPath("", strMap37);
        io.swagger.annotations.Api api40 = null;
        boolean boolean41 = springMvcApiReader2.canReadApi(true, api40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger43 = null;
        springMvcApiReader2.swagger = swagger43;
        io.swagger.annotations.Api api45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList46 = springMvcApiReader2.getSecurityRequirements(api45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(swagger32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "/hi!" + "'", str35, "/hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(typeSet42);
    }

    @Test
    public void test08480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08480");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader24 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger22, logAdapter23);
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet26 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet26, typeArray25);
        springMvcApiReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet26);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = springMvcApiReader24.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader24.parseOperationPath("", strMap31);
        io.swagger.annotations.Api api34 = null;
        boolean boolean35 = springMvcApiReader24.canReadApi(false, api34);
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        java.lang.String str38 = springMvcApiReader24.parseOperationPath("hi!", strMap37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader41 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger39, logAdapter40);
        java.lang.Class<?> wildcardClass42 = springMvcApiReader41.getClass();
        springMvcApiReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader24.parseOperationPath("/hi!", strMap45);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray47 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap48 = springMvcApiReader24.parseResponseHeaders(responseHeaderArray47);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap49 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray47);
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        java.lang.String str52 = springMvcApiReader2.parseOperationPath("", strMap51);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        springMvcApiReader2.LOG = logAdapter53;
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap55 = null;
        io.swagger.annotations.Api api56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap57 = springMvcApiReader2.updateTagsForApi(strMap55, api56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(logAdapter29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "/hi!" + "'", str38, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
    }

    @Test
    public void test08481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08481");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        java.lang.annotation.Annotation[] annotationArray23 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList24 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList24, annotationArray23);
        boolean boolean26 = springMvcApiReader18.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList24);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader29.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader29.parseOperationPath("", strMap36);
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader29.canReadApi(false, api39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader29.parseOperationPath("hi!", strMap42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.Class<?> wildcardClass47 = springMvcApiReader46.getClass();
        springMvcApiReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader29.parseOperationPath("/hi!", strMap50);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray52 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap53 = springMvcApiReader29.parseResponseHeaders(responseHeaderArray52);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap54 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray52);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap55 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray52);
        io.swagger.annotations.Api api57 = null;
        boolean boolean58 = springMvcApiReader2.canReadApi(false, api57);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet60 = springMvcApiReader2.getTypesToSkip();
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap61 = null;
        io.swagger.annotations.Api api62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, io.swagger.models.Tag> strMap63 = springMvcApiReader2.updateTagsForApi(strMap61, api62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(annotationArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "/hi!" + "'", str51, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(logAdapter59);
        org.junit.Assert.assertNotNull(typeSet60);
    }

    @Test
    public void test08482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08482");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        springMvcApiReader2.LOG = logAdapter25;
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet31 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet31, typeArray30);
        springMvcApiReader29.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet31);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = springMvcApiReader29.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap36 = null;
        java.lang.String str37 = springMvcApiReader29.parseOperationPath("", strMap36);
        io.swagger.annotations.Api api39 = null;
        boolean boolean40 = springMvcApiReader29.canReadApi(false, api39);
        java.util.Map<java.lang.String, java.lang.String> strMap42 = null;
        java.lang.String str43 = springMvcApiReader29.parseOperationPath("hi!", strMap42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader46 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger44, logAdapter45);
        java.lang.Class<?> wildcardClass47 = springMvcApiReader46.getClass();
        springMvcApiReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        io.swagger.models.Swagger swagger49 = null;
        springMvcApiReader29.swagger = swagger49;
        io.swagger.models.Swagger swagger51 = springMvcApiReader29.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader29.typesToSkip;
        io.swagger.annotations.Api api54 = null;
        boolean boolean55 = springMvcApiReader29.canReadApi(false, api54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        boolean boolean66 = springMvcApiReader58.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean67 = springMvcApiReader29.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        boolean boolean68 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        java.util.Set<java.lang.reflect.Type> typeSet69 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger70 = null;
        springMvcApiReader2.swagger = swagger70;
        io.swagger.models.Operation operation72 = null;
        io.swagger.annotations.ApiOperation apiOperation73 = null;
        springMvcApiReader2.updateTagsForOperation(operation72, apiOperation73);
        io.swagger.annotations.Api api76 = null;
        boolean boolean77 = springMvcApiReader2.canReadApi(true, api76);
        java.util.Map<java.lang.String, java.lang.String> strMap79 = null;
        java.lang.String str80 = springMvcApiReader2.parseOperationPath("hi!", strMap79);
        io.swagger.models.Operation operation83 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "hi!", operation83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(logAdapter34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "/hi!" + "'", str43, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNull(swagger51);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "/hi!" + "'", str80, "/hi!");
    }

    @Test
    public void test08483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08483");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        java.lang.reflect.Type[] typeArray15 = new java.lang.reflect.Type[] { wildcardClass14 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet16 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet16, typeArray15);
        springMvcApiReader2.typesToSkip = typeSet16;
        java.util.Set<java.lang.reflect.Type> typeSet19 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        springMvcApiReader2.LOG = logAdapter20;
        io.swagger.models.Operation operation22 = null;
        io.swagger.annotations.ApiOperation apiOperation23 = null;
        springMvcApiReader2.updateTagsForOperation(operation22, apiOperation23);
        io.swagger.annotations.Api api26 = null;
        boolean boolean27 = springMvcApiReader2.canReadApi(true, api26);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test08484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08484");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger6 = null;
        springMvcApiReader2.swagger = swagger6;
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader10 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger8, logAdapter9);
        java.lang.reflect.Type type11 = null;
        springMvcApiReader10.addTypeToSkippedTypes(type11);
        java.util.Set<java.lang.reflect.Type> typeSet13 = springMvcApiReader10.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet14 = springMvcApiReader10.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet15 = null;
        springMvcApiReader10.typesToSkip = typeSet15;
        java.util.Set<java.lang.reflect.Type> typeSet17 = springMvcApiReader10.getTypesToSkip();
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader20 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger18, logAdapter19);
        java.lang.reflect.Type type21 = null;
        springMvcApiReader20.addTypeToSkippedTypes(type21);
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader20.typesToSkip;
        springMvcApiReader10.typesToSkip = typeSet23;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader10.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.reflect.Type type30 = null;
        springMvcApiReader29.addTypeToSkippedTypes(type30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = springMvcApiReader29.typesToSkip;
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader29.swagger = swagger33;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        springMvcApiReader37.addTypeToSkippedTypes(type38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader37.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader37.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet42 = null;
        springMvcApiReader37.typesToSkip = typeSet42;
        java.util.Set<java.lang.reflect.Type> typeSet44 = springMvcApiReader37.getTypesToSkip();
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader47 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger45, logAdapter46);
        java.lang.reflect.Type type48 = null;
        springMvcApiReader47.addTypeToSkippedTypes(type48);
        java.util.Set<java.lang.reflect.Type> typeSet50 = springMvcApiReader47.typesToSkip;
        springMvcApiReader37.typesToSkip = typeSet50;
        java.util.Set<java.lang.reflect.Type> typeSet52 = springMvcApiReader37.typesToSkip;
        springMvcApiReader29.setTypesToSkip(typeSet52);
        springMvcApiReader2.setTypesToSkip(typeSet52);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader65 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger63, logAdapter64);
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet67 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet67, typeArray66);
        springMvcApiReader65.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet67);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet67);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        java.lang.reflect.Type type74 = null;
        springMvcApiReader73.addTypeToSkippedTypes(type74);
        java.util.Set<java.lang.reflect.Type> typeSet76 = springMvcApiReader73.typesToSkip;
        springMvcApiReader58.setTypesToSkip(typeSet76);
        java.util.Set<java.lang.reflect.Type> typeSet78 = springMvcApiReader58.typesToSkip;
        io.swagger.models.Swagger swagger79 = null;
        springMvcApiReader58.swagger = swagger79;
        java.util.Set<java.lang.reflect.Type> typeSet81 = springMvcApiReader58.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet82 = springMvcApiReader58.getTypesToSkip();
        java.lang.Class<?> wildcardClass83 = typeSet82.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass83);
        io.swagger.models.Operation operation85 = null;
        io.swagger.annotations.ApiOperation apiOperation86 = null;
        springMvcApiReader2.updateTagsForOperation(operation85, apiOperation86);
        io.swagger.annotations.Api api89 = null;
        boolean boolean90 = springMvcApiReader2.canReadApi(false, api89);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNull(typeSet17);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNull(typeSet44);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test08485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08485");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Map<java.lang.String, java.lang.String> strMap12 = null;
        java.lang.String str13 = springMvcApiReader2.parseOperationPath("hi!", strMap12);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader23 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger21, logAdapter22);
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet25 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet25, typeArray24);
        springMvcApiReader23.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet25);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader31 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger29, logAdapter30);
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet33 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet33, typeArray32);
        springMvcApiReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet33);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = springMvcApiReader31.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap38 = null;
        java.lang.String str39 = springMvcApiReader31.parseOperationPath("", strMap38);
        io.swagger.annotations.Api api41 = null;
        boolean boolean42 = springMvcApiReader31.canReadApi(false, api41);
        java.util.Map<java.lang.String, java.lang.String> strMap44 = null;
        java.lang.String str45 = springMvcApiReader31.parseOperationPath("hi!", strMap44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader48 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger46, logAdapter47);
        java.lang.Class<?> wildcardClass49 = springMvcApiReader48.getClass();
        springMvcApiReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        springMvcApiReader16.updateExtensionChain();
        io.swagger.models.Swagger swagger53 = null;
        springMvcApiReader16.swagger = swagger53;
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        java.lang.String str57 = springMvcApiReader16.parseOperationPath("hi!", strMap56);
        java.util.Set<java.lang.reflect.Type> typeSet58 = springMvcApiReader16.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet59 = springMvcApiReader16.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet59);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        springMvcApiReader2.LOG = logAdapter61;
        io.swagger.models.Operation operation63 = null;
        io.swagger.annotations.ApiOperation apiOperation64 = null;
        springMvcApiReader2.updateTagsForOperation(operation63, apiOperation64);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = springMvcApiReader2.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet67 = null;
        springMvcApiReader2.setTypesToSkip(typeSet67);
        java.lang.reflect.Method method69 = null;
        io.swagger.models.Operation operation70 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.readImplicitParameters(method69, operation70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "/hi!" + "'", str13, "/hi!");
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(logAdapter36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "/hi!" + "'", str45, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNull(logAdapter66);
    }

    @Test
    public void test08486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08486");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader2.typesToSkip;
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("", strMap26);
        io.swagger.models.Operation operation28 = null;
        io.swagger.annotations.ApiResponses apiResponses29 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateApiResponse(operation28, apiResponses29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test08487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08487");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(true, api17);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader22 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger20, logAdapter21);
        java.lang.reflect.Type type23 = null;
        springMvcApiReader22.addTypeToSkippedTypes(type23);
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader22.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet26 = springMvcApiReader22.getTypesToSkip();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        java.lang.String str29 = springMvcApiReader22.parseOperationPath("", strMap28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader32 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger30, logAdapter31);
        java.lang.reflect.Type[] typeArray33 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet34 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet34, typeArray33);
        springMvcApiReader32.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet34);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = springMvcApiReader32.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader32.parseOperationPath("", strMap39);
        io.swagger.annotations.Api api42 = null;
        boolean boolean43 = springMvcApiReader32.canReadApi(false, api42);
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader32.parseOperationPath("hi!", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.Class<?> wildcardClass50 = springMvcApiReader49.getClass();
        springMvcApiReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader54 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger52, logAdapter53);
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet56 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet56, typeArray55);
        springMvcApiReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet56);
        java.lang.annotation.Annotation[] annotationArray59 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList60 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList60, annotationArray59);
        boolean boolean62 = springMvcApiReader54.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        java.util.List<io.swagger.models.parameters.Parameter> parameterList63 = springMvcApiReader22.getParameters((java.lang.reflect.Type) wildcardClass50, (java.util.List<java.lang.annotation.Annotation>) annotationList60);
        boolean boolean64 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList60);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = springMvcApiReader67.LOG;
        io.swagger.models.Swagger swagger69 = null;
        springMvcApiReader67.swagger = swagger69;
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader73 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger71, logAdapter72);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = springMvcApiReader73.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet75 = springMvcApiReader73.typesToSkip;
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader78 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger76, logAdapter77);
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        springMvcApiReader78.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = springMvcApiReader78.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap85 = null;
        java.lang.String str86 = springMvcApiReader78.parseOperationPath("", strMap85);
        java.lang.reflect.Type[] typeArray87 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList88 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList88, typeArray87);
        springMvcApiReader78.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        springMvcApiReader73.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        springMvcApiReader67.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        io.swagger.annotations.Api api95 = null;
        boolean boolean96 = springMvcApiReader2.canReadApi(false, api95);
        com.github.kongchen.swagger.docgen.spring.SpringResource springResource97 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.models.Swagger swagger98 = springMvcApiReader2.read(springResource97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(logAdapter19);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(typeArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(logAdapter37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "/hi!" + "'", str46, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(annotationArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(parameterList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(logAdapter68);
        org.junit.Assert.assertNull(logAdapter74);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(logAdapter83);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test08488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08488");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = springMvcApiReader17.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        java.lang.String str25 = springMvcApiReader17.parseOperationPath("", strMap24);
        io.swagger.annotations.Api api27 = null;
        boolean boolean28 = springMvcApiReader17.canReadApi(false, api27);
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader17.parseOperationPath("hi!", strMap30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.Class<?> wildcardClass35 = springMvcApiReader34.getClass();
        springMvcApiReader17.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader2.parseOperationPath("hi!", strMap39);
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader45 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger43, logAdapter44);
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        springMvcApiReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = springMvcApiReader45.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = null;
        java.lang.String str53 = springMvcApiReader45.parseOperationPath("", strMap52);
        io.swagger.annotations.Api api55 = null;
        boolean boolean56 = springMvcApiReader45.canReadApi(false, api55);
        java.util.Map<java.lang.String, java.lang.String> strMap58 = null;
        java.lang.String str59 = springMvcApiReader45.parseOperationPath("hi!", strMap58);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader62 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger60, logAdapter61);
        java.lang.Class<?> wildcardClass63 = springMvcApiReader62.getClass();
        springMvcApiReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        io.swagger.models.Swagger swagger65 = null;
        springMvcApiReader45.swagger = swagger65;
        io.swagger.models.Swagger swagger67 = springMvcApiReader45.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet68 = springMvcApiReader45.typesToSkip;
        springMvcApiReader45.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet70 = springMvcApiReader45.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet71 = springMvcApiReader45.getTypesToSkip();
        io.swagger.models.Swagger swagger72 = springMvcApiReader45.swagger;
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader75 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger73, logAdapter74);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = springMvcApiReader75.LOG;
        java.util.Set<java.lang.reflect.Type> typeSet77 = springMvcApiReader75.typesToSkip;
        io.swagger.models.Swagger swagger78 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader80 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger78, logAdapter79);
        java.lang.reflect.Type[] typeArray81 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet82 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet82, typeArray81);
        springMvcApiReader80.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet82);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = springMvcApiReader80.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap87 = null;
        java.lang.String str88 = springMvcApiReader80.parseOperationPath("", strMap87);
        java.lang.reflect.Type[] typeArray89 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList90 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList90, typeArray89);
        springMvcApiReader80.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList90);
        springMvcApiReader75.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList90);
        springMvcApiReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList90);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList90);
        io.swagger.models.Operation operation98 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("hi!", "hi!", operation98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(logAdapter22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNull(logAdapter42);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(logAdapter50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "/hi!" + "'", str59, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNull(swagger67);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNull(swagger72);
        org.junit.Assert.assertNull(logAdapter76);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(logAdapter85);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test08489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08489");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        io.swagger.models.Swagger swagger22 = null;
        springMvcApiReader2.swagger = swagger22;
        io.swagger.models.Swagger swagger24 = springMvcApiReader2.swagger;
        java.util.Set<java.lang.reflect.Type> typeSet25 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet27 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet29 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation30 = null;
        io.swagger.annotations.ApiOperation apiOperation31 = null;
        springMvcApiReader2.updateTagsForOperation(operation30, apiOperation31);
        java.util.Set<java.lang.reflect.Type> typeSet33 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation34 = null;
        io.swagger.annotations.ApiOperation apiOperation35 = null;
        springMvcApiReader2.updateTagsForOperation(operation34, apiOperation35);
        io.swagger.annotations.Api api37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.models.SecurityRequirement> securityRequirementList38 = springMvcApiReader2.getSecurityRequirements(api37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNull(swagger24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(typeSet33);
    }

    @Test
    public void test08490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08490");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        springMvcApiReader2.LOG = logAdapter8;
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type type13 = null;
        springMvcApiReader12.addTypeToSkippedTypes(type13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = springMvcApiReader12.typesToSkip;
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = springMvcApiReader18.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader18.parseOperationPath("", strMap25);
        io.swagger.annotations.Api api28 = null;
        boolean boolean29 = springMvcApiReader18.canReadApi(false, api28);
        java.util.Map<java.lang.String, java.lang.String> strMap31 = null;
        java.lang.String str32 = springMvcApiReader18.parseOperationPath("hi!", strMap31);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader35 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger33, logAdapter34);
        java.lang.Class<?> wildcardClass36 = springMvcApiReader35.getClass();
        springMvcApiReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.util.Map<java.lang.String, java.lang.String> strMap39 = null;
        java.lang.String str40 = springMvcApiReader18.parseOperationPath("/hi!", strMap39);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray41 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap42 = springMvcApiReader18.parseResponseHeaders(responseHeaderArray41);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap43 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray41);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap44 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray41);
        java.util.Set<java.lang.reflect.Type> typeSet45 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet51 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet51, typeArray50);
        springMvcApiReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet51);
        java.util.Set<java.lang.reflect.Type> typeSet54 = springMvcApiReader49.typesToSkip;
        io.swagger.models.Swagger swagger55 = springMvcApiReader49.swagger;
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.lang.annotation.Annotation[] annotationArray63 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList64 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList64, annotationArray63);
        boolean boolean66 = springMvcApiReader58.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList64);
        io.swagger.models.Swagger swagger67 = null;
        springMvcApiReader58.swagger = swagger67;
        java.lang.annotation.Annotation[] annotationArray69 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList70 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList70, annotationArray69);
        boolean boolean72 = springMvcApiReader58.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList70);
        boolean boolean73 = springMvcApiReader49.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList70);
        boolean boolean74 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList70);
        java.util.Map<java.lang.String, java.lang.String> strMap76 = null;
        java.lang.String str77 = springMvcApiReader2.parseOperationPath("", strMap76);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(logAdapter23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "/hi!" + "'", str32, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "/hi!" + "'", str40, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNull(logAdapter46);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNull(swagger55);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(annotationArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(annotationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
    }

    @Test
    public void test08491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08491");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        io.swagger.annotations.Api api12 = null;
        boolean boolean13 = springMvcApiReader2.canReadApi(false, api12);
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        java.lang.String str16 = springMvcApiReader2.parseOperationPath("hi!", strMap15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.Class<?> wildcardClass20 = springMvcApiReader19.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass20);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        java.lang.String str24 = springMvcApiReader2.parseOperationPath("/hi!", strMap23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        io.swagger.models.Operation operation33 = null;
        io.swagger.annotations.ApiOperation apiOperation34 = null;
        springMvcApiReader2.updateTagsForOperation(operation33, apiOperation34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader38 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger36, logAdapter37);
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        springMvcApiReader38.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = springMvcApiReader38.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap45 = null;
        java.lang.String str46 = springMvcApiReader38.parseOperationPath("", strMap45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader49 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger47, logAdapter48);
        java.lang.Class<?> wildcardClass50 = springMvcApiReader49.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass50 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet52 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet52, typeArray51);
        springMvcApiReader38.typesToSkip = typeSet52;
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet52);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader58 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger56, logAdapter57);
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        springMvcApiReader58.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Set<java.lang.reflect.Type> typeSet63 = springMvcApiReader58.typesToSkip;
        springMvcApiReader58.updateExtensionChain();
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader67 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger65, logAdapter66);
        java.lang.Class<?> wildcardClass68 = springMvcApiReader67.getClass();
        springMvcApiReader58.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        springMvcApiReader2.updateExtensionChain();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger74 = null;
        springMvcApiReader2.swagger = swagger74;
        io.swagger.annotations.Api api77 = null;
        boolean boolean78 = springMvcApiReader2.canReadApi(true, api77);
        java.util.Set<java.lang.reflect.Type> typeSet79 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "/hi!" + "'", str16, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "/hi!" + "'", str24, "/hi!");
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(logAdapter43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNull(logAdapter72);
        org.junit.Assert.assertNull(logAdapter73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(typeSet79);
    }

    @Test
    public void test08492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08492");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type type3 = null;
        springMvcApiReader2.addTypeToSkippedTypes(type3);
        java.util.Set<java.lang.reflect.Type> typeSet5 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet6 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader16 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger14, logAdapter15);
        java.lang.reflect.Type[] typeArray17 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet18 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet18, typeArray17);
        springMvcApiReader16.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet18);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        springMvcApiReader2.LOG = logAdapter23;
        io.swagger.models.Operation operation25 = null;
        io.swagger.annotations.ApiOperation apiOperation26 = null;
        springMvcApiReader2.updateTagsForOperation(operation25, apiOperation26);
        springMvcApiReader2.updateExtensionChain();
        java.util.Map<java.lang.String, java.lang.String> strMap30 = null;
        java.lang.String str31 = springMvcApiReader2.parseOperationPath("/hi!", strMap30);
        org.junit.Assert.assertNotNull(typeSet5);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "/hi!" + "'", str31, "/hi!");
    }

    @Test
    public void test08493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08493");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(false, api8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader12 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger10, logAdapter11);
        java.lang.reflect.Type[] typeArray13 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet14 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet14, typeArray13);
        springMvcApiReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet14);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = springMvcApiReader12.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap19 = null;
        java.lang.String str20 = springMvcApiReader12.parseOperationPath("", strMap19);
        io.swagger.annotations.Api api22 = null;
        boolean boolean23 = springMvcApiReader12.canReadApi(false, api22);
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        java.lang.String str26 = springMvcApiReader12.parseOperationPath("hi!", strMap25);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader29 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger27, logAdapter28);
        java.lang.Class<?> wildcardClass30 = springMvcApiReader29.getClass();
        springMvcApiReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader34 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger32, logAdapter33);
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet36 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet36, typeArray35);
        springMvcApiReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet36);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = springMvcApiReader34.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap41 = null;
        java.lang.String str42 = springMvcApiReader34.parseOperationPath("", strMap41);
        io.swagger.annotations.Api api44 = null;
        boolean boolean45 = springMvcApiReader34.canReadApi(false, api44);
        java.util.Map<java.lang.String, java.lang.String> strMap47 = null;
        java.lang.String str48 = springMvcApiReader34.parseOperationPath("hi!", strMap47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader51 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger49, logAdapter50);
        java.lang.Class<?> wildcardClass52 = springMvcApiReader51.getClass();
        springMvcApiReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Map<java.lang.String, java.lang.String> strMap55 = null;
        java.lang.String str56 = springMvcApiReader34.parseOperationPath("/hi!", strMap55);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray57 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap58 = springMvcApiReader34.parseResponseHeaders(responseHeaderArray57);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap59 = springMvcApiReader12.parseResponseHeaders(responseHeaderArray57);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap60 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray57);
        java.util.Set<java.lang.reflect.Type> typeSet61 = springMvcApiReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet62 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Operation operation63 = null;
        io.swagger.annotations.ApiOperation apiOperation64 = null;
        springMvcApiReader2.updateTagsForOperation(operation63, apiOperation64);
        io.swagger.models.Operation operation68 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updatePath("", "/hi!", operation68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(typeArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(logAdapter17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "/hi!" + "'", str26, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(logAdapter39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "/hi!" + "'", str48, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "/hi!" + "'", str56, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(typeSet62);
    }

    @Test
    public void test08494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08494");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader13 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger11, logAdapter12);
        java.lang.Class<?> wildcardClass14 = springMvcApiReader13.getClass();
        springMvcApiReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader18 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger16, logAdapter17);
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet20 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet20, typeArray19);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader25 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger23, logAdapter24);
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet27 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet27, typeArray26);
        springMvcApiReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        springMvcApiReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet27);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader33 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger31, logAdapter32);
        java.lang.reflect.Type type34 = null;
        springMvcApiReader33.addTypeToSkippedTypes(type34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = springMvcApiReader33.typesToSkip;
        springMvcApiReader18.setTypesToSkip(typeSet36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = springMvcApiReader18.typesToSkip;
        io.swagger.models.Swagger swagger39 = null;
        springMvcApiReader18.swagger = swagger39;
        java.util.Set<java.lang.reflect.Type> typeSet41 = springMvcApiReader18.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet41;
        io.swagger.models.Operation operation43 = null;
        io.swagger.annotations.ApiOperation apiOperation44 = null;
        springMvcApiReader2.updateTagsForOperation(operation43, apiOperation44);
        springMvcApiReader2.updateExtensionChain();
        java.lang.Class<?> wildcardClass47 = springMvcApiReader2.getClass();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test08495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08495");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        io.swagger.models.Operation operation14 = null;
        io.swagger.annotations.ApiOperation apiOperation15 = null;
        springMvcApiReader2.updateTagsForOperation(operation14, apiOperation15);
        io.swagger.models.Swagger swagger17 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter18 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader19 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger17, logAdapter18);
        java.lang.reflect.Type[] typeArray20 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet21 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet21, typeArray20);
        springMvcApiReader19.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet21);
        java.util.Set<java.lang.reflect.Type> typeSet24 = springMvcApiReader19.typesToSkip;
        io.swagger.models.Swagger swagger25 = null;
        springMvcApiReader19.swagger = swagger25;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        springMvcApiReader19.LOG = logAdapter27;
        io.swagger.annotations.Api api30 = null;
        boolean boolean31 = springMvcApiReader19.canReadApi(true, api30);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = springMvcApiReader19.LOG;
        io.swagger.models.Swagger swagger33 = null;
        springMvcApiReader19.swagger = swagger33;
        java.util.Set<java.lang.reflect.Type> typeSet35 = springMvcApiReader19.getTypesToSkip();
        springMvcApiReader2.setTypesToSkip(typeSet35);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        springMvcApiReader2.LOG = logAdapter37;
        io.swagger.annotations.ResponseHeader[] responseHeaderArray39 = null;
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap40 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray39);
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(logAdapter32);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNull(strMap40);
    }

    @Test
    public void test08496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08496");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        io.swagger.models.Swagger swagger11 = null;
        springMvcApiReader2.swagger = swagger11;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        springMvcApiReader2.LOG = logAdapter13;
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type[] typeArray18 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet19 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet19, typeArray18);
        springMvcApiReader17.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet19);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader17.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet23 = springMvcApiReader17.getTypesToSkip();
        springMvcApiReader2.typesToSkip = typeSet23;
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        java.lang.String str27 = springMvcApiReader2.parseOperationPath("", strMap26);
        java.util.Set<java.lang.reflect.Type> typeSet28 = springMvcApiReader2.getTypesToSkip();
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        springMvcApiReader2.LOG = logAdapter29;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(typeSet28);
    }

    @Test
    public void test08497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08497");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        java.lang.annotation.Annotation[] annotationArray7 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList8 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList8, annotationArray7);
        boolean boolean10 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList8);
        java.util.Set<java.lang.reflect.Type> typeSet11 = springMvcApiReader2.typesToSkip;
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Operation operation13 = null;
        io.swagger.annotations.ApiOperation apiOperation14 = null;
        springMvcApiReader2.updateTagsForOperation(operation13, apiOperation14);
        io.swagger.annotations.Api api17 = null;
        boolean boolean18 = springMvcApiReader2.canReadApi(true, api17);
        io.swagger.models.Operation operation19 = null;
        io.swagger.annotations.ApiOperation apiOperation20 = null;
        springMvcApiReader2.updateTagsForOperation(operation19, apiOperation20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = null;
        springMvcApiReader2.typesToSkip = typeSet22;
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader26 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger24, logAdapter25);
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet28 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet28, typeArray27);
        springMvcApiReader26.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet28);
        java.lang.annotation.Annotation[] annotationArray31 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList32 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList32, annotationArray31);
        boolean boolean34 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList32);
        io.swagger.models.Swagger swagger35 = null;
        springMvcApiReader26.swagger = swagger35;
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader39 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger37, logAdapter38);
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet41 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet41, typeArray40);
        springMvcApiReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet41);
        java.lang.annotation.Annotation[] annotationArray44 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList45 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList45, annotationArray44);
        boolean boolean47 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList45);
        io.swagger.models.Swagger swagger48 = null;
        springMvcApiReader39.swagger = swagger48;
        java.lang.annotation.Annotation[] annotationArray50 = new java.lang.annotation.Annotation[] {};
        java.util.ArrayList<java.lang.annotation.Annotation> annotationList51 = new java.util.ArrayList<java.lang.annotation.Annotation>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.annotation.Annotation>) annotationList51, annotationArray50);
        boolean boolean53 = springMvcApiReader39.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList51);
        boolean boolean54 = springMvcApiReader26.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList51);
        boolean boolean55 = springMvcApiReader2.hasValidAnnotations((java.util.List<java.lang.annotation.Annotation>) annotationList51);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = springMvcApiReader2.LOG;
        io.swagger.annotations.ApiOperation apiOperation57 = null;
        io.swagger.models.Operation operation58 = null;
        // The following exception was thrown during execution in test generation
        try {
            springMvcApiReader2.updateOperationProtocols(apiOperation57, operation58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(annotationArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(annotationArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(annotationArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(annotationArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(logAdapter56);
    }

    @Test
    public void test08498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08498");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader9 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger7, logAdapter8);
        java.lang.reflect.Type[] typeArray10 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet11 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet11, typeArray10);
        springMvcApiReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet11);
        io.swagger.models.Swagger swagger15 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter16 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader17 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger15, logAdapter16);
        java.lang.reflect.Type type18 = null;
        springMvcApiReader17.addTypeToSkippedTypes(type18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = springMvcApiReader17.typesToSkip;
        springMvcApiReader2.setTypesToSkip(typeSet20);
        java.util.Set<java.lang.reflect.Type> typeSet22 = springMvcApiReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger23 = null;
        springMvcApiReader2.swagger = swagger23;
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader27 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger25, logAdapter26);
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet29 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet29, typeArray28);
        springMvcApiReader27.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet29);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = springMvcApiReader27.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        springMvcApiReader27.LOG = logAdapter33;
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader37 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger35, logAdapter36);
        java.lang.reflect.Type type38 = null;
        springMvcApiReader37.addTypeToSkippedTypes(type38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = springMvcApiReader37.typesToSkip;
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader43 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger41, logAdapter42);
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet45 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet45, typeArray44);
        springMvcApiReader43.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet45);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = springMvcApiReader43.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap50 = null;
        java.lang.String str51 = springMvcApiReader43.parseOperationPath("", strMap50);
        io.swagger.annotations.Api api53 = null;
        boolean boolean54 = springMvcApiReader43.canReadApi(false, api53);
        java.util.Map<java.lang.String, java.lang.String> strMap56 = null;
        java.lang.String str57 = springMvcApiReader43.parseOperationPath("hi!", strMap56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader60 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger58, logAdapter59);
        java.lang.Class<?> wildcardClass61 = springMvcApiReader60.getClass();
        springMvcApiReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        java.util.Map<java.lang.String, java.lang.String> strMap64 = null;
        java.lang.String str65 = springMvcApiReader43.parseOperationPath("/hi!", strMap64);
        io.swagger.annotations.ResponseHeader[] responseHeaderArray66 = new io.swagger.annotations.ResponseHeader[] {};
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap67 = springMvcApiReader43.parseResponseHeaders(responseHeaderArray66);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap68 = springMvcApiReader37.parseResponseHeaders(responseHeaderArray66);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap69 = springMvcApiReader27.parseResponseHeaders(responseHeaderArray66);
        java.util.Map<java.lang.String, io.swagger.models.properties.Property> strMap70 = springMvcApiReader2.parseResponseHeaders(responseHeaderArray66);
        io.swagger.models.Swagger swagger71 = springMvcApiReader2.swagger;
        io.swagger.models.Swagger swagger72 = null;
        springMvcApiReader2.swagger = swagger72;
        java.util.Set<java.lang.reflect.Type> typeSet74 = springMvcApiReader2.typesToSkip;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(typeArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet22);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(logAdapter32);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(logAdapter48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "/hi!" + "'", str57, "/hi!");
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "/hi!" + "'", str65, "/hi!");
        org.junit.Assert.assertNotNull(responseHeaderArray66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(swagger71);
        org.junit.Assert.assertNotNull(typeSet74);
    }

    @Test
    public void test08499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08499");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = springMvcApiReader2.LOG;
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        java.lang.String str10 = springMvcApiReader2.parseOperationPath("", strMap9);
        java.lang.reflect.Type[] typeArray11 = new java.lang.reflect.Type[] {};
        java.util.ArrayList<java.lang.reflect.Type> typeList12 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList12, typeArray11);
        springMvcApiReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList12);
        java.lang.String[] strArray15 = new java.lang.String[] {};
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!" };
        java.util.Map<java.lang.String, io.swagger.models.Tag> strMap20 = null;
        io.swagger.models.SecurityRequirement[] securityRequirementArray21 = new io.swagger.models.SecurityRequirement[] {};
        java.util.ArrayList<io.swagger.models.SecurityRequirement> securityRequirementList22 = new java.util.ArrayList<io.swagger.models.SecurityRequirement>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.models.SecurityRequirement>) securityRequirementList22, securityRequirementArray21);
        io.swagger.models.Operation operation24 = null;
        springMvcApiReader2.updateOperation(strArray15, strArray19, strMap20, (java.util.List<io.swagger.models.SecurityRequirement>) securityRequirementList22, operation24);
        springMvcApiReader2.updateExtensionChain();
        io.swagger.models.Swagger swagger27 = null;
        springMvcApiReader2.swagger = swagger27;
        springMvcApiReader2.updateExtensionChain();
        java.util.Set<java.lang.reflect.Type> typeSet30 = springMvcApiReader2.typesToSkip;
        java.util.Set<java.lang.reflect.Type> typeSet31 = springMvcApiReader2.typesToSkip;
        io.swagger.models.Operation operation32 = null;
        io.swagger.annotations.ApiOperation apiOperation33 = null;
        springMvcApiReader2.updateTagsForOperation(operation32, apiOperation33);
        springMvcApiReader2.updateExtensionChain();
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(logAdapter7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(typeArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(securityRequirementArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeSet31);
    }

    @Test
    public void test08500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08500");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader springMvcApiReader2 = new com.github.kongchen.swagger.docgen.reader.SpringMvcApiReader(swagger0, logAdapter1);
        java.lang.reflect.Type[] typeArray3 = new java.lang.reflect.Type[] {};
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet4 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet4, typeArray3);
        springMvcApiReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet4);
        io.swagger.annotations.Api api8 = null;
        boolean boolean9 = springMvcApiReader2.canReadApi(false, api8);
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = springMvcApiReader2.LOG;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = springMvcApiReader2.LOG;
        io.swagger.models.Swagger swagger12 = null;
        springMvcApiReader2.swagger = swagger12;
        org.junit.Assert.assertNotNull(typeArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(logAdapter10);
        org.junit.Assert.assertNull(logAdapter11);
    }
}

