import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder28.headers;
        java.util.List<retrofit.client.Header> headerList30 = null;
        requestBuilder28.headers = headerList30;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(headerList29);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.lang.String str12 = requestBuilder1.getapiUrl();
        requestBuilder1.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList17 = null;
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "", headerList17, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = request19.getBody();
        java.lang.String str21 = request19.url;
        java.lang.String str22 = request19.url;
        java.util.List<retrofit.client.Header> headerList23 = request19.getHeaders();
        requestBuilder1.setheaders(headerList23);
        java.lang.String str25 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(typedOutput20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.getMethod();
        java.lang.String str13 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter87 = requestBuilder1.getconverter();
        java.lang.Object[] objArray88 = requestBuilder1.getargs();
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(converter87);
        org.junit.Assert.assertNotNull(objArray88);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("hi!", "", headerList44, typedOutput47);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "", headerList44, typedOutput49);
        java.lang.String str51 = request50.method;
        java.lang.String str52 = request50.method;
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        java.lang.String str85 = requestBuilder84.apiUrl;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        requestBuilder1.apiUrl = "";
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput14 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        java.lang.Object[] objArray35 = requestBuilder1.args;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(objArray35);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        java.lang.String str29 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder1.getheaders();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(headerList30);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        retrofit.mime.TypedOutput typedOutput9 = request6.getBody();
        java.lang.String str10 = request6.getUrl();
        java.lang.String str11 = request6.method;
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        java.lang.String str13 = request6.getMethod();
        java.lang.String str14 = request6.getMethod();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        retrofit.converter.Converter converter35 = requestBuilder34.getconverter();
        retrofit.RequestBuilder requestBuilder37 = requestBuilder34.apiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput38 = requestBuilder34.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNotNull(requestBuilder37);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.Object[] objArray2 = requestBuilder1.args;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        java.util.List<retrofit.client.Header> headerList6 = requestBuilder4.headers;
        requestBuilder4.setapiUrl("hi!");
        retrofit.converter.Converter converter9 = requestBuilder4.converter;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder4.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder13 = requestBuilder11.apiUrl("hi!");
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.client.Header[] headerArray18 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList19 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList19, headerArray18);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput21);
        requestBuilder15.setheaders((java.util.List<retrofit.client.Header>) headerList19);
        java.util.List<retrofit.client.Header> headerList24 = requestBuilder15.getheaders();
        java.lang.String str25 = requestBuilder15.getapiUrl();
        retrofit.converter.Converter converter26 = null;
        retrofit.RequestBuilder requestBuilder27 = new retrofit.RequestBuilder(converter26);
        retrofit.client.Header[] headerArray30 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList31 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList31, headerArray30);
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList31, typedOutput33);
        requestBuilder27.setheaders((java.util.List<retrofit.client.Header>) headerList31);
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        retrofit.converter.Converter converter41 = requestBuilder40.getconverter();
        java.util.List<retrofit.client.Header> headerList42 = requestBuilder40.headers;
        requestBuilder40.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        java.lang.String str50 = request49.getUrl();
        java.lang.Object[] objArray51 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder40, request49 };
        requestBuilder27.setargs(objArray51);
        requestBuilder27.apiUrl = "";
        retrofit.RequestBuilder requestBuilder56 = requestBuilder27.apiUrl("hi!");
        retrofit.converter.Converter converter57 = null;
        retrofit.RequestBuilder requestBuilder58 = new retrofit.RequestBuilder(converter57);
        java.util.List<retrofit.client.Header> headerList61 = null;
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("", "", headerList61, typedOutput62);
        retrofit.mime.TypedOutput typedOutput64 = request63.getBody();
        retrofit.mime.TypedOutput typedOutput65 = request63.getBody();
        java.util.List<retrofit.client.Header> headerList66 = request63.headers;
        requestBuilder58.setheaders(headerList66);
        retrofit.RequestBuilder requestBuilder68 = requestBuilder27.headers(headerList66);
        requestBuilder15.headers = headerList66;
        java.util.List<retrofit.client.Header> headerList72 = null;
        retrofit.mime.TypedOutput typedOutput73 = null;
        retrofit.client.Request request74 = new retrofit.client.Request("", "", headerList72, typedOutput73);
        java.lang.String str75 = request74.url;
        java.util.List<retrofit.client.Header> headerList76 = request74.getHeaders();
        requestBuilder15.headers = headerList76;
        retrofit.RequestBuilder requestBuilder78 = requestBuilder11.headers(headerList76);
        requestBuilder1.headers = headerList76;
        java.lang.Object[] objArray80 = requestBuilder1.args;
        org.junit.Assert.assertNull(objArray2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNull(headerList6);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertNotNull(headerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(headerArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNull(headerList42);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(requestBuilder56);
        org.junit.Assert.assertNull(typedOutput64);
        org.junit.Assert.assertNull(typedOutput65);
        org.junit.Assert.assertNotNull(headerList66);
        org.junit.Assert.assertNotNull(requestBuilder68);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(headerList76);
        org.junit.Assert.assertNotNull(requestBuilder78);
        org.junit.Assert.assertNull(objArray80);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        java.lang.String str38 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        retrofit.converter.Converter converter41 = requestBuilder40.getconverter();
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        requestBuilder43.setheaders((java.util.List<retrofit.client.Header>) headerList47);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder56.headers;
        requestBuilder56.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder56, request65 };
        requestBuilder43.setargs(objArray67);
        java.lang.Object[] objArray69 = requestBuilder43.getargs();
        retrofit.RequestBuilder requestBuilder70 = requestBuilder40.args(objArray69);
        requestBuilder37.setargs(objArray69);
        retrofit.RequestBuilder requestBuilder72 = requestBuilder1.args(objArray69);
        retrofit.converter.Converter converter73 = requestBuilder1.getconverter();
        java.lang.Object[] objArray74 = requestBuilder1.args;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNull(converter73);
        org.junit.Assert.assertNotNull(objArray74);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = null;
        requestBuilder1.headers = headerList3;
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder1.headers;
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList5);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(headerList7);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        java.lang.Object[] objArray85 = requestBuilder84.getargs();
        retrofit.RequestBuilder requestBuilder87 = requestBuilder84.apiUrl("");
        java.util.List<retrofit.client.Header> headerList88 = requestBuilder84.headers;
        java.lang.String str89 = requestBuilder84.getapiUrl();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNull(headerList88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.converter;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput33 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList6 = request4.headers;
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.lang.Class<?> wildcardClass10 = request4.getClass();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        requestBuilder47.setheaders((java.util.List<retrofit.client.Header>) headerList51);
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.converter.Converter converter61 = requestBuilder60.getconverter();
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder60.headers;
        requestBuilder60.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList67 = null;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "", headerList67, typedOutput68);
        java.lang.String str70 = request69.getUrl();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder60, request69 };
        requestBuilder47.setargs(objArray71);
        retrofit.RequestBuilder requestBuilder74 = requestBuilder47.apiUrl("");
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder47.headers;
        requestBuilder1.headers = headerList75;
        requestBuilder1.apiUrl = "hi!";
        java.lang.String str79 = requestBuilder1.getapiUrl();
        java.lang.Object[] objArray80 = requestBuilder1.args;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(headerList62);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(objArray80);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.RequestBuilder requestBuilder75 = requestBuilder46.apiUrl("hi!");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        retrofit.mime.TypedOutput typedOutput83 = request82.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request82.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request82.headers;
        requestBuilder77.setheaders(headerList85);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder46.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder1.headers(headerList85);
        java.lang.Object[] objArray89 = null;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder88.args(objArray89);
        java.lang.Object[] objArray91 = requestBuilder88.getargs();
        retrofit.converter.Converter converter92 = requestBuilder88.converter;
        java.util.List<retrofit.client.Header> headerList93 = requestBuilder88.getheaders();
        java.lang.Class<?> wildcardClass94 = headerList93.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNull(objArray91);
        org.junit.Assert.assertNull(converter92);
        org.junit.Assert.assertNotNull(headerList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList12 = null;
        requestBuilder1.setheaders(headerList12);
        java.lang.String str14 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder1.getheaders();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request17 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(headerList15);
        org.junit.Assert.assertNull(headerList16);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.body;
        java.lang.String str6 = request4.method;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        java.lang.String str8 = request4.method;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList12 = null;
        requestBuilder1.setheaders(headerList12);
        requestBuilder1.apiUrl = "hi!";
        java.lang.String str16 = requestBuilder1.apiUrl;
        java.lang.String str17 = requestBuilder1.apiUrl;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.method;
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.method;
        java.lang.String str11 = request4.getMethod();
        java.lang.String str12 = request4.getUrl();
        java.lang.String str13 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder10 = requestBuilder8.apiUrl("hi!");
        retrofit.converter.Converter converter11 = requestBuilder10.getconverter();
        requestBuilder10.setapiUrl("");
        retrofit.converter.Converter converter14 = requestBuilder10.converter;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNotNull(requestBuilder10);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(converter14);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray13 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList18 = null;
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", headerList18, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = request20.getBody();
        retrofit.mime.TypedOutput typedOutput22 = request20.getBody();
        java.lang.String str23 = request20.getMethod();
        java.lang.String str24 = request20.method;
        java.lang.String str25 = request20.method;
        java.util.List<retrofit.client.Header> headerList26 = request20.headers;
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "hi!", headerList26, typedOutput27);
        requestBuilder1.setheaders(headerList26);
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder1.headers;
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter33 = requestBuilder1.getconverter();
        java.lang.Class<?> wildcardClass34 = requestBuilder1.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(typedOutput21);
        org.junit.Assert.assertNull(typedOutput22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList6 = request4.headers;
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        java.lang.Class<?> wildcardClass10 = request4.getClass();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        retrofit.converter.Converter converter43 = requestBuilder1.converter;
        retrofit.converter.Converter converter44 = requestBuilder1.converter;
        retrofit.converter.Converter converter45 = requestBuilder1.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(converter45);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        java.lang.String str38 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        retrofit.converter.Converter converter41 = requestBuilder40.getconverter();
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        requestBuilder43.setheaders((java.util.List<retrofit.client.Header>) headerList47);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder56.headers;
        requestBuilder56.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder56, request65 };
        requestBuilder43.setargs(objArray67);
        java.lang.Object[] objArray69 = requestBuilder43.getargs();
        retrofit.RequestBuilder requestBuilder70 = requestBuilder40.args(objArray69);
        requestBuilder37.setargs(objArray69);
        retrofit.RequestBuilder requestBuilder72 = requestBuilder1.args(objArray69);
        retrofit.converter.Converter converter73 = requestBuilder1.getconverter();
        java.lang.String str74 = requestBuilder1.getapiUrl();
        requestBuilder1.apiUrl = "";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str77 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNull(converter73);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.getapiUrl();
        java.lang.String str37 = requestBuilder1.apiUrl;
        java.lang.String str38 = requestBuilder1.apiUrl;
        java.lang.Class<?> wildcardClass39 = requestBuilder1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.method;
        java.lang.String str8 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        java.lang.String str10 = request4.getUrl();
        java.lang.String str11 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.lang.String str9 = request6.getMethod();
        java.lang.String str10 = request6.method;
        java.lang.String str11 = request6.method;
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", headerList12, typedOutput13);
        java.lang.Class<?> wildcardClass15 = headerList12.getClass();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter31 = requestBuilder1.converter;
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = request38.getBody();
        retrofit.mime.TypedOutput typedOutput40 = request38.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request38.headers;
        requestBuilder33.setheaders(headerList41);
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        retrofit.converter.Converter converter45 = requestBuilder44.getconverter();
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder44.headers;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.client.Header[] headerArray54 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList55 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList55, headerArray54);
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList55, typedOutput57);
        requestBuilder51.setheaders((java.util.List<retrofit.client.Header>) headerList55);
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        retrofit.mime.TypedOutput typedOutput66 = request64.body;
        java.lang.Object[] objArray67 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder51, typedOutput66 };
        requestBuilder44.setargs(objArray67);
        retrofit.RequestBuilder requestBuilder69 = requestBuilder33.args(objArray67);
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder69.headers;
        retrofit.RequestBuilder requestBuilder71 = requestBuilder1.headers(headerList70);
        retrofit.converter.Converter converter72 = requestBuilder71.converter;
        retrofit.RequestBuilder requestBuilder74 = requestBuilder71.apiUrl("");
        retrofit.converter.Converter converter75 = requestBuilder71.getconverter();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(headerList46);
        org.junit.Assert.assertNotNull(headerArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(typedOutput66);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNotNull(headerList70);
        org.junit.Assert.assertNotNull(requestBuilder71);
        org.junit.Assert.assertNull(converter72);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNull(converter75);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        java.lang.String str15 = requestBuilder14.apiUrl;
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.client.Header[] headerArray23 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList24 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList24, headerArray23);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList24, typedOutput26);
        requestBuilder20.setheaders((java.util.List<retrofit.client.Header>) headerList24);
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        retrofit.converter.Converter converter34 = requestBuilder33.getconverter();
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder33.headers;
        requestBuilder33.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList40 = null;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList40, typedOutput41);
        java.lang.String str43 = request42.getUrl();
        java.lang.Object[] objArray44 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder33, request42 };
        requestBuilder20.setargs(objArray44);
        java.lang.Object[] objArray46 = requestBuilder20.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder17.args(objArray46);
        requestBuilder14.setargs(objArray46);
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        java.lang.String str51 = requestBuilder50.apiUrl;
        retrofit.converter.Converter converter52 = null;
        retrofit.RequestBuilder requestBuilder53 = new retrofit.RequestBuilder(converter52);
        retrofit.converter.Converter converter54 = requestBuilder53.getconverter();
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.client.Header[] headerArray59 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList60 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList60, headerArray59);
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList60, typedOutput62);
        requestBuilder56.setheaders((java.util.List<retrofit.client.Header>) headerList60);
        retrofit.converter.Converter converter68 = null;
        retrofit.RequestBuilder requestBuilder69 = new retrofit.RequestBuilder(converter68);
        retrofit.converter.Converter converter70 = requestBuilder69.getconverter();
        java.util.List<retrofit.client.Header> headerList71 = requestBuilder69.headers;
        requestBuilder69.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList76 = null;
        retrofit.mime.TypedOutput typedOutput77 = null;
        retrofit.client.Request request78 = new retrofit.client.Request("", "", headerList76, typedOutput77);
        java.lang.String str79 = request78.getUrl();
        java.lang.Object[] objArray80 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder69, request78 };
        requestBuilder56.setargs(objArray80);
        java.lang.Object[] objArray82 = requestBuilder56.getargs();
        retrofit.RequestBuilder requestBuilder83 = requestBuilder53.args(objArray82);
        requestBuilder50.setargs(objArray82);
        retrofit.RequestBuilder requestBuilder85 = requestBuilder14.args(objArray82);
        retrofit.RequestBuilder requestBuilder86 = requestBuilder3.args(objArray82);
        retrofit.converter.Converter converter87 = requestBuilder86.converter;
        java.util.List<retrofit.client.Header> headerList88 = requestBuilder86.headers;
        retrofit.mime.TypedOutput typedOutput89 = null;
        retrofit.client.Request request90 = new retrofit.client.Request("hi!", "hi!", headerList88, typedOutput89);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNotNull(headerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(headerList35);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNotNull(headerArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(converter70);
        org.junit.Assert.assertNull(headerList71);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder85);
        org.junit.Assert.assertNotNull(requestBuilder86);
        org.junit.Assert.assertNull(converter87);
        org.junit.Assert.assertNotNull(headerList88);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        requestBuilder1.setapiUrl("");
        java.util.List<retrofit.client.Header> headerList13 = null;
        requestBuilder1.headers = headerList13;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request15 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.RequestBuilder requestBuilder3 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder5.getheaders();
        java.lang.String str15 = requestBuilder5.getapiUrl();
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.converter.Converter converter31 = requestBuilder30.getconverter();
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder30.headers;
        requestBuilder30.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        java.lang.String str40 = request39.getUrl();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder30, request39 };
        requestBuilder17.setargs(objArray41);
        requestBuilder17.apiUrl = "";
        retrofit.RequestBuilder requestBuilder46 = requestBuilder17.apiUrl("hi!");
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.util.List<retrofit.client.Header> headerList51 = null;
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "", headerList51, typedOutput52);
        retrofit.mime.TypedOutput typedOutput54 = request53.getBody();
        retrofit.mime.TypedOutput typedOutput55 = request53.getBody();
        java.util.List<retrofit.client.Header> headerList56 = request53.headers;
        requestBuilder48.setheaders(headerList56);
        retrofit.RequestBuilder requestBuilder58 = requestBuilder17.headers(headerList56);
        requestBuilder5.headers = headerList56;
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.url;
        java.util.List<retrofit.client.Header> headerList66 = request64.getHeaders();
        requestBuilder5.headers = headerList66;
        java.util.List<retrofit.client.Header> headerList68 = requestBuilder5.headers;
        retrofit.RequestBuilder requestBuilder69 = requestBuilder3.headers(headerList68);
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        retrofit.mime.TypedOutput typedOutput77 = request76.body;
        java.util.List<retrofit.client.Header> headerList78 = request76.headers;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList78, typedOutput79);
        requestBuilder69.headers = headerList78;
        java.lang.Object[] objArray82 = requestBuilder69.args;
        org.junit.Assert.assertNotNull(requestBuilder3);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNull(typedOutput54);
        org.junit.Assert.assertNull(typedOutput55);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(headerList66);
        org.junit.Assert.assertNotNull(headerList68);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNull(typedOutput77);
        org.junit.Assert.assertNotNull(headerList78);
        org.junit.Assert.assertNull(objArray82);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter34 = requestBuilder1.getconverter();
        java.lang.Class<?> wildcardClass35 = requestBuilder1.getClass();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.getapiUrl();
        java.lang.String str37 = requestBuilder1.getapiUrl();
        requestBuilder1.setapiUrl("");
        java.lang.Object[] objArray40 = requestBuilder1.getargs();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(objArray40);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter8 = requestBuilder1.converter;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request9 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(converter8);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.lang.String str3 = requestBuilder1.getapiUrl();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput4 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.RequestBuilder requestBuilder75 = requestBuilder46.apiUrl("hi!");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        retrofit.mime.TypedOutput typedOutput83 = request82.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request82.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request82.headers;
        requestBuilder77.setheaders(headerList85);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder46.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder1.headers(headerList85);
        java.lang.Object[] objArray89 = null;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder88.args(objArray89);
        java.lang.Object[] objArray91 = requestBuilder88.getargs();
        requestBuilder88.apiUrl = "";
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput94 = requestBuilder88.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNull(objArray91);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        java.lang.String str9 = request8.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request8.body;
        java.lang.String str11 = request8.getUrl();
        java.lang.String str12 = request8.url;
        java.lang.String str13 = request8.getUrl();
        java.util.List<retrofit.client.Header> headerList14 = request8.headers;
        java.util.List<retrofit.client.Header> headerList15 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "", headerList15, typedOutput18);
        java.lang.Class<?> wildcardClass20 = headerList15.getClass();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        requestBuilder1.apiUrl = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str8 = requestBuilder1.apiUrl;
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter10 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.client.Header[] headerArray15 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList16 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList16, headerArray15);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList16, typedOutput18);
        requestBuilder12.setheaders((java.util.List<retrofit.client.Header>) headerList16);
        retrofit.converter.Converter converter24 = null;
        retrofit.RequestBuilder requestBuilder25 = new retrofit.RequestBuilder(converter24);
        retrofit.converter.Converter converter26 = requestBuilder25.getconverter();
        java.util.List<retrofit.client.Header> headerList27 = requestBuilder25.headers;
        requestBuilder25.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList32 = null;
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "", headerList32, typedOutput33);
        java.lang.String str35 = request34.getUrl();
        java.lang.Object[] objArray36 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder25, request34 };
        requestBuilder12.setargs(objArray36);
        requestBuilder12.apiUrl = "";
        retrofit.RequestBuilder requestBuilder41 = requestBuilder12.apiUrl("hi!");
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        java.util.List<retrofit.client.Header> headerList46 = null;
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("", "", headerList46, typedOutput47);
        retrofit.mime.TypedOutput typedOutput49 = request48.getBody();
        retrofit.mime.TypedOutput typedOutput50 = request48.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request48.headers;
        requestBuilder43.setheaders(headerList51);
        retrofit.RequestBuilder requestBuilder53 = requestBuilder12.headers(headerList51);
        java.lang.Object[] objArray54 = requestBuilder12.getargs();
        java.lang.Object[] objArray55 = requestBuilder12.getargs();
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        retrofit.mime.TypedOutput typedOutput61 = request60.getBody();
        java.util.List<retrofit.client.Header> headerList62 = request60.headers;
        java.util.List<retrofit.client.Header> headerList63 = request60.headers;
        requestBuilder12.headers = headerList63;
        requestBuilder12.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList67 = requestBuilder12.getheaders();
        java.lang.Object[] objArray68 = requestBuilder12.args;
        retrofit.RequestBuilder requestBuilder70 = requestBuilder12.apiUrl("hi!");
        java.lang.Object[] objArray71 = requestBuilder70.getargs();
        requestBuilder1.setargs(objArray71);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str73 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(converter10);
        org.junit.Assert.assertNotNull(headerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(converter26);
        org.junit.Assert.assertNull(headerList27);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNotNull(requestBuilder41);
        org.junit.Assert.assertNull(typedOutput49);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(requestBuilder53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertNull(typedOutput61);
        org.junit.Assert.assertNotNull(headerList62);
        org.junit.Assert.assertNotNull(headerList63);
        org.junit.Assert.assertNotNull(headerList67);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(objArray71);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.Object[] objArray2 = requestBuilder1.args;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        java.lang.String str13 = requestBuilder4.getapiUrl();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder4.getheaders();
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder4.headers;
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder4.getheaders();
        retrofit.RequestBuilder requestBuilder17 = requestBuilder1.headers(headerList16);
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.converter.Converter converter20 = requestBuilder19.getconverter();
        retrofit.converter.Converter converter21 = null;
        retrofit.RequestBuilder requestBuilder22 = new retrofit.RequestBuilder(converter21);
        retrofit.client.Header[] headerArray25 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList26 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList26, headerArray25);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList26, typedOutput28);
        requestBuilder22.setheaders((java.util.List<retrofit.client.Header>) headerList26);
        retrofit.converter.Converter converter34 = null;
        retrofit.RequestBuilder requestBuilder35 = new retrofit.RequestBuilder(converter34);
        retrofit.converter.Converter converter36 = requestBuilder35.getconverter();
        java.util.List<retrofit.client.Header> headerList37 = requestBuilder35.headers;
        requestBuilder35.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList42 = null;
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("", "", headerList42, typedOutput43);
        java.lang.String str45 = request44.getUrl();
        java.lang.Object[] objArray46 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder35, request44 };
        requestBuilder22.setargs(objArray46);
        java.lang.Object[] objArray48 = requestBuilder22.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder19.args(objArray48);
        java.lang.String str50 = requestBuilder19.getapiUrl();
        java.lang.String str51 = requestBuilder19.apiUrl;
        retrofit.RequestBuilder requestBuilder53 = requestBuilder19.apiUrl("");
        java.util.List<retrofit.client.Header> headerList54 = null;
        retrofit.RequestBuilder requestBuilder55 = requestBuilder53.headers(headerList54);
        retrofit.converter.Converter converter56 = null;
        retrofit.RequestBuilder requestBuilder57 = new retrofit.RequestBuilder(converter56);
        java.util.List<retrofit.client.Header> headerList60 = null;
        retrofit.mime.TypedOutput typedOutput61 = null;
        retrofit.client.Request request62 = new retrofit.client.Request("", "", headerList60, typedOutput61);
        retrofit.mime.TypedOutput typedOutput63 = request62.getBody();
        retrofit.mime.TypedOutput typedOutput64 = request62.getBody();
        java.util.List<retrofit.client.Header> headerList65 = request62.headers;
        requestBuilder57.setheaders(headerList65);
        retrofit.converter.Converter converter67 = null;
        retrofit.RequestBuilder requestBuilder68 = new retrofit.RequestBuilder(converter67);
        retrofit.converter.Converter converter69 = requestBuilder68.getconverter();
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder68.headers;
        retrofit.converter.Converter converter74 = null;
        retrofit.RequestBuilder requestBuilder75 = new retrofit.RequestBuilder(converter74);
        retrofit.client.Header[] headerArray78 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList79 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList79, headerArray78);
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList79, typedOutput81);
        requestBuilder75.setheaders((java.util.List<retrofit.client.Header>) headerList79);
        java.util.List<retrofit.client.Header> headerList86 = null;
        retrofit.mime.TypedOutput typedOutput87 = null;
        retrofit.client.Request request88 = new retrofit.client.Request("", "", headerList86, typedOutput87);
        java.lang.String str89 = request88.getUrl();
        retrofit.mime.TypedOutput typedOutput90 = request88.body;
        java.lang.Object[] objArray91 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder75, typedOutput90 };
        requestBuilder68.setargs(objArray91);
        retrofit.RequestBuilder requestBuilder93 = requestBuilder57.args(objArray91);
        requestBuilder53.setargs(objArray91);
        retrofit.RequestBuilder requestBuilder95 = requestBuilder1.args(objArray91);
        java.lang.String str96 = requestBuilder95.getapiUrl();
        org.junit.Assert.assertNull(objArray2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(requestBuilder17);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNotNull(headerArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNull(headerList37);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(requestBuilder53);
        org.junit.Assert.assertNotNull(requestBuilder55);
        org.junit.Assert.assertNull(typedOutput63);
        org.junit.Assert.assertNull(typedOutput64);
        org.junit.Assert.assertNotNull(headerList65);
        org.junit.Assert.assertNull(converter69);
        org.junit.Assert.assertNull(headerList70);
        org.junit.Assert.assertNotNull(headerArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNull(typedOutput90);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertNotNull(requestBuilder93);
        org.junit.Assert.assertNotNull(requestBuilder95);
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder47 = requestBuilder1.apiUrl("");
        retrofit.RequestBuilder requestBuilder49 = requestBuilder47.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList50 = requestBuilder47.headers;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request51 = requestBuilder47.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(headerList50);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        requestBuilder1.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList87 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder89 = requestBuilder1.apiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request90 = requestBuilder89.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(headerList87);
        org.junit.Assert.assertNotNull(requestBuilder89);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput12 = requestBuilder11.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder11);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "hi!", headerList31, typedOutput32);
        java.util.List<retrofit.client.Header> headerList34 = request33.getHeaders();
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.getUrl();
        java.lang.String str37 = request33.getUrl();
        java.lang.String str38 = request33.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertNotNull(headerList34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        requestBuilder1.setapiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request13 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.converter.Converter converter14 = requestBuilder13.getconverter();
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.client.Header[] headerArray19 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList20 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList20, headerArray19);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList20, typedOutput22);
        requestBuilder16.setheaders((java.util.List<retrofit.client.Header>) headerList20);
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.converter.Converter converter30 = requestBuilder29.getconverter();
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder29.headers;
        requestBuilder29.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        java.lang.String str39 = request38.getUrl();
        java.lang.Object[] objArray40 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder29, request38 };
        requestBuilder16.setargs(objArray40);
        java.lang.Object[] objArray42 = requestBuilder16.getargs();
        retrofit.RequestBuilder requestBuilder43 = requestBuilder13.args(objArray42);
        requestBuilder43.setapiUrl("");
        retrofit.converter.Converter converter46 = requestBuilder43.getconverter();
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder43.getheaders();
        java.lang.String str48 = requestBuilder43.apiUrl;
        java.lang.Object[] objArray49 = requestBuilder43.args;
        requestBuilder11.args = objArray49;
        java.lang.String str51 = requestBuilder11.apiUrl;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNotNull(headerArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(headerList31);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(requestBuilder43);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(headerList47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter9 = requestBuilder1.converter;
        retrofit.converter.Converter converter10 = null;
        retrofit.RequestBuilder requestBuilder11 = new retrofit.RequestBuilder(converter10);
        java.lang.String str12 = requestBuilder11.apiUrl;
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.converter.Converter converter31 = requestBuilder30.getconverter();
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder30.headers;
        requestBuilder30.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        java.lang.String str40 = request39.getUrl();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder30, request39 };
        requestBuilder17.setargs(objArray41);
        java.lang.Object[] objArray43 = requestBuilder17.getargs();
        retrofit.RequestBuilder requestBuilder44 = requestBuilder14.args(objArray43);
        requestBuilder11.setargs(objArray43);
        requestBuilder1.setargs(objArray43);
        java.lang.Object[] objArray47 = requestBuilder1.getargs();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request48 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray47);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.getheaders();
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.headers;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput33 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertNotNull(headerList32);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str8 = requestBuilder1.apiUrl;
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("");
        java.lang.String str12 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("hi!", "hi!", headerList33, typedOutput36);
        java.lang.String str38 = request37.url;
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNull(typedOutput39);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter9 = requestBuilder1.converter;
        retrofit.converter.Converter converter10 = null;
        retrofit.RequestBuilder requestBuilder11 = new retrofit.RequestBuilder(converter10);
        java.lang.String str12 = requestBuilder11.apiUrl;
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.converter.Converter converter31 = requestBuilder30.getconverter();
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder30.headers;
        requestBuilder30.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        java.lang.String str40 = request39.getUrl();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder30, request39 };
        requestBuilder17.setargs(objArray41);
        java.lang.Object[] objArray43 = requestBuilder17.getargs();
        retrofit.RequestBuilder requestBuilder44 = requestBuilder14.args(objArray43);
        requestBuilder11.setargs(objArray43);
        requestBuilder1.setargs(objArray43);
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNull(headerList47);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        requestBuilder3.setheaders(headerList40);
        requestBuilder3.apiUrl = "";
        java.lang.Object[] objArray45 = requestBuilder3.args;
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder3.getheaders();
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("", "", headerList46, typedOutput47);
        java.lang.String str49 = request48.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.lang.String str12 = requestBuilder3.getapiUrl();
        retrofit.RequestBuilder requestBuilder14 = requestBuilder3.apiUrl("");
        java.lang.Object[] objArray15 = requestBuilder3.getargs();
        java.util.List<retrofit.client.Header> headerList20 = null;
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("", "", headerList20, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = request22.getBody();
        retrofit.mime.TypedOutput typedOutput24 = request22.getBody();
        java.lang.String str25 = request22.getMethod();
        java.lang.String str26 = request22.method;
        java.lang.String str27 = request22.method;
        java.util.List<retrofit.client.Header> headerList28 = request22.headers;
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "hi!", headerList28, typedOutput29);
        requestBuilder3.setheaders(headerList28);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder3.getheaders();
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("hi!", "", headerList32, typedOutput33);
        java.lang.Class<?> wildcardClass35 = headerList32.getClass();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertNull(objArray15);
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNull(typedOutput24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(headerList28);
        org.junit.Assert.assertNotNull(headerList32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        requestBuilder1.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.url;
        java.lang.String str37 = request35.url;
        java.lang.String str38 = request35.method;
        java.util.List<retrofit.client.Header> headerList39 = request35.headers;
        requestBuilder1.headers = headerList39;
        java.util.List<retrofit.client.Header> headerList41 = requestBuilder1.getheaders();
        java.lang.String str42 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter12 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.client.Header[] headerArray19 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList20 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList20, headerArray19);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList20, typedOutput22);
        requestBuilder16.setheaders((java.util.List<retrofit.client.Header>) headerList20);
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.converter.Converter converter30 = requestBuilder29.getconverter();
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder29.headers;
        requestBuilder29.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        java.lang.String str39 = request38.getUrl();
        java.lang.Object[] objArray40 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder29, request38 };
        requestBuilder16.setargs(objArray40);
        java.lang.Object[] objArray42 = requestBuilder16.getargs();
        java.lang.String str43 = requestBuilder16.apiUrl;
        java.util.List<retrofit.client.Header> headerList46 = null;
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("", "", headerList46, typedOutput47);
        java.lang.String str49 = request48.getUrl();
        retrofit.mime.TypedOutput typedOutput50 = request48.body;
        java.util.List<retrofit.client.Header> headerList51 = request48.getHeaders();
        requestBuilder16.setheaders(headerList51);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("", "hi!", headerList51, typedOutput53);
        retrofit.RequestBuilder requestBuilder55 = requestBuilder1.headers(headerList51);
        java.lang.Class<?> wildcardClass56 = headerList51.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNotNull(headerArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(headerList31);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(requestBuilder55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        requestBuilder4.apiUrl = "";
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = request38.getBody();
        retrofit.mime.TypedOutput typedOutput40 = request38.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request38.headers;
        requestBuilder33.setheaders(headerList41);
        requestBuilder4.setheaders(headerList41);
        requestBuilder4.apiUrl = "";
        java.lang.Object[] objArray46 = requestBuilder4.args;
        retrofit.RequestBuilder requestBuilder47 = requestBuilder1.args(objArray46);
        retrofit.converter.Converter converter48 = requestBuilder1.converter;
        requestBuilder1.setapiUrl("");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNull(converter48);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList12 = null;
        requestBuilder1.setheaders(headerList12);
        requestBuilder1.apiUrl = "hi!";
        requestBuilder1.apiUrl = "";
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter20 = requestBuilder1.converter;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(converter20);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.headers;
        java.lang.Object[] objArray30 = requestBuilder1.args;
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.client.Header[] headerArray35 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList36 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList36, headerArray35);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList36, typedOutput38);
        requestBuilder32.setheaders((java.util.List<retrofit.client.Header>) headerList36);
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.converter.Converter converter46 = requestBuilder45.getconverter();
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder45.headers;
        requestBuilder45.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList52 = null;
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("", "", headerList52, typedOutput53);
        java.lang.String str55 = request54.getUrl();
        java.lang.Object[] objArray56 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder45, request54 };
        requestBuilder32.setargs(objArray56);
        requestBuilder1.setargs(objArray56);
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(headerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(headerList47);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(objArray56);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        retrofit.converter.Converter converter38 = requestBuilder37.converter;
        requestBuilder37.apiUrl = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = requestBuilder37.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(converter38);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter33 = requestBuilder1.converter;
        java.lang.Class<?> wildcardClass34 = requestBuilder1.getClass();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        retrofit.converter.Converter converter5 = null;
        retrofit.RequestBuilder requestBuilder6 = new retrofit.RequestBuilder(converter5);
        retrofit.client.Header[] headerArray9 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList10 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList10, headerArray9);
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList10, typedOutput12);
        requestBuilder6.setheaders((java.util.List<retrofit.client.Header>) headerList10);
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.converter.Converter converter20 = requestBuilder19.getconverter();
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder19.headers;
        requestBuilder19.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList26 = null;
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList26, typedOutput27);
        java.lang.String str29 = request28.getUrl();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder19, request28 };
        requestBuilder6.setargs(objArray30);
        java.lang.Object[] objArray32 = requestBuilder6.getargs();
        retrofit.RequestBuilder requestBuilder33 = requestBuilder3.args(objArray32);
        requestBuilder33.setapiUrl("");
        retrofit.converter.Converter converter36 = requestBuilder33.getconverter();
        retrofit.converter.Converter converter37 = requestBuilder33.getconverter();
        java.util.List<retrofit.client.Header> headerList40 = null;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList40, typedOutput41);
        java.lang.String str43 = request42.url;
        java.lang.String str44 = request42.url;
        java.lang.String str45 = request42.getUrl();
        retrofit.mime.TypedOutput typedOutput46 = request42.body;
        java.util.List<retrofit.client.Header> headerList47 = request42.headers;
        requestBuilder33.headers = headerList47;
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("", "hi!", headerList47, typedOutput49);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(headerArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(headerList21);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(requestBuilder33);
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNull(converter37);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(typedOutput46);
        org.junit.Assert.assertNotNull(headerList47);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter29 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray32 = requestBuilder1.args;
        java.lang.String str33 = requestBuilder1.getapiUrl();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.method;
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "hi!", headerList2, typedOutput3);
        java.lang.String str5 = request4.method;
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        retrofit.mime.TypedOutput typedOutput9 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request6.getBody();
        java.lang.String str11 = request6.url;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        requestBuilder4.apiUrl = "";
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = request38.getBody();
        retrofit.mime.TypedOutput typedOutput40 = request38.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request38.headers;
        requestBuilder33.setheaders(headerList41);
        requestBuilder4.setheaders(headerList41);
        requestBuilder4.apiUrl = "";
        java.lang.Object[] objArray46 = requestBuilder4.args;
        retrofit.RequestBuilder requestBuilder47 = requestBuilder1.args(objArray46);
        retrofit.converter.Converter converter48 = requestBuilder1.converter;
        requestBuilder1.apiUrl = "";
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNull(converter48);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.method;
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        java.lang.String str12 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput13 = request6.body;
        java.lang.String str14 = request6.url;
        java.util.List<retrofit.client.Header> headerList15 = request6.getHeaders();
        java.lang.String str16 = request6.getMethod();
        java.lang.String str17 = request6.url;
        java.lang.String str18 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter29 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray32 = requestBuilder31.getargs();
        java.lang.Class<?> wildcardClass33 = objArray32.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.getMethod();
        java.lang.String str10 = request4.getMethod();
        java.lang.Class<?> wildcardClass11 = request4.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.headers;
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "", headerList15, typedOutput16);
        java.lang.String str18 = request17.method;
        java.util.List<retrofit.client.Header> headerList19 = request17.headers;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(headerList19);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.getapiUrl();
        java.lang.String str37 = requestBuilder1.getapiUrl();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request38 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.RequestBuilder requestBuilder75 = requestBuilder46.apiUrl("hi!");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        retrofit.mime.TypedOutput typedOutput83 = request82.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request82.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request82.headers;
        requestBuilder77.setheaders(headerList85);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder46.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder1.headers(headerList85);
        java.lang.Object[] objArray89 = null;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder88.args(objArray89);
        java.lang.Object[] objArray91 = requestBuilder88.getargs();
        requestBuilder88.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList94 = requestBuilder88.getheaders();
        requestBuilder88.setapiUrl("");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNull(objArray91);
        org.junit.Assert.assertNotNull(headerList94);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.method;
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        java.lang.String str11 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.lang.String str29 = requestBuilder28.apiUrl;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        retrofit.RequestBuilder requestBuilder86 = requestBuilder1.apiUrl("");
        requestBuilder86.apiUrl = "hi!";
        retrofit.RequestBuilder requestBuilder90 = requestBuilder86.apiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request91 = requestBuilder86.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(requestBuilder86);
        org.junit.Assert.assertNotNull(requestBuilder90);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        retrofit.converter.Converter converter20 = null;
        retrofit.RequestBuilder requestBuilder21 = new retrofit.RequestBuilder(converter20);
        retrofit.client.Header[] headerArray24 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList25 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList25, headerArray24);
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList25, typedOutput27);
        requestBuilder21.setheaders((java.util.List<retrofit.client.Header>) headerList25);
        java.util.List<retrofit.client.Header> headerList32 = null;
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "", headerList32, typedOutput33);
        java.lang.String str35 = request34.getUrl();
        retrofit.mime.TypedOutput typedOutput36 = request34.body;
        java.lang.Object[] objArray37 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder21, typedOutput36 };
        requestBuilder14.setargs(objArray37);
        retrofit.RequestBuilder requestBuilder39 = requestBuilder3.args(objArray37);
        retrofit.converter.Converter converter40 = null;
        retrofit.RequestBuilder requestBuilder41 = new retrofit.RequestBuilder(converter40);
        retrofit.converter.Converter converter42 = requestBuilder41.getconverter();
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        retrofit.client.Header[] headerArray47 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList48 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList48, headerArray47);
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList48, typedOutput50);
        requestBuilder44.setheaders((java.util.List<retrofit.client.Header>) headerList48);
        retrofit.converter.Converter converter56 = null;
        retrofit.RequestBuilder requestBuilder57 = new retrofit.RequestBuilder(converter56);
        retrofit.converter.Converter converter58 = requestBuilder57.getconverter();
        java.util.List<retrofit.client.Header> headerList59 = requestBuilder57.headers;
        requestBuilder57.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList64 = null;
        retrofit.mime.TypedOutput typedOutput65 = null;
        retrofit.client.Request request66 = new retrofit.client.Request("", "", headerList64, typedOutput65);
        java.lang.String str67 = request66.getUrl();
        java.lang.Object[] objArray68 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder57, request66 };
        requestBuilder44.setargs(objArray68);
        java.lang.Object[] objArray70 = requestBuilder44.getargs();
        retrofit.RequestBuilder requestBuilder71 = requestBuilder41.args(objArray70);
        retrofit.RequestBuilder requestBuilder72 = requestBuilder39.args(objArray70);
        retrofit.client.Header[] headerArray77 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList78 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList78, headerArray77);
        retrofit.mime.TypedOutput typedOutput80 = null;
        retrofit.client.Request request81 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList78, typedOutput80);
        retrofit.mime.TypedOutput typedOutput82 = request81.getBody();
        retrofit.mime.TypedOutput typedOutput83 = request81.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request81.body;
        java.util.List<retrofit.client.Header> headerList85 = request81.getHeaders();
        retrofit.mime.TypedOutput typedOutput86 = null;
        retrofit.client.Request request87 = new retrofit.client.Request("hi!", "hi!", headerList85, typedOutput86);
        requestBuilder39.headers = headerList85;
        retrofit.mime.TypedOutput typedOutput89 = null;
        retrofit.client.Request request90 = new retrofit.client.Request("", "", headerList85, typedOutput89);
        java.util.List<retrofit.client.Header> headerList91 = request90.headers;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertNotNull(headerArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(requestBuilder39);
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertNotNull(headerArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(converter58);
        org.junit.Assert.assertNull(headerList59);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder71);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNotNull(headerArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(typedOutput82);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(headerList91);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        java.lang.Object[] objArray35 = requestBuilder1.getargs();
        java.lang.String str36 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList37 = requestBuilder1.getheaders();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(headerList37);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        java.lang.String str8 = request4.url;
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(typedOutput10);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        java.lang.String str8 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        java.lang.String str12 = request4.getMethod();
        java.lang.Class<?> wildcardClass13 = request4.getClass();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNull(typedOutput9);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList9 = requestBuilder8.getheaders();
        retrofit.RequestBuilder requestBuilder11 = requestBuilder8.apiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request12 = requestBuilder11.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(headerList9);
        org.junit.Assert.assertNotNull(requestBuilder11);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        retrofit.mime.TypedOutput typedOutput81 = request80.getBody();
        java.util.List<retrofit.client.Header> headerList82 = request80.headers;
        java.lang.String str83 = request80.url;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNull(typedOutput81);
        org.junit.Assert.assertNotNull(headerList82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        requestBuilder37.apiUrl = "";
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput40 = requestBuilder37.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        java.lang.Object[] objArray85 = requestBuilder84.getargs();
        retrofit.RequestBuilder requestBuilder87 = requestBuilder84.apiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput88 = requestBuilder84.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertNotNull(requestBuilder87);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder13 = requestBuilder1.apiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput14 = requestBuilder13.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(requestBuilder13);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        retrofit.client.Header[] headerArray37 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList38 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList38, headerArray37);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList38, typedOutput40);
        requestBuilder34.setheaders((java.util.List<retrofit.client.Header>) headerList38);
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.converter.Converter converter48 = requestBuilder47.getconverter();
        java.util.List<retrofit.client.Header> headerList49 = requestBuilder47.headers;
        requestBuilder47.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList54 = null;
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("", "", headerList54, typedOutput55);
        java.lang.String str57 = request56.getUrl();
        java.lang.Object[] objArray58 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder47, request56 };
        requestBuilder34.setargs(objArray58);
        java.lang.Object[] objArray60 = requestBuilder34.getargs();
        retrofit.RequestBuilder requestBuilder61 = requestBuilder31.args(objArray60);
        requestBuilder61.setapiUrl("");
        retrofit.converter.Converter converter64 = requestBuilder61.getconverter();
        java.util.List<retrofit.client.Header> headerList65 = requestBuilder61.getheaders();
        java.lang.String str66 = requestBuilder61.apiUrl;
        java.lang.Object[] objArray67 = requestBuilder61.getargs();
        requestBuilder1.setargs(objArray67);
        java.lang.String str69 = requestBuilder1.getapiUrl();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNotNull(headerArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNull(headerList49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(requestBuilder61);
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertNull(headerList65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = request12.body;
        java.lang.String str14 = request12.getUrl();
        java.lang.Class<?> wildcardClass15 = request12.getClass();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.lang.Object[] objArray4 = requestBuilder3.args;
        retrofit.converter.Converter converter5 = null;
        retrofit.RequestBuilder requestBuilder6 = new retrofit.RequestBuilder(converter5);
        retrofit.converter.Converter converter7 = requestBuilder6.getconverter();
        java.util.List<retrofit.client.Header> headerList8 = requestBuilder6.headers;
        requestBuilder6.setapiUrl("hi!");
        retrofit.converter.Converter converter11 = requestBuilder6.converter;
        retrofit.RequestBuilder requestBuilder13 = requestBuilder6.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder15 = requestBuilder13.apiUrl("hi!");
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        java.util.List<retrofit.client.Header> headerList26 = requestBuilder17.getheaders();
        java.lang.String str27 = requestBuilder17.getapiUrl();
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.client.Header[] headerArray32 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList33 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList33, headerArray32);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList33, typedOutput35);
        requestBuilder29.setheaders((java.util.List<retrofit.client.Header>) headerList33);
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.converter.Converter converter43 = requestBuilder42.getconverter();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder42.headers;
        requestBuilder42.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        java.lang.String str52 = request51.getUrl();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder42, request51 };
        requestBuilder29.setargs(objArray53);
        requestBuilder29.apiUrl = "";
        retrofit.RequestBuilder requestBuilder58 = requestBuilder29.apiUrl("hi!");
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        retrofit.mime.TypedOutput typedOutput66 = request65.getBody();
        retrofit.mime.TypedOutput typedOutput67 = request65.getBody();
        java.util.List<retrofit.client.Header> headerList68 = request65.headers;
        requestBuilder60.setheaders(headerList68);
        retrofit.RequestBuilder requestBuilder70 = requestBuilder29.headers(headerList68);
        requestBuilder17.headers = headerList68;
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.url;
        java.util.List<retrofit.client.Header> headerList78 = request76.getHeaders();
        requestBuilder17.headers = headerList78;
        retrofit.RequestBuilder requestBuilder80 = requestBuilder13.headers(headerList78);
        requestBuilder3.headers = headerList78;
        retrofit.mime.TypedOutput typedOutput82 = null;
        retrofit.client.Request request83 = new retrofit.client.Request("", "", headerList78, typedOutput82);
        retrofit.mime.TypedOutput typedOutput84 = request83.getBody();
        org.junit.Assert.assertNull(objArray4);
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertNull(headerList8);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertNotNull(requestBuilder15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(headerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(headerList44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertNull(typedOutput66);
        org.junit.Assert.assertNull(typedOutput67);
        org.junit.Assert.assertNotNull(headerList68);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(headerList78);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertNull(typedOutput84);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        requestBuilder1.apiUrl = "";
        requestBuilder1.apiUrl = "";
        java.lang.String str13 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.util.List<retrofit.client.Header> headerList12 = requestBuilder3.getheaders();
        java.lang.String str13 = requestBuilder3.getapiUrl();
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.client.Header[] headerArray18 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList19 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList19, headerArray18);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput21);
        requestBuilder15.setheaders((java.util.List<retrofit.client.Header>) headerList19);
        retrofit.converter.Converter converter27 = null;
        retrofit.RequestBuilder requestBuilder28 = new retrofit.RequestBuilder(converter27);
        retrofit.converter.Converter converter29 = requestBuilder28.getconverter();
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder28.headers;
        requestBuilder28.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        java.lang.String str38 = request37.getUrl();
        java.lang.Object[] objArray39 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder28, request37 };
        requestBuilder15.setargs(objArray39);
        requestBuilder15.apiUrl = "";
        retrofit.RequestBuilder requestBuilder44 = requestBuilder15.apiUrl("hi!");
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        retrofit.mime.TypedOutput typedOutput52 = request51.getBody();
        retrofit.mime.TypedOutput typedOutput53 = request51.getBody();
        java.util.List<retrofit.client.Header> headerList54 = request51.headers;
        requestBuilder46.setheaders(headerList54);
        retrofit.RequestBuilder requestBuilder56 = requestBuilder15.headers(headerList54);
        requestBuilder3.headers = headerList54;
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("", "", headerList54, typedOutput58);
        java.util.List<retrofit.client.Header> headerList60 = request59.headers;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(headerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNull(headerList30);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNull(typedOutput52);
        org.junit.Assert.assertNull(typedOutput53);
        org.junit.Assert.assertNotNull(headerList54);
        org.junit.Assert.assertNotNull(requestBuilder56);
        org.junit.Assert.assertNotNull(headerList60);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        java.lang.String str10 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        java.lang.String str12 = request4.method;
        retrofit.mime.TypedOutput typedOutput13 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList14 = request4.headers;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNotNull(headerList14);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        java.lang.String str9 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.lang.String str11 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList9 = requestBuilder8.getheaders();
        requestBuilder8.setapiUrl("");
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.converter.Converter converter14 = requestBuilder13.getconverter();
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.client.Header[] headerArray19 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList20 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList20, headerArray19);
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList20, typedOutput22);
        requestBuilder16.setheaders((java.util.List<retrofit.client.Header>) headerList20);
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.converter.Converter converter30 = requestBuilder29.getconverter();
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder29.headers;
        requestBuilder29.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        java.lang.String str39 = request38.getUrl();
        java.lang.Object[] objArray40 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder29, request38 };
        requestBuilder16.setargs(objArray40);
        java.lang.Object[] objArray42 = requestBuilder16.getargs();
        retrofit.RequestBuilder requestBuilder43 = requestBuilder13.args(objArray42);
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder13.getheaders();
        java.util.List<retrofit.client.Header> headerList45 = null;
        retrofit.RequestBuilder requestBuilder46 = requestBuilder13.headers(headerList45);
        java.lang.Object[] objArray47 = requestBuilder13.getargs();
        requestBuilder8.args = objArray47;
        java.util.List<retrofit.client.Header> headerList49 = requestBuilder8.headers;
        java.lang.Object[] objArray50 = requestBuilder8.args;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = requestBuilder8.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(headerList9);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNotNull(headerArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(headerList31);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(requestBuilder43);
        org.junit.Assert.assertNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNull(headerList49);
        org.junit.Assert.assertNotNull(objArray50);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.lang.String str10 = request4.method;
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        java.lang.String str9 = request4.url;
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.method;
        java.lang.String str12 = request4.method;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.headers;
        java.lang.Object[] objArray30 = requestBuilder1.args;
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.client.Header[] headerArray35 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList36 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList36, headerArray35);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList36, typedOutput38);
        requestBuilder32.setheaders((java.util.List<retrofit.client.Header>) headerList36);
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.converter.Converter converter46 = requestBuilder45.getconverter();
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder45.headers;
        requestBuilder45.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList52 = null;
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("", "", headerList52, typedOutput53);
        java.lang.String str55 = request54.getUrl();
        java.lang.Object[] objArray56 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder45, request54 };
        requestBuilder32.setargs(objArray56);
        requestBuilder1.setargs(objArray56);
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter61 = requestBuilder1.getconverter();
        java.lang.String str62 = requestBuilder1.apiUrl;
        retrofit.client.Header[] headerArray65 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList66 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList66, headerArray65);
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList66, typedOutput68);
        retrofit.mime.TypedOutput typedOutput70 = request69.getBody();
        java.lang.String str71 = request69.url;
        java.lang.String str72 = request69.getUrl();
        retrofit.mime.TypedOutput typedOutput73 = request69.body;
        java.lang.String str74 = request69.url;
        java.util.List<retrofit.client.Header> headerList75 = request69.getHeaders();
        requestBuilder1.setheaders(headerList75);
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(headerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(headerList47);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(headerArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(typedOutput70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!" + "'", str72, "hi!");
        org.junit.Assert.assertNull(typedOutput73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(headerList75);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.body;
        java.lang.String str6 = request4.method;
        java.lang.String str7 = request4.method;
        java.lang.String str8 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.RequestBuilder requestBuilder75 = requestBuilder46.apiUrl("hi!");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        retrofit.mime.TypedOutput typedOutput83 = request82.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request82.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request82.headers;
        requestBuilder77.setheaders(headerList85);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder46.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder1.headers(headerList85);
        retrofit.RequestBuilder requestBuilder90 = requestBuilder1.apiUrl("hi!");
        requestBuilder90.setapiUrl("");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getMethod();
        java.lang.Class<?> wildcardClass10 = request4.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.RequestBuilder requestBuilder37 = requestBuilder35.headers(headerList36);
        retrofit.converter.Converter converter38 = requestBuilder35.converter;
        java.lang.String str39 = requestBuilder35.apiUrl;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput40 = requestBuilder35.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        requestBuilder31.setapiUrl("hi!");
        retrofit.converter.Converter converter34 = requestBuilder31.converter;
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder31.getheaders();
        java.lang.Object[] objArray36 = requestBuilder31.getargs();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput37 = requestBuilder31.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(headerList35);
        org.junit.Assert.assertNotNull(objArray36);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder10 = requestBuilder8.apiUrl("hi!");
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.client.Header[] headerArray18 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList19 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList19, headerArray18);
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList19, typedOutput21);
        requestBuilder15.setheaders((java.util.List<retrofit.client.Header>) headerList19);
        retrofit.converter.Converter converter27 = null;
        retrofit.RequestBuilder requestBuilder28 = new retrofit.RequestBuilder(converter27);
        retrofit.converter.Converter converter29 = requestBuilder28.getconverter();
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder28.headers;
        requestBuilder28.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        java.lang.String str38 = request37.getUrl();
        java.lang.Object[] objArray39 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder28, request37 };
        requestBuilder15.setargs(objArray39);
        java.lang.Object[] objArray41 = requestBuilder15.getargs();
        retrofit.RequestBuilder requestBuilder42 = requestBuilder12.args(objArray41);
        java.lang.String str43 = requestBuilder12.getapiUrl();
        java.lang.String str44 = requestBuilder12.apiUrl;
        retrofit.RequestBuilder requestBuilder46 = requestBuilder12.apiUrl("");
        java.lang.Object[] objArray47 = new java.lang.Object[] {};
        requestBuilder12.setargs(objArray47);
        java.util.List<retrofit.client.Header> headerList51 = null;
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "", headerList51, typedOutput52);
        java.lang.String str54 = request53.getUrl();
        retrofit.mime.TypedOutput typedOutput55 = request53.body;
        java.util.List<retrofit.client.Header> headerList56 = request53.getHeaders();
        java.util.List<retrofit.client.Header> headerList57 = request53.getHeaders();
        requestBuilder12.setheaders(headerList57);
        requestBuilder8.headers = headerList57;
        retrofit.converter.Converter converter60 = null;
        retrofit.RequestBuilder requestBuilder61 = new retrofit.RequestBuilder(converter60);
        retrofit.client.Header[] headerArray64 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList65 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList65, headerArray64);
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList65, typedOutput67);
        requestBuilder61.setheaders((java.util.List<retrofit.client.Header>) headerList65);
        retrofit.converter.Converter converter73 = null;
        retrofit.RequestBuilder requestBuilder74 = new retrofit.RequestBuilder(converter73);
        retrofit.converter.Converter converter75 = requestBuilder74.getconverter();
        java.util.List<retrofit.client.Header> headerList76 = requestBuilder74.headers;
        requestBuilder74.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList81 = null;
        retrofit.mime.TypedOutput typedOutput82 = null;
        retrofit.client.Request request83 = new retrofit.client.Request("", "", headerList81, typedOutput82);
        java.lang.String str84 = request83.getUrl();
        java.lang.Object[] objArray85 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder74, request83 };
        requestBuilder61.setargs(objArray85);
        java.lang.String str87 = requestBuilder61.getapiUrl();
        java.lang.Object[] objArray88 = requestBuilder61.args;
        retrofit.RequestBuilder requestBuilder89 = requestBuilder8.args(objArray88);
        java.lang.String str90 = requestBuilder8.getapiUrl();
        retrofit.converter.Converter converter91 = requestBuilder8.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str92 = requestBuilder8.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNotNull(requestBuilder10);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNotNull(headerArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNull(headerList30);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNull(typedOutput55);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(headerList57);
        org.junit.Assert.assertNotNull(headerArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(converter75);
        org.junit.Assert.assertNull(headerList76);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertNotNull(requestBuilder89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!" + "'", str90, "hi!");
        org.junit.Assert.assertNull(converter91);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.method;
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.client.Header[] headerArray11 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList12 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList12, headerArray11);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList12, typedOutput14);
        requestBuilder8.setheaders((java.util.List<retrofit.client.Header>) headerList12);
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        retrofit.mime.TypedOutput typedOutput23 = request21.body;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder8, typedOutput23 };
        requestBuilder1.setargs(objArray24);
        java.util.List<retrofit.client.Header> headerList28 = null;
        retrofit.mime.TypedOutput typedOutput29 = null;
        retrofit.client.Request request30 = new retrofit.client.Request("", "", headerList28, typedOutput29);
        retrofit.mime.TypedOutput typedOutput31 = request30.getBody();
        retrofit.mime.TypedOutput typedOutput32 = request30.getBody();
        java.lang.String str33 = request30.getUrl();
        java.util.List<retrofit.client.Header> headerList34 = request30.headers;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.headers(headerList34);
        retrofit.converter.Converter converter36 = requestBuilder35.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str37 = requestBuilder35.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNull(typedOutput31);
        org.junit.Assert.assertNull(typedOutput32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(headerList34);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNull(converter36);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.lang.String str9 = request6.method;
        java.util.List<retrofit.client.Header> headerList10 = request6.headers;
        java.lang.String str11 = request6.method;
        java.lang.String str12 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.util.List<retrofit.client.Header> headerList43 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.client.Header[] headerArray48 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList49 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList49, headerArray48);
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList49, typedOutput51);
        requestBuilder45.setheaders((java.util.List<retrofit.client.Header>) headerList49);
        retrofit.converter.Converter converter57 = null;
        retrofit.RequestBuilder requestBuilder58 = new retrofit.RequestBuilder(converter57);
        retrofit.converter.Converter converter59 = requestBuilder58.getconverter();
        java.util.List<retrofit.client.Header> headerList60 = requestBuilder58.headers;
        requestBuilder58.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList65 = null;
        retrofit.mime.TypedOutput typedOutput66 = null;
        retrofit.client.Request request67 = new retrofit.client.Request("", "", headerList65, typedOutput66);
        java.lang.String str68 = request67.getUrl();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder58, request67 };
        requestBuilder45.setargs(objArray69);
        requestBuilder45.apiUrl = "";
        retrofit.RequestBuilder requestBuilder74 = requestBuilder45.apiUrl("hi!");
        retrofit.converter.Converter converter75 = null;
        retrofit.RequestBuilder requestBuilder76 = new retrofit.RequestBuilder(converter75);
        java.util.List<retrofit.client.Header> headerList79 = null;
        retrofit.mime.TypedOutput typedOutput80 = null;
        retrofit.client.Request request81 = new retrofit.client.Request("", "", headerList79, typedOutput80);
        retrofit.mime.TypedOutput typedOutput82 = request81.getBody();
        retrofit.mime.TypedOutput typedOutput83 = request81.getBody();
        java.util.List<retrofit.client.Header> headerList84 = request81.headers;
        requestBuilder76.setheaders(headerList84);
        retrofit.RequestBuilder requestBuilder86 = requestBuilder45.headers(headerList84);
        requestBuilder1.headers = headerList84;
        java.lang.Object[] objArray88 = requestBuilder1.args;
        java.lang.Class<?> wildcardClass89 = objArray88.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(headerList43);
        org.junit.Assert.assertNotNull(headerArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(converter59);
        org.junit.Assert.assertNull(headerList60);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNull(typedOutput82);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNotNull(headerList84);
        org.junit.Assert.assertNotNull(requestBuilder86);
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList11, typedOutput13);
        java.lang.String str15 = request14.url;
        java.util.List<retrofit.client.Header> headerList16 = request14.headers;
        java.util.List<retrofit.client.Header> headerList17 = request14.headers;
        java.util.List<retrofit.client.Header> headerList18 = request14.headers;
        java.lang.String str19 = request14.getUrl();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder5 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = request12.getBody();
        retrofit.mime.TypedOutput typedOutput14 = request12.getBody();
        java.util.List<retrofit.client.Header> headerList15 = request12.headers;
        requestBuilder7.setheaders(headerList15);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        retrofit.converter.Converter converter24 = null;
        retrofit.RequestBuilder requestBuilder25 = new retrofit.RequestBuilder(converter24);
        retrofit.client.Header[] headerArray28 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList29 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList29, headerArray28);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList29, typedOutput31);
        requestBuilder25.setheaders((java.util.List<retrofit.client.Header>) headerList29);
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        java.lang.String str39 = request38.getUrl();
        retrofit.mime.TypedOutput typedOutput40 = request38.body;
        java.lang.Object[] objArray41 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder25, typedOutput40 };
        requestBuilder18.setargs(objArray41);
        retrofit.RequestBuilder requestBuilder43 = requestBuilder7.args(objArray41);
        requestBuilder1.setargs(objArray41);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(requestBuilder5);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertNotNull(headerArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(requestBuilder43);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput85 = requestBuilder84.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList8 = request6.headers;
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.lang.String str10 = request6.url;
        java.util.List<retrofit.client.Header> headerList11 = request6.headers;
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "", headerList12, typedOutput13);
        java.lang.String str15 = request14.getMethod();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        java.lang.String str35 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(headerList31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.Object[] objArray2 = requestBuilder1.args;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        java.lang.String str13 = requestBuilder4.getapiUrl();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder4.getheaders();
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder4.headers;
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder4.getheaders();
        retrofit.RequestBuilder requestBuilder17 = requestBuilder1.headers(headerList16);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request18 = requestBuilder17.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(objArray2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(requestBuilder17);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.converter;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        java.lang.String str8 = requestBuilder7.apiUrl;
        retrofit.converter.Converter converter9 = null;
        retrofit.RequestBuilder requestBuilder10 = new retrofit.RequestBuilder(converter9);
        retrofit.converter.Converter converter11 = requestBuilder10.getconverter();
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        requestBuilder13.setheaders((java.util.List<retrofit.client.Header>) headerList17);
        retrofit.converter.Converter converter25 = null;
        retrofit.RequestBuilder requestBuilder26 = new retrofit.RequestBuilder(converter25);
        retrofit.converter.Converter converter27 = requestBuilder26.getconverter();
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder26.headers;
        requestBuilder26.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder26, request35 };
        requestBuilder13.setargs(objArray37);
        java.lang.Object[] objArray39 = requestBuilder13.getargs();
        retrofit.RequestBuilder requestBuilder40 = requestBuilder10.args(objArray39);
        requestBuilder7.setargs(objArray39);
        requestBuilder1.setargs(objArray39);
        java.util.List<retrofit.client.Header> headerList43 = requestBuilder1.getheaders();
        requestBuilder1.setapiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request46 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(requestBuilder40);
        org.junit.Assert.assertNull(headerList43);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.getUrl();
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.url;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        java.lang.Object[] objArray4 = requestBuilder1.getargs();
        requestBuilder1.apiUrl = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(objArray4);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request6.body;
        java.lang.String str10 = request6.method;
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNotNull(headerList12);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        requestBuilder31.setapiUrl("hi!");
        requestBuilder31.setapiUrl("hi!");
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = requestBuilder31.headers;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList38);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.headers;
        java.lang.String str30 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter31 = requestBuilder1.converter;
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(converter32);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        java.lang.String str13 = request4.method;
        retrofit.mime.TypedOutput typedOutput14 = request4.getBody();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(typedOutput14);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.method;
        java.lang.String str8 = request6.method;
        java.lang.String str9 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput10 = request6.getBody();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(typedOutput10);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.method;
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        java.lang.String str10 = request4.method;
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        java.lang.String str13 = request4.url;
        java.lang.Class<?> wildcardClass14 = request4.getClass();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        java.lang.String str9 = request4.url;
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.getapiUrl();
        java.lang.String str37 = requestBuilder1.apiUrl;
        java.lang.String str38 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter39 = requestBuilder1.converter;
        java.util.List<retrofit.client.Header> headerList40 = requestBuilder1.headers;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request41 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(headerList40);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        java.lang.String str38 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        retrofit.converter.Converter converter41 = requestBuilder40.getconverter();
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        requestBuilder43.setheaders((java.util.List<retrofit.client.Header>) headerList47);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder56.headers;
        requestBuilder56.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder56, request65 };
        requestBuilder43.setargs(objArray67);
        java.lang.Object[] objArray69 = requestBuilder43.getargs();
        retrofit.RequestBuilder requestBuilder70 = requestBuilder40.args(objArray69);
        requestBuilder37.setargs(objArray69);
        retrofit.RequestBuilder requestBuilder72 = requestBuilder1.args(objArray69);
        retrofit.converter.Converter converter73 = requestBuilder1.getconverter();
        java.lang.String str74 = requestBuilder1.apiUrl;
        java.lang.String str75 = requestBuilder1.getapiUrl();
        java.lang.Object[] objArray76 = requestBuilder1.args;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNull(converter73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(objArray76);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        retrofit.converter.Converter converter85 = requestBuilder84.converter;
        java.lang.Object[] objArray86 = null;
        retrofit.RequestBuilder requestBuilder87 = requestBuilder84.args(objArray86);
        requestBuilder84.setapiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request90 = requestBuilder84.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(converter85);
        org.junit.Assert.assertNotNull(requestBuilder87);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.getapiUrl();
        java.lang.Object[] objArray7 = requestBuilder1.getargs();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = objArray7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(objArray7);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.method;
        java.lang.String str9 = request6.getMethod();
        java.lang.Class<?> wildcardClass10 = request6.getClass();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        java.lang.Object[] objArray85 = requestBuilder84.getargs();
        retrofit.RequestBuilder requestBuilder87 = requestBuilder84.apiUrl("");
        java.util.List<retrofit.client.Header> headerList88 = requestBuilder84.headers;
        java.lang.String str89 = requestBuilder84.apiUrl;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNull(headerList88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter29 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter32 = requestBuilder31.converter;
        java.lang.Object[] objArray33 = requestBuilder31.getargs();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNotNull(objArray33);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        requestBuilder1.apiUrl = "hi!";
        java.lang.Object[] objArray33 = requestBuilder1.getargs();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(objArray33);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder47 = requestBuilder1.apiUrl("");
        retrofit.RequestBuilder requestBuilder49 = requestBuilder47.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList50 = requestBuilder47.headers;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder47.apiUrl("hi!");
        retrofit.converter.Converter converter53 = requestBuilder52.getconverter();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(headerList50);
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNull(converter53);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList12 = null;
        requestBuilder1.setheaders(headerList12);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput14 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter29 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray32 = requestBuilder31.getargs();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = requestBuilder31.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNotNull(objArray32);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        requestBuilder1.setapiUrl("");
        java.util.List<retrofit.client.Header> headerList13 = null;
        requestBuilder1.headers = headerList13;
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.converter.Converter converter31 = requestBuilder30.getconverter();
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder30.headers;
        requestBuilder30.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        java.lang.String str40 = request39.getUrl();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder30, request39 };
        requestBuilder17.setargs(objArray41);
        requestBuilder17.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList45 = requestBuilder17.headers;
        retrofit.RequestBuilder requestBuilder47 = requestBuilder17.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        java.lang.String str78 = requestBuilder49.getapiUrl();
        java.lang.Object[] objArray79 = requestBuilder49.getargs();
        requestBuilder47.args = objArray79;
        requestBuilder1.setargs(objArray79);
        java.util.List<retrofit.client.Header> headerList82 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(headerList15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNull(headerList82);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        retrofit.converter.Converter converter85 = requestBuilder84.converter;
        requestBuilder84.setapiUrl("hi!");
        java.lang.Object[] objArray88 = null;
        retrofit.RequestBuilder requestBuilder89 = requestBuilder84.args(objArray88);
        java.lang.Class<?> wildcardClass90 = requestBuilder89.getClass();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(converter85);
        org.junit.Assert.assertNotNull(requestBuilder89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        requestBuilder1.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.url;
        java.lang.String str37 = request35.url;
        java.lang.String str38 = request35.method;
        java.util.List<retrofit.client.Header> headerList39 = request35.headers;
        requestBuilder1.headers = headerList39;
        java.util.List<retrofit.client.Header> headerList41 = requestBuilder1.getheaders();
        java.lang.Object[] objArray42 = null;
        requestBuilder1.setargs(objArray42);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput44 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertNotNull(headerList41);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        java.util.List<retrofit.client.Header> headerList38 = requestBuilder37.headers;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str39 = requestBuilder37.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNotNull(headerList38);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        java.lang.String str38 = requestBuilder37.getapiUrl();
        retrofit.converter.Converter converter39 = requestBuilder37.getconverter();
        java.lang.Object[] objArray40 = requestBuilder37.getargs();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNotNull(objArray40);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        retrofit.converter.Converter converter5 = null;
        retrofit.RequestBuilder requestBuilder6 = new retrofit.RequestBuilder(converter5);
        retrofit.client.Header[] headerArray9 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList10 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList10, headerArray9);
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList10, typedOutput12);
        requestBuilder6.setheaders((java.util.List<retrofit.client.Header>) headerList10);
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.converter.Converter converter20 = requestBuilder19.getconverter();
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder19.headers;
        requestBuilder19.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList26 = null;
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList26, typedOutput27);
        java.lang.String str29 = request28.getUrl();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder19, request28 };
        requestBuilder6.setargs(objArray30);
        java.lang.Object[] objArray32 = requestBuilder6.getargs();
        retrofit.RequestBuilder requestBuilder33 = requestBuilder3.args(objArray32);
        retrofit.converter.Converter converter34 = requestBuilder3.getconverter();
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request39.headers;
        requestBuilder3.setheaders(headerList41);
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("", "", headerList41, typedOutput43);
        java.util.List<retrofit.client.Header> headerList45 = request44.getHeaders();
        retrofit.mime.TypedOutput typedOutput46 = request44.getBody();
        java.lang.Class<?> wildcardClass47 = request44.getClass();
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(headerArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(headerList21);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(requestBuilder33);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertNull(typedOutput46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.url;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder47 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.converter.Converter converter50 = requestBuilder49.getconverter();
        retrofit.converter.Converter converter51 = null;
        retrofit.RequestBuilder requestBuilder52 = new retrofit.RequestBuilder(converter51);
        retrofit.client.Header[] headerArray55 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList56 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList56, headerArray55);
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList56, typedOutput58);
        requestBuilder52.setheaders((java.util.List<retrofit.client.Header>) headerList56);
        retrofit.converter.Converter converter64 = null;
        retrofit.RequestBuilder requestBuilder65 = new retrofit.RequestBuilder(converter64);
        retrofit.converter.Converter converter66 = requestBuilder65.getconverter();
        java.util.List<retrofit.client.Header> headerList67 = requestBuilder65.headers;
        requestBuilder65.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList72 = null;
        retrofit.mime.TypedOutput typedOutput73 = null;
        retrofit.client.Request request74 = new retrofit.client.Request("", "", headerList72, typedOutput73);
        java.lang.String str75 = request74.getUrl();
        java.lang.Object[] objArray76 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder65, request74 };
        requestBuilder52.setargs(objArray76);
        java.lang.Object[] objArray78 = requestBuilder52.getargs();
        retrofit.RequestBuilder requestBuilder79 = requestBuilder49.args(objArray78);
        java.lang.String str80 = requestBuilder49.getapiUrl();
        java.lang.String str81 = requestBuilder49.apiUrl;
        retrofit.RequestBuilder requestBuilder83 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList84 = null;
        retrofit.RequestBuilder requestBuilder85 = requestBuilder83.headers(headerList84);
        requestBuilder83.setapiUrl("");
        requestBuilder83.setapiUrl("hi!");
        java.lang.Object[] objArray90 = new java.lang.Object[] {};
        retrofit.RequestBuilder requestBuilder91 = requestBuilder83.args(objArray90);
        requestBuilder1.args = objArray90;
        java.lang.Object[] objArray93 = requestBuilder1.getargs();
        java.lang.Class<?> wildcardClass94 = objArray93.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNull(converter50);
        org.junit.Assert.assertNotNull(headerArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(converter66);
        org.junit.Assert.assertNull(headerList67);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(requestBuilder79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder85);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[]");
        org.junit.Assert.assertNotNull(requestBuilder91);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        java.lang.String str33 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter34 = null;
        retrofit.RequestBuilder requestBuilder35 = new retrofit.RequestBuilder(converter34);
        retrofit.converter.Converter converter36 = requestBuilder35.getconverter();
        java.util.List<retrofit.client.Header> headerList37 = requestBuilder35.headers;
        requestBuilder35.setapiUrl("hi!");
        retrofit.converter.Converter converter40 = requestBuilder35.converter;
        retrofit.RequestBuilder requestBuilder42 = requestBuilder35.apiUrl("hi!");
        retrofit.converter.Converter converter43 = requestBuilder35.converter;
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        java.lang.String str46 = requestBuilder45.apiUrl;
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        retrofit.converter.Converter converter49 = requestBuilder48.getconverter();
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.client.Header[] headerArray54 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList55 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList55, headerArray54);
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList55, typedOutput57);
        requestBuilder51.setheaders((java.util.List<retrofit.client.Header>) headerList55);
        retrofit.converter.Converter converter63 = null;
        retrofit.RequestBuilder requestBuilder64 = new retrofit.RequestBuilder(converter63);
        retrofit.converter.Converter converter65 = requestBuilder64.getconverter();
        java.util.List<retrofit.client.Header> headerList66 = requestBuilder64.headers;
        requestBuilder64.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList71 = null;
        retrofit.mime.TypedOutput typedOutput72 = null;
        retrofit.client.Request request73 = new retrofit.client.Request("", "", headerList71, typedOutput72);
        java.lang.String str74 = request73.getUrl();
        java.lang.Object[] objArray75 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder64, request73 };
        requestBuilder51.setargs(objArray75);
        java.lang.Object[] objArray77 = requestBuilder51.getargs();
        retrofit.RequestBuilder requestBuilder78 = requestBuilder48.args(objArray77);
        requestBuilder45.setargs(objArray77);
        requestBuilder35.setargs(objArray77);
        requestBuilder1.args = objArray77;
        java.util.List<retrofit.client.Header> headerList82 = requestBuilder1.headers;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(headerList31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNull(headerList37);
        org.junit.Assert.assertNull(converter40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(converter49);
        org.junit.Assert.assertNotNull(headerArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(converter65);
        org.junit.Assert.assertNull(headerList66);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertNotNull(requestBuilder78);
        org.junit.Assert.assertNull(headerList82);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.client.Header[] headerArray11 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList12 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList12, headerArray11);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList12, typedOutput14);
        requestBuilder8.setheaders((java.util.List<retrofit.client.Header>) headerList12);
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        retrofit.mime.TypedOutput typedOutput23 = request21.body;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder8, typedOutput23 };
        requestBuilder1.setargs(objArray24);
        retrofit.converter.Converter converter26 = null;
        retrofit.RequestBuilder requestBuilder27 = new retrofit.RequestBuilder(converter26);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = request32.getBody();
        retrofit.mime.TypedOutput typedOutput34 = request32.getBody();
        java.util.List<retrofit.client.Header> headerList35 = request32.headers;
        requestBuilder27.setheaders(headerList35);
        retrofit.converter.Converter converter37 = null;
        retrofit.RequestBuilder requestBuilder38 = new retrofit.RequestBuilder(converter37);
        retrofit.converter.Converter converter39 = requestBuilder38.getconverter();
        java.util.List<retrofit.client.Header> headerList40 = requestBuilder38.headers;
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.client.Header[] headerArray48 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList49 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList49, headerArray48);
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList49, typedOutput51);
        requestBuilder45.setheaders((java.util.List<retrofit.client.Header>) headerList49);
        java.util.List<retrofit.client.Header> headerList56 = null;
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("", "", headerList56, typedOutput57);
        java.lang.String str59 = request58.getUrl();
        retrofit.mime.TypedOutput typedOutput60 = request58.body;
        java.lang.Object[] objArray61 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder45, typedOutput60 };
        requestBuilder38.setargs(objArray61);
        retrofit.RequestBuilder requestBuilder63 = requestBuilder27.args(objArray61);
        requestBuilder1.setargs(objArray61);
        java.lang.String str65 = requestBuilder1.apiUrl;
        requestBuilder1.setapiUrl("hi!");
        java.lang.Object[] objArray68 = requestBuilder1.args;
        java.lang.Object[] objArray69 = requestBuilder1.args;
        requestBuilder1.apiUrl = "";
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNull(typedOutput33);
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(headerList40);
        org.junit.Assert.assertNotNull(headerArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(typedOutput60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(requestBuilder63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(objArray69);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder10 = requestBuilder8.apiUrl("hi!");
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.client.Header[] headerArray15 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList16 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList16, headerArray15);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList16, typedOutput18);
        requestBuilder12.setheaders((java.util.List<retrofit.client.Header>) headerList16);
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder12.getheaders();
        java.lang.String str22 = requestBuilder12.getapiUrl();
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.client.Header[] headerArray27 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList28 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList28, headerArray27);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList28, typedOutput30);
        requestBuilder24.setheaders((java.util.List<retrofit.client.Header>) headerList28);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        requestBuilder37.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList44 = null;
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("", "", headerList44, typedOutput45);
        java.lang.String str47 = request46.getUrl();
        java.lang.Object[] objArray48 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder37, request46 };
        requestBuilder24.setargs(objArray48);
        requestBuilder24.apiUrl = "";
        retrofit.RequestBuilder requestBuilder53 = requestBuilder24.apiUrl("hi!");
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        retrofit.mime.TypedOutput typedOutput61 = request60.getBody();
        retrofit.mime.TypedOutput typedOutput62 = request60.getBody();
        java.util.List<retrofit.client.Header> headerList63 = request60.headers;
        requestBuilder55.setheaders(headerList63);
        retrofit.RequestBuilder requestBuilder65 = requestBuilder24.headers(headerList63);
        requestBuilder12.headers = headerList63;
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.url;
        java.util.List<retrofit.client.Header> headerList73 = request71.getHeaders();
        requestBuilder12.headers = headerList73;
        retrofit.RequestBuilder requestBuilder75 = requestBuilder8.headers(headerList73);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput76 = requestBuilder75.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNotNull(requestBuilder10);
        org.junit.Assert.assertNotNull(headerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(headerArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(headerList39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(requestBuilder53);
        org.junit.Assert.assertNull(typedOutput61);
        org.junit.Assert.assertNull(typedOutput62);
        org.junit.Assert.assertNotNull(headerList63);
        org.junit.Assert.assertNotNull(requestBuilder65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertNotNull(requestBuilder75);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        java.lang.String str9 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.url;
        java.lang.String str12 = request4.method;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList12 = null;
        requestBuilder1.setheaders(headerList12);
        requestBuilder1.apiUrl = "hi!";
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter18 = requestBuilder1.converter;
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        retrofit.mime.TypedOutput typedOutput26 = request25.getBody();
        retrofit.mime.TypedOutput typedOutput27 = request25.getBody();
        java.util.List<retrofit.client.Header> headerList28 = request25.headers;
        requestBuilder20.setheaders(headerList28);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.client.Header[] headerArray34 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList35 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList35, headerArray34);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList35, typedOutput37);
        requestBuilder31.setheaders((java.util.List<retrofit.client.Header>) headerList35);
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        retrofit.converter.Converter converter45 = requestBuilder44.getconverter();
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder44.headers;
        requestBuilder44.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList51 = null;
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "", headerList51, typedOutput52);
        java.lang.String str54 = request53.getUrl();
        java.lang.Object[] objArray55 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder44, request53 };
        requestBuilder31.setargs(objArray55);
        requestBuilder20.args = objArray55;
        requestBuilder1.setargs(objArray55);
        requestBuilder1.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        retrofit.mime.TypedOutput typedOutput67 = request65.body;
        java.util.List<retrofit.client.Header> headerList68 = request65.getHeaders();
        java.util.List<retrofit.client.Header> headerList69 = request65.getHeaders();
        retrofit.mime.TypedOutput typedOutput70 = request65.getBody();
        java.util.List<retrofit.client.Header> headerList71 = request65.getHeaders();
        java.util.List<retrofit.client.Header> headerList72 = request65.headers;
        requestBuilder1.headers = headerList72;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(typedOutput26);
        org.junit.Assert.assertNull(typedOutput27);
        org.junit.Assert.assertNotNull(headerList28);
        org.junit.Assert.assertNotNull(headerArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(headerList46);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNull(typedOutput67);
        org.junit.Assert.assertNotNull(headerList68);
        org.junit.Assert.assertNotNull(headerList69);
        org.junit.Assert.assertNull(typedOutput70);
        org.junit.Assert.assertNotNull(headerList71);
        org.junit.Assert.assertNotNull(headerList72);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.converter.Converter converter6 = requestBuilder5.getconverter();
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder5.headers;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.client.Header[] headerArray15 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList16 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList16, headerArray15);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList16, typedOutput18);
        requestBuilder12.setheaders((java.util.List<retrofit.client.Header>) headerList16);
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        retrofit.mime.TypedOutput typedOutput27 = request25.body;
        java.lang.Object[] objArray28 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder12, typedOutput27 };
        requestBuilder5.setargs(objArray28);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        java.util.List<retrofit.client.Header> headerList34 = null;
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("", "", headerList34, typedOutput35);
        retrofit.mime.TypedOutput typedOutput37 = request36.getBody();
        retrofit.mime.TypedOutput typedOutput38 = request36.getBody();
        java.util.List<retrofit.client.Header> headerList39 = request36.headers;
        requestBuilder31.setheaders(headerList39);
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.converter.Converter converter43 = requestBuilder42.getconverter();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder42.headers;
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        java.util.List<retrofit.client.Header> headerList60 = null;
        retrofit.mime.TypedOutput typedOutput61 = null;
        retrofit.client.Request request62 = new retrofit.client.Request("", "", headerList60, typedOutput61);
        java.lang.String str63 = request62.getUrl();
        retrofit.mime.TypedOutput typedOutput64 = request62.body;
        java.lang.Object[] objArray65 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder49, typedOutput64 };
        requestBuilder42.setargs(objArray65);
        retrofit.RequestBuilder requestBuilder67 = requestBuilder31.args(objArray65);
        requestBuilder5.setargs(objArray65);
        java.lang.String str69 = requestBuilder5.apiUrl;
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder5.getheaders();
        java.util.List<retrofit.client.Header> headerList73 = null;
        retrofit.mime.TypedOutput typedOutput74 = null;
        retrofit.client.Request request75 = new retrofit.client.Request("", "", headerList73, typedOutput74);
        java.lang.String str76 = request75.url;
        java.lang.String str77 = request75.url;
        retrofit.mime.TypedOutput typedOutput78 = request75.body;
        java.util.List<retrofit.client.Header> headerList79 = request75.getHeaders();
        java.util.List<retrofit.client.Header> headerList80 = request75.headers;
        requestBuilder5.setheaders(headerList80);
        retrofit.mime.TypedOutput typedOutput82 = null;
        retrofit.client.Request request83 = new retrofit.client.Request("hi!", "hi!", headerList80, typedOutput82);
        retrofit.mime.TypedOutput typedOutput84 = null;
        retrofit.client.Request request85 = new retrofit.client.Request("hi!", "hi!", headerList80, typedOutput84);
        java.util.List<retrofit.client.Header> headerList86 = request85.headers;
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertNotNull(headerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(typedOutput27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(headerList44);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNull(typedOutput64);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertNotNull(requestBuilder67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(headerList70);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNull(typedOutput78);
        org.junit.Assert.assertNotNull(headerList79);
        org.junit.Assert.assertNotNull(headerList80);
        org.junit.Assert.assertNotNull(headerList86);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        java.lang.String str11 = request10.method;
        java.lang.Class<?> wildcardClass12 = request10.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.lang.String str10 = request6.getUrl();
        java.lang.String str11 = request6.url;
        retrofit.mime.TypedOutput typedOutput12 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "", headerList13, typedOutput14);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = request35.getBody();
        retrofit.mime.TypedOutput typedOutput37 = request35.getBody();
        java.util.List<retrofit.client.Header> headerList38 = request35.headers;
        requestBuilder30.setheaders(headerList38);
        requestBuilder1.setheaders(headerList38);
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.client.Header[] headerArray45 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList46 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList46, headerArray45);
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList46, typedOutput48);
        requestBuilder42.setheaders((java.util.List<retrofit.client.Header>) headerList46);
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        retrofit.converter.Converter converter56 = requestBuilder55.getconverter();
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder55.headers;
        requestBuilder55.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        java.lang.Object[] objArray66 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder55, request64 };
        requestBuilder42.setargs(objArray66);
        retrofit.RequestBuilder requestBuilder69 = requestBuilder42.apiUrl("");
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder42.headers;
        requestBuilder1.setheaders(headerList70);
        java.lang.String str72 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter73 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter74 = requestBuilder1.getconverter();
        java.lang.Object[] objArray75 = requestBuilder1.getargs();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNotNull(headerArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNull(headerList57);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNotNull(headerList70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNull(converter73);
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertNotNull(objArray75);
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = requestBuilder1.getconverter();
        java.lang.String str4 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder1.headers;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request6 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(headerList5);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        java.lang.String str6 = requestBuilder1.apiUrl;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput7 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        retrofit.converter.Converter converter35 = requestBuilder34.getconverter();
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        retrofit.client.Header[] headerArray43 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList44 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList44, headerArray43);
        retrofit.mime.TypedOutput typedOutput46 = null;
        retrofit.client.Request request47 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList44, typedOutput46);
        requestBuilder40.setheaders((java.util.List<retrofit.client.Header>) headerList44);
        retrofit.converter.Converter converter52 = null;
        retrofit.RequestBuilder requestBuilder53 = new retrofit.RequestBuilder(converter52);
        retrofit.converter.Converter converter54 = requestBuilder53.getconverter();
        java.util.List<retrofit.client.Header> headerList55 = requestBuilder53.headers;
        requestBuilder53.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList60 = null;
        retrofit.mime.TypedOutput typedOutput61 = null;
        retrofit.client.Request request62 = new retrofit.client.Request("", "", headerList60, typedOutput61);
        java.lang.String str63 = request62.getUrl();
        java.lang.Object[] objArray64 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder53, request62 };
        requestBuilder40.setargs(objArray64);
        java.lang.Object[] objArray66 = requestBuilder40.getargs();
        retrofit.RequestBuilder requestBuilder67 = requestBuilder37.args(objArray66);
        retrofit.converter.Converter converter68 = requestBuilder37.getconverter();
        retrofit.converter.Converter converter69 = requestBuilder37.converter;
        java.lang.Object[] objArray70 = requestBuilder37.args;
        requestBuilder34.setargs(objArray70);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNotNull(headerArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(converter54);
        org.junit.Assert.assertNull(headerList55);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(requestBuilder67);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(converter69);
        org.junit.Assert.assertNotNull(objArray70);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.getapiUrl();
        java.lang.String str37 = requestBuilder1.getapiUrl();
        requestBuilder1.setapiUrl("");
        java.lang.Class<?> wildcardClass40 = requestBuilder1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.client.Header[] headerArray35 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList36 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList36, headerArray35);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList36, typedOutput38);
        requestBuilder32.setheaders((java.util.List<retrofit.client.Header>) headerList36);
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.converter.Converter converter46 = requestBuilder45.getconverter();
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder45.headers;
        requestBuilder45.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList52 = null;
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("", "", headerList52, typedOutput53);
        java.lang.String str55 = request54.getUrl();
        java.lang.Object[] objArray56 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder45, request54 };
        requestBuilder32.setargs(objArray56);
        retrofit.RequestBuilder requestBuilder59 = requestBuilder32.apiUrl("");
        java.lang.Object[] objArray60 = requestBuilder59.getargs();
        requestBuilder30.args = objArray60;
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.RequestBuilder requestBuilder63 = requestBuilder30.headers(headerList62);
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNull(headerList47);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertNotNull(requestBuilder59);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(requestBuilder63);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder5 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray6 = requestBuilder1.getargs();
        retrofit.converter.Converter converter9 = null;
        retrofit.RequestBuilder requestBuilder10 = new retrofit.RequestBuilder(converter9);
        retrofit.client.Header[] headerArray13 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList14 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList14, headerArray13);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList14, typedOutput16);
        requestBuilder10.setheaders((java.util.List<retrofit.client.Header>) headerList14);
        retrofit.converter.Converter converter22 = null;
        retrofit.RequestBuilder requestBuilder23 = new retrofit.RequestBuilder(converter22);
        retrofit.converter.Converter converter24 = requestBuilder23.getconverter();
        java.util.List<retrofit.client.Header> headerList25 = requestBuilder23.headers;
        requestBuilder23.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        java.lang.Object[] objArray34 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder23, request32 };
        requestBuilder10.setargs(objArray34);
        requestBuilder10.apiUrl = "";
        retrofit.RequestBuilder requestBuilder39 = requestBuilder10.apiUrl("hi!");
        retrofit.converter.Converter converter40 = null;
        retrofit.RequestBuilder requestBuilder41 = new retrofit.RequestBuilder(converter40);
        java.util.List<retrofit.client.Header> headerList44 = null;
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("", "", headerList44, typedOutput45);
        retrofit.mime.TypedOutput typedOutput47 = request46.getBody();
        retrofit.mime.TypedOutput typedOutput48 = request46.getBody();
        java.util.List<retrofit.client.Header> headerList49 = request46.headers;
        requestBuilder41.setheaders(headerList49);
        retrofit.RequestBuilder requestBuilder51 = requestBuilder10.headers(headerList49);
        java.lang.Object[] objArray52 = requestBuilder10.getargs();
        retrofit.RequestBuilder requestBuilder54 = requestBuilder10.apiUrl("hi!");
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.client.Header[] headerArray59 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList60 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList60, headerArray59);
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList60, typedOutput62);
        requestBuilder56.setheaders((java.util.List<retrofit.client.Header>) headerList60);
        retrofit.converter.Converter converter68 = null;
        retrofit.RequestBuilder requestBuilder69 = new retrofit.RequestBuilder(converter68);
        retrofit.converter.Converter converter70 = requestBuilder69.getconverter();
        java.util.List<retrofit.client.Header> headerList71 = requestBuilder69.headers;
        requestBuilder69.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList76 = null;
        retrofit.mime.TypedOutput typedOutput77 = null;
        retrofit.client.Request request78 = new retrofit.client.Request("", "", headerList76, typedOutput77);
        java.lang.String str79 = request78.getUrl();
        java.lang.Object[] objArray80 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder69, request78 };
        requestBuilder56.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder56.apiUrl("");
        java.util.List<retrofit.client.Header> headerList84 = requestBuilder56.headers;
        requestBuilder10.headers = headerList84;
        retrofit.mime.TypedOutput typedOutput86 = null;
        retrofit.client.Request request87 = new retrofit.client.Request("", "hi!", headerList84, typedOutput86);
        requestBuilder1.setheaders(headerList84);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(requestBuilder5);
        org.junit.Assert.assertNull(objArray6);
        org.junit.Assert.assertNotNull(headerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(converter24);
        org.junit.Assert.assertNull(headerList25);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertNotNull(requestBuilder39);
        org.junit.Assert.assertNull(typedOutput47);
        org.junit.Assert.assertNull(typedOutput48);
        org.junit.Assert.assertNotNull(headerList49);
        org.junit.Assert.assertNotNull(requestBuilder51);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(requestBuilder54);
        org.junit.Assert.assertNotNull(headerArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(converter70);
        org.junit.Assert.assertNull(headerList71);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(headerList84);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.Class<?> wildcardClass9 = request4.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        requestBuilder1.apiUrl = "";
        java.lang.Class<?> wildcardClass30 = requestBuilder1.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.RequestBuilder requestBuilder3 = requestBuilder1.apiUrl("hi!");
        java.lang.String str4 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder6 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.converter.Converter converter9 = requestBuilder8.getconverter();
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder8.headers;
        requestBuilder8.setapiUrl("hi!");
        java.lang.String str13 = requestBuilder8.apiUrl;
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder8.headers;
        java.lang.String str15 = requestBuilder8.getapiUrl();
        java.lang.String str16 = requestBuilder8.apiUrl;
        java.lang.String str17 = requestBuilder8.apiUrl;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        java.lang.String str20 = requestBuilder19.apiUrl;
        retrofit.converter.Converter converter21 = null;
        retrofit.RequestBuilder requestBuilder22 = new retrofit.RequestBuilder(converter21);
        retrofit.converter.Converter converter23 = requestBuilder22.getconverter();
        retrofit.converter.Converter converter24 = null;
        retrofit.RequestBuilder requestBuilder25 = new retrofit.RequestBuilder(converter24);
        retrofit.client.Header[] headerArray28 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList29 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList29, headerArray28);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList29, typedOutput31);
        requestBuilder25.setheaders((java.util.List<retrofit.client.Header>) headerList29);
        retrofit.converter.Converter converter37 = null;
        retrofit.RequestBuilder requestBuilder38 = new retrofit.RequestBuilder(converter37);
        retrofit.converter.Converter converter39 = requestBuilder38.getconverter();
        java.util.List<retrofit.client.Header> headerList40 = requestBuilder38.headers;
        requestBuilder38.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList45 = null;
        retrofit.mime.TypedOutput typedOutput46 = null;
        retrofit.client.Request request47 = new retrofit.client.Request("", "", headerList45, typedOutput46);
        java.lang.String str48 = request47.getUrl();
        java.lang.Object[] objArray49 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder38, request47 };
        requestBuilder25.setargs(objArray49);
        java.lang.Object[] objArray51 = requestBuilder25.getargs();
        retrofit.RequestBuilder requestBuilder52 = requestBuilder22.args(objArray51);
        requestBuilder19.setargs(objArray51);
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        java.lang.String str56 = requestBuilder55.apiUrl;
        retrofit.converter.Converter converter57 = null;
        retrofit.RequestBuilder requestBuilder58 = new retrofit.RequestBuilder(converter57);
        retrofit.converter.Converter converter59 = requestBuilder58.getconverter();
        retrofit.converter.Converter converter60 = null;
        retrofit.RequestBuilder requestBuilder61 = new retrofit.RequestBuilder(converter60);
        retrofit.client.Header[] headerArray64 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList65 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList65, headerArray64);
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList65, typedOutput67);
        requestBuilder61.setheaders((java.util.List<retrofit.client.Header>) headerList65);
        retrofit.converter.Converter converter73 = null;
        retrofit.RequestBuilder requestBuilder74 = new retrofit.RequestBuilder(converter73);
        retrofit.converter.Converter converter75 = requestBuilder74.getconverter();
        java.util.List<retrofit.client.Header> headerList76 = requestBuilder74.headers;
        requestBuilder74.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList81 = null;
        retrofit.mime.TypedOutput typedOutput82 = null;
        retrofit.client.Request request83 = new retrofit.client.Request("", "", headerList81, typedOutput82);
        java.lang.String str84 = request83.getUrl();
        java.lang.Object[] objArray85 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder74, request83 };
        requestBuilder61.setargs(objArray85);
        java.lang.Object[] objArray87 = requestBuilder61.getargs();
        retrofit.RequestBuilder requestBuilder88 = requestBuilder58.args(objArray87);
        requestBuilder55.setargs(objArray87);
        retrofit.RequestBuilder requestBuilder90 = requestBuilder19.args(objArray87);
        retrofit.RequestBuilder requestBuilder91 = requestBuilder8.args(objArray87);
        requestBuilder1.setargs(objArray87);
        java.lang.String str93 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNotNull(requestBuilder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder6);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(headerList10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNotNull(headerArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(headerList40);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(converter59);
        org.junit.Assert.assertNotNull(headerArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(converter75);
        org.junit.Assert.assertNull(headerList76);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNotNull(requestBuilder91);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!" + "'", str93, "hi!");
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = request35.getBody();
        retrofit.mime.TypedOutput typedOutput37 = request35.getBody();
        java.util.List<retrofit.client.Header> headerList38 = request35.headers;
        requestBuilder30.setheaders(headerList38);
        retrofit.converter.Converter converter40 = null;
        retrofit.RequestBuilder requestBuilder41 = new retrofit.RequestBuilder(converter40);
        retrofit.converter.Converter converter42 = requestBuilder41.getconverter();
        java.util.List<retrofit.client.Header> headerList43 = requestBuilder41.headers;
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        retrofit.client.Header[] headerArray51 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList52 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList52, headerArray51);
        retrofit.mime.TypedOutput typedOutput54 = null;
        retrofit.client.Request request55 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList52, typedOutput54);
        requestBuilder48.setheaders((java.util.List<retrofit.client.Header>) headerList52);
        java.util.List<retrofit.client.Header> headerList59 = null;
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("", "", headerList59, typedOutput60);
        java.lang.String str62 = request61.getUrl();
        retrofit.mime.TypedOutput typedOutput63 = request61.body;
        java.lang.Object[] objArray64 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder48, typedOutput63 };
        requestBuilder41.setargs(objArray64);
        retrofit.RequestBuilder requestBuilder66 = requestBuilder30.args(objArray64);
        java.util.List<retrofit.client.Header> headerList67 = requestBuilder66.headers;
        requestBuilder1.headers = headerList67;
        requestBuilder1.setapiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request71 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertNull(headerList43);
        org.junit.Assert.assertNotNull(headerArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNull(typedOutput63);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertNotNull(requestBuilder66);
        org.junit.Assert.assertNotNull(headerList67);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        requestBuilder1.apiUrl = "hi!";
        java.util.List<retrofit.client.Header> headerList40 = requestBuilder1.getheaders();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNotNull(headerList40);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.lang.String str9 = request4.url;
        java.lang.Class<?> wildcardClass10 = request4.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList6 = request4.headers;
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        java.lang.Object[] objArray31 = requestBuilder1.args;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request32 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNotNull(objArray31);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.lang.String str13 = request12.url;
        java.util.List<retrofit.client.Header> headerList14 = request12.headers;
        java.lang.String str15 = request12.getUrl();
        java.lang.String str16 = request12.url;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.method;
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        java.lang.String str12 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput13 = request6.body;
        java.lang.String str14 = request6.url;
        java.util.List<retrofit.client.Header> headerList15 = request6.getHeaders();
        java.lang.String str16 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput17 = request6.body;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNull(typedOutput17);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("hi!", "hi!", headerList46, typedOutput47);
        retrofit.mime.TypedOutput typedOutput49 = request48.body;
        retrofit.mime.TypedOutput typedOutput50 = request48.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request48.headers;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNull(typedOutput49);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.getMethod();
        java.lang.String str9 = request4.url;
        java.lang.String str10 = request4.getMethod();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.method;
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput13 = request4.body;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNull(typedOutput13);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        requestBuilder47.setheaders((java.util.List<retrofit.client.Header>) headerList51);
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.converter.Converter converter61 = requestBuilder60.getconverter();
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder60.headers;
        requestBuilder60.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList67 = null;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "", headerList67, typedOutput68);
        java.lang.String str70 = request69.getUrl();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder60, request69 };
        requestBuilder47.setargs(objArray71);
        retrofit.RequestBuilder requestBuilder74 = requestBuilder47.apiUrl("");
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder47.headers;
        requestBuilder1.headers = headerList75;
        requestBuilder1.apiUrl = "hi!";
        retrofit.RequestBuilder requestBuilder80 = requestBuilder1.apiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str81 = requestBuilder80.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(headerList62);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertNotNull(requestBuilder80);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        requestBuilder1.apiUrl = "";
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request36 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        retrofit.converter.Converter converter35 = requestBuilder34.getconverter();
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.client.Header[] headerArray40 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList41 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList41, headerArray40);
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList41, typedOutput43);
        requestBuilder37.setheaders((java.util.List<retrofit.client.Header>) headerList41);
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        retrofit.converter.Converter converter51 = requestBuilder50.getconverter();
        java.util.List<retrofit.client.Header> headerList52 = requestBuilder50.headers;
        requestBuilder50.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList57 = null;
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("", "", headerList57, typedOutput58);
        java.lang.String str60 = request59.getUrl();
        java.lang.Object[] objArray61 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder50, request59 };
        requestBuilder37.setargs(objArray61);
        requestBuilder37.apiUrl = "";
        retrofit.RequestBuilder requestBuilder66 = requestBuilder37.apiUrl("hi!");
        retrofit.converter.Converter converter67 = null;
        retrofit.RequestBuilder requestBuilder68 = new retrofit.RequestBuilder(converter67);
        java.util.List<retrofit.client.Header> headerList71 = null;
        retrofit.mime.TypedOutput typedOutput72 = null;
        retrofit.client.Request request73 = new retrofit.client.Request("", "", headerList71, typedOutput72);
        retrofit.mime.TypedOutput typedOutput74 = request73.getBody();
        retrofit.mime.TypedOutput typedOutput75 = request73.getBody();
        java.util.List<retrofit.client.Header> headerList76 = request73.headers;
        requestBuilder68.setheaders(headerList76);
        retrofit.RequestBuilder requestBuilder78 = requestBuilder37.headers(headerList76);
        java.lang.Object[] objArray79 = requestBuilder37.getargs();
        retrofit.RequestBuilder requestBuilder80 = requestBuilder34.args(objArray79);
        requestBuilder34.apiUrl = "";
        java.lang.String str83 = requestBuilder34.getapiUrl();
        java.lang.String str84 = requestBuilder34.apiUrl;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput85 = requestBuilder34.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNotNull(headerArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(converter51);
        org.junit.Assert.assertNull(headerList52);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(requestBuilder66);
        org.junit.Assert.assertNull(typedOutput74);
        org.junit.Assert.assertNull(typedOutput75);
        org.junit.Assert.assertNotNull(headerList76);
        org.junit.Assert.assertNotNull(requestBuilder78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.lang.String str8 = request6.url;
        retrofit.mime.TypedOutput typedOutput9 = request6.body;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.method;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        retrofit.converter.Converter converter38 = null;
        retrofit.RequestBuilder requestBuilder39 = new retrofit.RequestBuilder(converter38);
        retrofit.converter.Converter converter40 = requestBuilder39.getconverter();
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.client.Header[] headerArray45 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList46 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList46, headerArray45);
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList46, typedOutput48);
        requestBuilder42.setheaders((java.util.List<retrofit.client.Header>) headerList46);
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        retrofit.converter.Converter converter56 = requestBuilder55.getconverter();
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder55.headers;
        requestBuilder55.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        java.lang.Object[] objArray66 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder55, request64 };
        requestBuilder42.setargs(objArray66);
        java.lang.Object[] objArray68 = requestBuilder42.getargs();
        retrofit.RequestBuilder requestBuilder69 = requestBuilder39.args(objArray68);
        retrofit.RequestBuilder requestBuilder70 = requestBuilder37.args(objArray68);
        retrofit.converter.Converter converter71 = requestBuilder70.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request72 = requestBuilder70.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(converter40);
        org.junit.Assert.assertNotNull(headerArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNull(headerList57);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNull(converter71);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter7 = requestBuilder1.getconverter();
        java.lang.String str8 = requestBuilder1.apiUrl;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput9 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(converter7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        retrofit.RequestBuilder requestBuilder86 = requestBuilder84.apiUrl("");
        java.lang.Class<?> wildcardClass87 = requestBuilder86.getClass();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(requestBuilder86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.util.List<retrofit.client.Header> headerList5 = request4.getHeaders();
        java.lang.String str6 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        org.junit.Assert.assertNotNull(headerList5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(typedOutput7);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter8 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder10 = requestBuilder1.apiUrl("hi!");
        java.lang.String str11 = requestBuilder10.apiUrl;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(converter8);
        org.junit.Assert.assertNotNull(requestBuilder10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        java.lang.Object[] objArray31 = requestBuilder5.getargs();
        java.lang.String str32 = requestBuilder5.apiUrl;
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        java.lang.String str38 = request37.getUrl();
        retrofit.mime.TypedOutput typedOutput39 = request37.body;
        java.util.List<retrofit.client.Header> headerList40 = request37.getHeaders();
        requestBuilder5.setheaders(headerList40);
        retrofit.mime.TypedOutput typedOutput42 = null;
        retrofit.client.Request request43 = new retrofit.client.Request("hi!", "hi!", headerList40, typedOutput42);
        java.util.List<retrofit.client.Header> headerList44 = request43.headers;
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("hi!", "hi!", headerList44, typedOutput45);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(headerList44);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = request35.getBody();
        retrofit.mime.TypedOutput typedOutput37 = request35.getBody();
        java.util.List<retrofit.client.Header> headerList38 = request35.headers;
        requestBuilder30.setheaders(headerList38);
        requestBuilder1.setheaders(headerList38);
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList43 = null;
        requestBuilder1.headers = headerList43;
        retrofit.RequestBuilder requestBuilder46 = requestBuilder1.apiUrl("hi!");
        java.lang.String str47 = requestBuilder46.getapiUrl();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.method;
        java.lang.String str37 = request33.method;
        java.util.List<retrofit.client.Header> headerList38 = request33.headers;
        retrofit.mime.TypedOutput typedOutput39 = request33.body;
        java.lang.String str40 = request33.getMethod();
        retrofit.mime.TypedOutput typedOutput41 = request33.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(typedOutput41);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.method;
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getMethod();
        java.lang.String str10 = request4.getUrl();
        java.lang.String str11 = request4.url;
        java.lang.Class<?> wildcardClass12 = request4.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.RequestBuilder requestBuilder75 = requestBuilder46.apiUrl("hi!");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        retrofit.mime.TypedOutput typedOutput83 = request82.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request82.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request82.headers;
        requestBuilder77.setheaders(headerList85);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder46.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder1.headers(headerList85);
        java.lang.Object[] objArray89 = null;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder88.args(objArray89);
        java.lang.String str91 = requestBuilder90.apiUrl;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "hi!" + "'", str91, "hi!");
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        requestBuilder1.setapiUrl("");
        retrofit.RequestBuilder requestBuilder14 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder1.getheaders();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.lang.String str9 = request6.getMethod();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.String str27 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder29 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.lang.String str35 = requestBuilder34.apiUrl;
        java.util.List<retrofit.client.Header> headerList36 = requestBuilder34.headers;
        retrofit.converter.Converter converter37 = null;
        retrofit.RequestBuilder requestBuilder38 = new retrofit.RequestBuilder(converter37);
        retrofit.client.Header[] headerArray41 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList42 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList42, headerArray41);
        retrofit.mime.TypedOutput typedOutput44 = null;
        retrofit.client.Request request45 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList42, typedOutput44);
        requestBuilder38.setheaders((java.util.List<retrofit.client.Header>) headerList42);
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        java.util.List<retrofit.client.Header> headerList53 = requestBuilder51.headers;
        requestBuilder51.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        java.lang.String str61 = request60.getUrl();
        java.lang.Object[] objArray62 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder51, request60 };
        requestBuilder38.setargs(objArray62);
        requestBuilder38.apiUrl = "";
        retrofit.RequestBuilder requestBuilder67 = requestBuilder38.apiUrl("hi!");
        retrofit.converter.Converter converter68 = null;
        retrofit.RequestBuilder requestBuilder69 = new retrofit.RequestBuilder(converter68);
        java.util.List<retrofit.client.Header> headerList72 = null;
        retrofit.mime.TypedOutput typedOutput73 = null;
        retrofit.client.Request request74 = new retrofit.client.Request("", "", headerList72, typedOutput73);
        retrofit.mime.TypedOutput typedOutput75 = request74.getBody();
        retrofit.mime.TypedOutput typedOutput76 = request74.getBody();
        java.util.List<retrofit.client.Header> headerList77 = request74.headers;
        requestBuilder69.setheaders(headerList77);
        retrofit.RequestBuilder requestBuilder79 = requestBuilder38.headers(headerList77);
        java.lang.Object[] objArray80 = requestBuilder38.getargs();
        retrofit.RequestBuilder requestBuilder82 = requestBuilder38.apiUrl("hi!");
        java.lang.Object[] objArray83 = new java.lang.Object[] {};
        requestBuilder38.args = objArray83;
        retrofit.RequestBuilder requestBuilder85 = requestBuilder34.args(objArray83);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder85.apiUrl("");
        retrofit.RequestBuilder requestBuilder89 = requestBuilder85.apiUrl("hi!");
        java.lang.Object[] objArray90 = requestBuilder89.args;
        retrofit.RequestBuilder requestBuilder91 = requestBuilder1.args(objArray90);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput92 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(requestBuilder29);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(headerList36);
        org.junit.Assert.assertNotNull(headerArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNull(headerList53);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertNotNull(requestBuilder67);
        org.junit.Assert.assertNull(typedOutput75);
        org.junit.Assert.assertNull(typedOutput76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertNotNull(requestBuilder79);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder82);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertNotNull(requestBuilder85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder89);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[]");
        org.junit.Assert.assertNotNull(requestBuilder91);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        java.lang.String str9 = request8.url;
        java.util.List<retrofit.client.Header> headerList10 = request8.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = request8.body;
        java.util.List<retrofit.client.Header> headerList13 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "hi!", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "", headerList13, typedOutput16);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList11, typedOutput13);
        java.lang.String str15 = request14.url;
        retrofit.mime.TypedOutput typedOutput16 = request14.body;
        retrofit.mime.TypedOutput typedOutput17 = request14.body;
        java.lang.String str18 = request14.url;
        java.util.List<retrofit.client.Header> headerList19 = request14.headers;
        java.lang.String str20 = request14.getMethod();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        java.lang.String str14 = requestBuilder5.getapiUrl();
        retrofit.RequestBuilder requestBuilder16 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.url;
        java.util.List<retrofit.client.Header> headerList23 = request21.getHeaders();
        java.util.List<retrofit.client.Header> headerList24 = request21.getHeaders();
        requestBuilder5.headers = headerList24;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList24, typedOutput26);
        java.lang.String str28 = request27.getMethod();
        retrofit.mime.TypedOutput typedOutput29 = request27.getBody();
        java.util.List<retrofit.client.Header> headerList30 = request27.getHeaders();
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "hi!", headerList30, typedOutput31);
        java.util.List<retrofit.client.Header> headerList33 = request32.getHeaders();
        java.lang.Class<?> wildcardClass34 = headerList33.getClass();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(requestBuilder16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(typedOutput29);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        java.lang.String str10 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        java.lang.Class<?> wildcardClass12 = request4.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "hi!", headerList15, typedOutput16);
        java.util.List<retrofit.client.Header> headerList18 = request17.getHeaders();
        java.lang.String str19 = request17.method;
        java.lang.String str20 = request17.getMethod();
        retrofit.mime.TypedOutput typedOutput21 = request17.getBody();
        retrofit.mime.TypedOutput typedOutput22 = request17.body;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(typedOutput21);
        org.junit.Assert.assertNull(typedOutput22);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter9 = requestBuilder1.converter;
        java.lang.Object[] objArray10 = requestBuilder1.getargs();
        java.lang.Object[] objArray11 = requestBuilder1.getargs();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(objArray10);
        org.junit.Assert.assertNull(objArray11);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request6.getBody();
        java.lang.String str11 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        java.lang.String str8 = request4.url;
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        java.lang.String str12 = request4.url;
        retrofit.mime.TypedOutput typedOutput13 = request4.body;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        java.util.List<retrofit.client.Header> headerList9 = request8.getHeaders();
        java.lang.String str10 = request8.url;
        java.lang.String str11 = request8.url;
        java.lang.String str12 = request8.method;
        retrofit.mime.TypedOutput typedOutput13 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList14 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", headerList14, typedOutput15);
        java.util.List<retrofit.client.Header> headerList17 = request16.headers;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList17);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray29 = requestBuilder28.getargs();
        retrofit.converter.Converter converter30 = requestBuilder28.converter;
        retrofit.converter.Converter converter31 = requestBuilder28.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput32 = requestBuilder28.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(converter31);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.url;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.getUrl();
        java.lang.String str12 = request4.url;
        java.util.List<retrofit.client.Header> headerList13 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        retrofit.mime.TypedOutput typedOutput9 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList10 = request6.headers;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "", headerList10, typedOutput11);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter8 = requestBuilder1.converter;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertNull(converter8);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter9 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("hi!");
        java.lang.Object[] objArray12 = null;
        requestBuilder1.args = objArray12;
        java.lang.Class<?> wildcardClass14 = requestBuilder1.getClass();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request4.headers;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.client.Header[] headerArray15 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList16 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList16, headerArray15);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList16, typedOutput18);
        requestBuilder12.setheaders((java.util.List<retrofit.client.Header>) headerList16);
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder12.getheaders();
        java.lang.String str22 = requestBuilder12.getapiUrl();
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.client.Header[] headerArray27 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList28 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList28, headerArray27);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList28, typedOutput30);
        requestBuilder24.setheaders((java.util.List<retrofit.client.Header>) headerList28);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        requestBuilder37.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList44 = null;
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("", "", headerList44, typedOutput45);
        java.lang.String str47 = request46.getUrl();
        java.lang.Object[] objArray48 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder37, request46 };
        requestBuilder24.setargs(objArray48);
        requestBuilder24.apiUrl = "";
        retrofit.RequestBuilder requestBuilder53 = requestBuilder24.apiUrl("hi!");
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        retrofit.mime.TypedOutput typedOutput61 = request60.getBody();
        retrofit.mime.TypedOutput typedOutput62 = request60.getBody();
        java.util.List<retrofit.client.Header> headerList63 = request60.headers;
        requestBuilder55.setheaders(headerList63);
        retrofit.RequestBuilder requestBuilder65 = requestBuilder24.headers(headerList63);
        requestBuilder12.headers = headerList63;
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.url;
        java.util.List<retrofit.client.Header> headerList73 = request71.getHeaders();
        requestBuilder12.headers = headerList73;
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder12.headers;
        requestBuilder1.setheaders(headerList75);
        retrofit.converter.Converter converter77 = requestBuilder1.getconverter();
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(headerArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(headerList39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(requestBuilder53);
        org.junit.Assert.assertNull(typedOutput61);
        org.junit.Assert.assertNull(typedOutput62);
        org.junit.Assert.assertNotNull(headerList63);
        org.junit.Assert.assertNotNull(requestBuilder65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertNull(converter77);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.Object[] objArray2 = requestBuilder1.args;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        java.lang.String str13 = requestBuilder4.getapiUrl();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder4.getheaders();
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder4.headers;
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder4.getheaders();
        retrofit.RequestBuilder requestBuilder17 = requestBuilder1.headers(headerList16);
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.converter.Converter converter20 = requestBuilder19.getconverter();
        retrofit.converter.Converter converter21 = null;
        retrofit.RequestBuilder requestBuilder22 = new retrofit.RequestBuilder(converter21);
        retrofit.client.Header[] headerArray25 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList26 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList26, headerArray25);
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList26, typedOutput28);
        requestBuilder22.setheaders((java.util.List<retrofit.client.Header>) headerList26);
        retrofit.converter.Converter converter34 = null;
        retrofit.RequestBuilder requestBuilder35 = new retrofit.RequestBuilder(converter34);
        retrofit.converter.Converter converter36 = requestBuilder35.getconverter();
        java.util.List<retrofit.client.Header> headerList37 = requestBuilder35.headers;
        requestBuilder35.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList42 = null;
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("", "", headerList42, typedOutput43);
        java.lang.String str45 = request44.getUrl();
        java.lang.Object[] objArray46 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder35, request44 };
        requestBuilder22.setargs(objArray46);
        java.lang.Object[] objArray48 = requestBuilder22.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder19.args(objArray48);
        java.lang.String str50 = requestBuilder19.getapiUrl();
        java.lang.String str51 = requestBuilder19.apiUrl;
        retrofit.RequestBuilder requestBuilder53 = requestBuilder19.apiUrl("");
        java.util.List<retrofit.client.Header> headerList54 = null;
        retrofit.RequestBuilder requestBuilder55 = requestBuilder53.headers(headerList54);
        retrofit.converter.Converter converter56 = null;
        retrofit.RequestBuilder requestBuilder57 = new retrofit.RequestBuilder(converter56);
        java.util.List<retrofit.client.Header> headerList60 = null;
        retrofit.mime.TypedOutput typedOutput61 = null;
        retrofit.client.Request request62 = new retrofit.client.Request("", "", headerList60, typedOutput61);
        retrofit.mime.TypedOutput typedOutput63 = request62.getBody();
        retrofit.mime.TypedOutput typedOutput64 = request62.getBody();
        java.util.List<retrofit.client.Header> headerList65 = request62.headers;
        requestBuilder57.setheaders(headerList65);
        retrofit.converter.Converter converter67 = null;
        retrofit.RequestBuilder requestBuilder68 = new retrofit.RequestBuilder(converter67);
        retrofit.converter.Converter converter69 = requestBuilder68.getconverter();
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder68.headers;
        retrofit.converter.Converter converter74 = null;
        retrofit.RequestBuilder requestBuilder75 = new retrofit.RequestBuilder(converter74);
        retrofit.client.Header[] headerArray78 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList79 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList79, headerArray78);
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList79, typedOutput81);
        requestBuilder75.setheaders((java.util.List<retrofit.client.Header>) headerList79);
        java.util.List<retrofit.client.Header> headerList86 = null;
        retrofit.mime.TypedOutput typedOutput87 = null;
        retrofit.client.Request request88 = new retrofit.client.Request("", "", headerList86, typedOutput87);
        java.lang.String str89 = request88.getUrl();
        retrofit.mime.TypedOutput typedOutput90 = request88.body;
        java.lang.Object[] objArray91 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder75, typedOutput90 };
        requestBuilder68.setargs(objArray91);
        retrofit.RequestBuilder requestBuilder93 = requestBuilder57.args(objArray91);
        requestBuilder53.setargs(objArray91);
        retrofit.RequestBuilder requestBuilder95 = requestBuilder1.args(objArray91);
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNull(objArray2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(requestBuilder17);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNotNull(headerArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNull(headerList37);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(requestBuilder53);
        org.junit.Assert.assertNotNull(requestBuilder55);
        org.junit.Assert.assertNull(typedOutput63);
        org.junit.Assert.assertNull(typedOutput64);
        org.junit.Assert.assertNotNull(headerList65);
        org.junit.Assert.assertNull(converter69);
        org.junit.Assert.assertNull(headerList70);
        org.junit.Assert.assertNotNull(headerArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNull(typedOutput90);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertNotNull(requestBuilder93);
        org.junit.Assert.assertNotNull(requestBuilder95);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.method;
        java.lang.String str9 = request4.method;
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        java.lang.String str12 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.RequestBuilder requestBuilder75 = requestBuilder46.apiUrl("hi!");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        retrofit.mime.TypedOutput typedOutput83 = request82.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request82.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request82.headers;
        requestBuilder77.setheaders(headerList85);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder46.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder1.headers(headerList85);
        java.lang.Object[] objArray89 = null;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder88.args(objArray89);
        java.util.List<retrofit.client.Header> headerList91 = requestBuilder90.getheaders();
        requestBuilder90.setapiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request94 = requestBuilder90.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNotNull(headerList91);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList11 = request4.headers;
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        java.lang.String str13 = request4.getMethod();
        java.lang.String str14 = request4.url;
        java.lang.String str15 = request4.url;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.body;
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.lang.Class<?> wildcardClass13 = request12.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("hi!", "hi!", headerList46, typedOutput47);
        retrofit.mime.TypedOutput typedOutput49 = request48.body;
        java.util.List<retrofit.client.Header> headerList50 = request48.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNull(typedOutput49);
        org.junit.Assert.assertNotNull(headerList50);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.lang.String str10 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.method;
        java.util.List<retrofit.client.Header> headerList13 = request4.getHeaders();
        java.lang.String str14 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.method;
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        java.lang.String str13 = request4.method;
        java.lang.String str14 = request4.method;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        java.lang.Object[] objArray4 = requestBuilder1.getargs();
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.converter.Converter converter9 = requestBuilder8.getconverter();
        retrofit.converter.Converter converter10 = null;
        retrofit.RequestBuilder requestBuilder11 = new retrofit.RequestBuilder(converter10);
        retrofit.client.Header[] headerArray14 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList15 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList15, headerArray14);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList15, typedOutput17);
        requestBuilder11.setheaders((java.util.List<retrofit.client.Header>) headerList15);
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.converter.Converter converter25 = requestBuilder24.getconverter();
        java.util.List<retrofit.client.Header> headerList26 = requestBuilder24.headers;
        requestBuilder24.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList31 = null;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.getUrl();
        java.lang.Object[] objArray35 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder24, request33 };
        requestBuilder11.setargs(objArray35);
        java.lang.Object[] objArray37 = requestBuilder11.getargs();
        retrofit.RequestBuilder requestBuilder38 = requestBuilder8.args(objArray37);
        requestBuilder38.setapiUrl("");
        retrofit.converter.Converter converter41 = requestBuilder38.getconverter();
        java.util.List<retrofit.client.Header> headerList42 = requestBuilder38.getheaders();
        java.lang.String str43 = requestBuilder38.apiUrl;
        java.lang.Object[] objArray44 = requestBuilder38.getargs();
        requestBuilder1.setargs(objArray44);
        retrofit.RequestBuilder requestBuilder47 = requestBuilder1.apiUrl("hi!");
        java.lang.Class<?> wildcardClass48 = requestBuilder1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(objArray4);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNotNull(headerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(converter25);
        org.junit.Assert.assertNull(headerList26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(requestBuilder38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNull(headerList42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        retrofit.RequestBuilder requestBuilder34 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder7.headers;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", headerList35, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", headerList35, typedOutput40);
        java.lang.String str42 = request41.method;
        java.lang.String str43 = request41.getUrl();
        java.lang.String str44 = request41.getMethod();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.method;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray36 = new java.lang.Object[] {};
        requestBuilder1.setargs(objArray36);
        java.util.List<retrofit.client.Header> headerList40 = null;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList40, typedOutput41);
        java.lang.String str43 = request42.getUrl();
        retrofit.mime.TypedOutput typedOutput44 = request42.body;
        java.util.List<retrofit.client.Header> headerList45 = request42.getHeaders();
        java.util.List<retrofit.client.Header> headerList46 = request42.getHeaders();
        requestBuilder1.setheaders(headerList46);
        java.util.List<retrofit.client.Header> headerList48 = requestBuilder1.getheaders();
        retrofit.RequestBuilder requestBuilder50 = requestBuilder1.apiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request51 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(typedOutput44);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNotNull(headerList48);
        org.junit.Assert.assertNotNull(requestBuilder50);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter29 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray32 = requestBuilder1.args;
        java.lang.String str33 = requestBuilder1.getapiUrl();
        requestBuilder1.setapiUrl("");
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.apiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request38 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(requestBuilder37);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.getMethod();
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        retrofit.mime.TypedOutput typedOutput36 = request33.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertNull(typedOutput36);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        java.lang.Object[] objArray31 = requestBuilder1.args;
        java.lang.String str32 = requestBuilder1.apiUrl;
        java.lang.Class<?> wildcardClass33 = requestBuilder1.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = request12.body;
        java.lang.String str14 = request12.method;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        java.lang.Object[] objArray35 = requestBuilder1.getargs();
        java.lang.Object[] objArray36 = requestBuilder1.getargs();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput37 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(objArray36);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNotNull(requestBuilder34);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = request35.getBody();
        retrofit.mime.TypedOutput typedOutput37 = request35.getBody();
        java.util.List<retrofit.client.Header> headerList38 = request35.headers;
        requestBuilder30.setheaders(headerList38);
        retrofit.converter.Converter converter40 = null;
        retrofit.RequestBuilder requestBuilder41 = new retrofit.RequestBuilder(converter40);
        retrofit.converter.Converter converter42 = requestBuilder41.getconverter();
        java.util.List<retrofit.client.Header> headerList43 = requestBuilder41.headers;
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        retrofit.client.Header[] headerArray51 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList52 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList52, headerArray51);
        retrofit.mime.TypedOutput typedOutput54 = null;
        retrofit.client.Request request55 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList52, typedOutput54);
        requestBuilder48.setheaders((java.util.List<retrofit.client.Header>) headerList52);
        java.util.List<retrofit.client.Header> headerList59 = null;
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("", "", headerList59, typedOutput60);
        java.lang.String str62 = request61.getUrl();
        retrofit.mime.TypedOutput typedOutput63 = request61.body;
        java.lang.Object[] objArray64 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder48, typedOutput63 };
        requestBuilder41.setargs(objArray64);
        retrofit.RequestBuilder requestBuilder66 = requestBuilder30.args(objArray64);
        java.util.List<retrofit.client.Header> headerList67 = requestBuilder66.headers;
        requestBuilder1.headers = headerList67;
        java.lang.Object[] objArray69 = requestBuilder1.args;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter72 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter73 = requestBuilder1.getconverter();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertNull(headerList43);
        org.junit.Assert.assertNotNull(headerArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNull(typedOutput63);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertNotNull(requestBuilder66);
        org.junit.Assert.assertNotNull(headerList67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNull(converter72);
        org.junit.Assert.assertNull(converter73);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = request35.getBody();
        retrofit.mime.TypedOutput typedOutput37 = request35.getBody();
        java.util.List<retrofit.client.Header> headerList38 = request35.headers;
        requestBuilder30.setheaders(headerList38);
        retrofit.converter.Converter converter40 = null;
        retrofit.RequestBuilder requestBuilder41 = new retrofit.RequestBuilder(converter40);
        retrofit.converter.Converter converter42 = requestBuilder41.getconverter();
        java.util.List<retrofit.client.Header> headerList43 = requestBuilder41.headers;
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        retrofit.client.Header[] headerArray51 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList52 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList52, headerArray51);
        retrofit.mime.TypedOutput typedOutput54 = null;
        retrofit.client.Request request55 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList52, typedOutput54);
        requestBuilder48.setheaders((java.util.List<retrofit.client.Header>) headerList52);
        java.util.List<retrofit.client.Header> headerList59 = null;
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("", "", headerList59, typedOutput60);
        java.lang.String str62 = request61.getUrl();
        retrofit.mime.TypedOutput typedOutput63 = request61.body;
        java.lang.Object[] objArray64 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder48, typedOutput63 };
        requestBuilder41.setargs(objArray64);
        retrofit.RequestBuilder requestBuilder66 = requestBuilder30.args(objArray64);
        java.util.List<retrofit.client.Header> headerList67 = requestBuilder66.headers;
        requestBuilder1.headers = headerList67;
        java.lang.Object[] objArray69 = requestBuilder1.args;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter72 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("hi!");
        java.lang.Class<?> wildcardClass75 = requestBuilder1.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(converter42);
        org.junit.Assert.assertNull(headerList43);
        org.junit.Assert.assertNotNull(headerArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNull(typedOutput63);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertNotNull(requestBuilder66);
        org.junit.Assert.assertNotNull(headerList67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNull(converter72);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList12 = null;
        requestBuilder1.setheaders(headerList12);
        requestBuilder1.apiUrl = "hi!";
        requestBuilder1.apiUrl = "";
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter20 = requestBuilder1.converter;
        java.lang.String str21 = requestBuilder1.apiUrl;
        java.lang.Class<?> wildcardClass22 = requestBuilder1.getClass();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.RequestBuilder requestBuilder75 = requestBuilder46.apiUrl("hi!");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        retrofit.mime.TypedOutput typedOutput83 = request82.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request82.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request82.headers;
        requestBuilder77.setheaders(headerList85);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder46.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder1.headers(headerList85);
        java.lang.Object[] objArray89 = null;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder88.args(objArray89);
        java.lang.Object[] objArray91 = requestBuilder88.getargs();
        retrofit.converter.Converter converter92 = requestBuilder88.converter;
        retrofit.RequestBuilder requestBuilder94 = requestBuilder88.apiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str95 = requestBuilder88.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNull(objArray91);
        org.junit.Assert.assertNull(converter92);
        org.junit.Assert.assertNotNull(requestBuilder94);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.method;
        java.lang.String str8 = request6.getUrl();
        java.lang.String str9 = request6.method;
        java.lang.String str10 = request6.method;
        java.lang.String str11 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.headers;
        java.lang.String str14 = request12.url;
        java.lang.String str15 = request12.getMethod();
        java.lang.String str16 = request12.getUrl();
        java.util.List<retrofit.client.Header> headerList17 = request12.getHeaders();
        java.lang.Class<?> wildcardClass18 = headerList17.getClass();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter9 = requestBuilder1.converter;
        retrofit.converter.Converter converter10 = null;
        retrofit.RequestBuilder requestBuilder11 = new retrofit.RequestBuilder(converter10);
        java.lang.String str12 = requestBuilder11.apiUrl;
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.converter.Converter converter31 = requestBuilder30.getconverter();
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder30.headers;
        requestBuilder30.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        java.lang.String str40 = request39.getUrl();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder30, request39 };
        requestBuilder17.setargs(objArray41);
        java.lang.Object[] objArray43 = requestBuilder17.getargs();
        retrofit.RequestBuilder requestBuilder44 = requestBuilder14.args(objArray43);
        requestBuilder11.setargs(objArray43);
        requestBuilder1.setargs(objArray43);
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder1.headers;
        java.util.List<retrofit.client.Header> headerList50 = null;
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("", "", headerList50, typedOutput51);
        java.lang.String str53 = request52.getUrl();
        java.util.List<retrofit.client.Header> headerList54 = request52.getHeaders();
        requestBuilder1.setheaders(headerList54);
        retrofit.converter.Converter converter56 = null;
        retrofit.RequestBuilder requestBuilder57 = new retrofit.RequestBuilder(converter56);
        retrofit.converter.Converter converter58 = requestBuilder57.getconverter();
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.client.Header[] headerArray63 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList64 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList64, headerArray63);
        retrofit.mime.TypedOutput typedOutput66 = null;
        retrofit.client.Request request67 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList64, typedOutput66);
        requestBuilder60.setheaders((java.util.List<retrofit.client.Header>) headerList64);
        retrofit.converter.Converter converter72 = null;
        retrofit.RequestBuilder requestBuilder73 = new retrofit.RequestBuilder(converter72);
        retrofit.converter.Converter converter74 = requestBuilder73.getconverter();
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder73.headers;
        requestBuilder73.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        java.lang.String str83 = request82.getUrl();
        java.lang.Object[] objArray84 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder73, request82 };
        requestBuilder60.setargs(objArray84);
        java.lang.Object[] objArray86 = requestBuilder60.getargs();
        retrofit.RequestBuilder requestBuilder87 = requestBuilder57.args(objArray86);
        java.lang.String str88 = requestBuilder57.getapiUrl();
        java.lang.String str89 = requestBuilder57.apiUrl;
        retrofit.RequestBuilder requestBuilder91 = requestBuilder57.apiUrl("");
        java.lang.Object[] objArray92 = new java.lang.Object[] {};
        requestBuilder57.setargs(objArray92);
        requestBuilder1.setargs(objArray92);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNull(headerList47);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(headerList54);
        org.junit.Assert.assertNull(converter58);
        org.junit.Assert.assertNotNull(headerArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertNull(headerList75);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertNotNull(objArray86);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(requestBuilder91);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.method;
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        java.lang.String str12 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput13 = request6.body;
        java.lang.String str14 = request6.url;
        java.lang.String str15 = request6.url;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.Object[] objArray28 = requestBuilder1.getargs();
        retrofit.converter.Converter converter29 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder1.headers;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput31 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNotNull(headerList30);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.RequestBuilder requestBuilder3 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = request12.getBody();
        retrofit.mime.TypedOutput typedOutput14 = request12.getBody();
        java.util.List<retrofit.client.Header> headerList15 = request12.headers;
        java.util.List<retrofit.client.Header> headerList16 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", headerList16, typedOutput17);
        java.util.List<retrofit.client.Header> headerList19 = request18.headers;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("hi!", "", headerList19, typedOutput20);
        java.util.List<retrofit.client.Header> headerList22 = request21.headers;
        retrofit.RequestBuilder requestBuilder23 = requestBuilder1.headers(headerList22);
        java.util.List<retrofit.client.Header> headerList24 = requestBuilder1.headers;
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNotNull(requestBuilder3);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(requestBuilder23);
        org.junit.Assert.assertNotNull(headerList24);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList15 = null;
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "", headerList15, typedOutput16);
        java.lang.String str18 = request17.url;
        java.util.List<retrofit.client.Header> headerList19 = request17.getHeaders();
        java.util.List<retrofit.client.Header> headerList20 = request17.getHeaders();
        requestBuilder1.headers = headerList20;
        retrofit.RequestBuilder requestBuilder23 = requestBuilder1.apiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = requestBuilder23.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(requestBuilder23);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.method;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.url;
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        java.lang.String str10 = request4.getUrl();
        java.lang.String str11 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = requestBuilder1.getconverter();
        requestBuilder1.apiUrl = "";
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter3);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        requestBuilder1.setapiUrl("hi!");
        java.lang.Object[] objArray8 = requestBuilder1.getargs();
        requestBuilder1.apiUrl = "";
        java.lang.String str11 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(objArray8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        retrofit.converter.Converter converter43 = requestBuilder1.converter;
        retrofit.converter.Converter converter44 = requestBuilder1.converter;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput45 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(converter44);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = null;
        requestBuilder1.headers = headerList3;
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder1.headers;
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        requestBuilder1.apiUrl = "";
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.Object[] objArray10 = requestBuilder1.args;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList5);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(objArray10);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        java.lang.String str11 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        requestBuilder47.setheaders((java.util.List<retrofit.client.Header>) headerList51);
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.converter.Converter converter61 = requestBuilder60.getconverter();
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder60.headers;
        requestBuilder60.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList67 = null;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "", headerList67, typedOutput68);
        java.lang.String str70 = request69.getUrl();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder60, request69 };
        requestBuilder47.setargs(objArray71);
        retrofit.RequestBuilder requestBuilder74 = requestBuilder47.apiUrl("");
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder47.headers;
        requestBuilder1.headers = headerList75;
        requestBuilder1.apiUrl = "hi!";
        retrofit.RequestBuilder requestBuilder80 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList83 = null;
        retrofit.mime.TypedOutput typedOutput84 = null;
        retrofit.client.Request request85 = new retrofit.client.Request("", "", headerList83, typedOutput84);
        java.lang.String str86 = request85.getUrl();
        retrofit.mime.TypedOutput typedOutput87 = request85.body;
        java.lang.String str88 = request85.getUrl();
        java.util.List<retrofit.client.Header> headerList89 = request85.headers;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder1.headers(headerList89);
        java.lang.Class<?> wildcardClass91 = headerList89.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(headerList62);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNull(typedOutput87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertNotNull(headerList89);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList9 = requestBuilder8.getheaders();
        requestBuilder8.apiUrl = "";
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(headerList9);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter37 = null;
        retrofit.RequestBuilder requestBuilder38 = new retrofit.RequestBuilder(converter37);
        retrofit.client.Header[] headerArray41 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList42 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList42, headerArray41);
        retrofit.mime.TypedOutput typedOutput44 = null;
        retrofit.client.Request request45 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList42, typedOutput44);
        requestBuilder38.setheaders((java.util.List<retrofit.client.Header>) headerList42);
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        java.util.List<retrofit.client.Header> headerList53 = requestBuilder51.headers;
        requestBuilder51.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        java.lang.String str61 = request60.getUrl();
        java.lang.Object[] objArray62 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder51, request60 };
        requestBuilder38.setargs(objArray62);
        java.lang.String str64 = requestBuilder38.getapiUrl();
        java.lang.Object[] objArray65 = requestBuilder38.args;
        requestBuilder1.args = objArray65;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str67 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(headerArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNull(headerList53);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(objArray65);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        java.lang.String str38 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        retrofit.converter.Converter converter41 = requestBuilder40.getconverter();
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        requestBuilder43.setheaders((java.util.List<retrofit.client.Header>) headerList47);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder56.headers;
        requestBuilder56.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder56, request65 };
        requestBuilder43.setargs(objArray67);
        java.lang.Object[] objArray69 = requestBuilder43.getargs();
        retrofit.RequestBuilder requestBuilder70 = requestBuilder40.args(objArray69);
        requestBuilder37.setargs(objArray69);
        retrofit.RequestBuilder requestBuilder72 = requestBuilder1.args(objArray69);
        retrofit.converter.Converter converter73 = requestBuilder1.getconverter();
        java.lang.Object[] objArray74 = requestBuilder1.getargs();
        java.lang.String str75 = requestBuilder1.getapiUrl();
        requestBuilder1.setapiUrl("");
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        java.lang.String str83 = request82.getUrl();
        retrofit.mime.TypedOutput typedOutput84 = request82.body;
        java.lang.String str85 = request82.getUrl();
        java.lang.String str86 = request82.url;
        java.lang.String str87 = request82.getUrl();
        java.util.List<retrofit.client.Header> headerList88 = request82.headers;
        java.util.List<retrofit.client.Header> headerList89 = request82.getHeaders();
        requestBuilder1.setheaders(headerList89);
        retrofit.converter.Converter converter91 = requestBuilder1.converter;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNull(converter73);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(headerList88);
        org.junit.Assert.assertNotNull(headerList89);
        org.junit.Assert.assertNull(converter91);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        retrofit.converter.Converter converter35 = requestBuilder34.getconverter();
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.client.Header[] headerArray40 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList41 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList41, headerArray40);
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList41, typedOutput43);
        requestBuilder37.setheaders((java.util.List<retrofit.client.Header>) headerList41);
        retrofit.converter.Converter converter49 = null;
        retrofit.RequestBuilder requestBuilder50 = new retrofit.RequestBuilder(converter49);
        retrofit.converter.Converter converter51 = requestBuilder50.getconverter();
        java.util.List<retrofit.client.Header> headerList52 = requestBuilder50.headers;
        requestBuilder50.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList57 = null;
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("", "", headerList57, typedOutput58);
        java.lang.String str60 = request59.getUrl();
        java.lang.Object[] objArray61 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder50, request59 };
        requestBuilder37.setargs(objArray61);
        requestBuilder37.apiUrl = "";
        retrofit.RequestBuilder requestBuilder66 = requestBuilder37.apiUrl("hi!");
        retrofit.converter.Converter converter67 = null;
        retrofit.RequestBuilder requestBuilder68 = new retrofit.RequestBuilder(converter67);
        java.util.List<retrofit.client.Header> headerList71 = null;
        retrofit.mime.TypedOutput typedOutput72 = null;
        retrofit.client.Request request73 = new retrofit.client.Request("", "", headerList71, typedOutput72);
        retrofit.mime.TypedOutput typedOutput74 = request73.getBody();
        retrofit.mime.TypedOutput typedOutput75 = request73.getBody();
        java.util.List<retrofit.client.Header> headerList76 = request73.headers;
        requestBuilder68.setheaders(headerList76);
        retrofit.RequestBuilder requestBuilder78 = requestBuilder37.headers(headerList76);
        java.lang.Object[] objArray79 = requestBuilder37.getargs();
        retrofit.RequestBuilder requestBuilder80 = requestBuilder34.args(objArray79);
        requestBuilder80.apiUrl = "";
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(converter35);
        org.junit.Assert.assertNotNull(headerArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(converter51);
        org.junit.Assert.assertNull(headerList52);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(requestBuilder66);
        org.junit.Assert.assertNull(typedOutput74);
        org.junit.Assert.assertNull(typedOutput75);
        org.junit.Assert.assertNotNull(headerList76);
        org.junit.Assert.assertNotNull(requestBuilder78);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(requestBuilder80);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.apiUrl;
        java.lang.String str37 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList38 = requestBuilder1.getheaders();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput39 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(headerList38);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.Object[] objArray9 = requestBuilder1.getargs();
        retrofit.converter.Converter converter10 = requestBuilder1.converter;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(objArray9);
        org.junit.Assert.assertNull(converter10);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.url;
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        java.lang.String str11 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.client.Header[] headerArray11 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList12 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList12, headerArray11);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList12, typedOutput14);
        requestBuilder8.setheaders((java.util.List<retrofit.client.Header>) headerList12);
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        retrofit.mime.TypedOutput typedOutput23 = request21.body;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder8, typedOutput23 };
        requestBuilder1.setargs(objArray24);
        java.lang.String str26 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList27 = requestBuilder1.headers;
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder1.headers;
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.client.Header[] headerArray33 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList34 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList34, headerArray33);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList34, typedOutput36);
        requestBuilder30.setheaders((java.util.List<retrofit.client.Header>) headerList34);
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.converter.Converter converter44 = requestBuilder43.getconverter();
        java.util.List<retrofit.client.Header> headerList45 = requestBuilder43.headers;
        requestBuilder43.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList50 = null;
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("", "", headerList50, typedOutput51);
        java.lang.String str53 = request52.getUrl();
        java.lang.Object[] objArray54 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder43, request52 };
        requestBuilder30.setargs(objArray54);
        requestBuilder30.apiUrl = "";
        retrofit.RequestBuilder requestBuilder59 = requestBuilder30.apiUrl("hi!");
        retrofit.converter.Converter converter60 = null;
        retrofit.RequestBuilder requestBuilder61 = new retrofit.RequestBuilder(converter60);
        java.util.List<retrofit.client.Header> headerList64 = null;
        retrofit.mime.TypedOutput typedOutput65 = null;
        retrofit.client.Request request66 = new retrofit.client.Request("", "", headerList64, typedOutput65);
        retrofit.mime.TypedOutput typedOutput67 = request66.getBody();
        retrofit.mime.TypedOutput typedOutput68 = request66.getBody();
        java.util.List<retrofit.client.Header> headerList69 = request66.headers;
        requestBuilder61.setheaders(headerList69);
        retrofit.RequestBuilder requestBuilder71 = requestBuilder30.headers(headerList69);
        java.lang.Object[] objArray72 = requestBuilder30.getargs();
        java.lang.String str73 = requestBuilder30.getapiUrl();
        java.util.List<retrofit.client.Header> headerList74 = requestBuilder30.getheaders();
        retrofit.RequestBuilder requestBuilder75 = requestBuilder1.headers(headerList74);
        java.lang.Object[] objArray76 = requestBuilder1.getargs();
        java.lang.String str77 = requestBuilder1.apiUrl;
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(headerList27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertNotNull(headerArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(headerList45);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertNotNull(requestBuilder59);
        org.junit.Assert.assertNull(typedOutput67);
        org.junit.Assert.assertNull(typedOutput68);
        org.junit.Assert.assertNotNull(headerList69);
        org.junit.Assert.assertNotNull(requestBuilder71);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertNotNull(headerList74);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList33, typedOutput36);
        java.lang.String str38 = request37.method;
        java.util.List<retrofit.client.Header> headerList39 = request37.headers;
        java.lang.String str40 = request37.method;
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.method;
        java.lang.String str37 = request33.method;
        java.util.List<retrofit.client.Header> headerList38 = request33.headers;
        retrofit.mime.TypedOutput typedOutput39 = request33.body;
        java.util.List<retrofit.client.Header> headerList40 = request33.getHeaders();
        java.lang.String str41 = request33.url;
        java.lang.String str42 = request33.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray13 = requestBuilder1.getargs();
        retrofit.converter.Converter converter14 = requestBuilder1.getconverter();
        java.lang.Object[] objArray15 = requestBuilder1.getargs();
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.converter.Converter converter31 = requestBuilder30.getconverter();
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder30.headers;
        requestBuilder30.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        java.lang.String str40 = request39.getUrl();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder30, request39 };
        requestBuilder17.setargs(objArray41);
        requestBuilder17.apiUrl = "";
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        retrofit.mime.TypedOutput typedOutput52 = request51.getBody();
        retrofit.mime.TypedOutput typedOutput53 = request51.getBody();
        java.util.List<retrofit.client.Header> headerList54 = request51.headers;
        requestBuilder46.setheaders(headerList54);
        requestBuilder17.setheaders(headerList54);
        requestBuilder17.apiUrl = "";
        java.lang.Object[] objArray59 = requestBuilder17.args;
        java.lang.Object[] objArray60 = requestBuilder17.args;
        requestBuilder1.args = objArray60;
        requestBuilder1.apiUrl = "";
        requestBuilder1.apiUrl = "";
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(objArray15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNull(typedOutput52);
        org.junit.Assert.assertNull(typedOutput53);
        org.junit.Assert.assertNotNull(headerList54);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertNotNull(objArray60);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        retrofit.RequestBuilder requestBuilder39 = requestBuilder37.apiUrl("");
        retrofit.RequestBuilder requestBuilder41 = requestBuilder37.apiUrl("");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNotNull(requestBuilder39);
        org.junit.Assert.assertNotNull(requestBuilder41);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        java.lang.String str14 = requestBuilder5.getapiUrl();
        retrofit.RequestBuilder requestBuilder16 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.url;
        java.util.List<retrofit.client.Header> headerList23 = request21.getHeaders();
        java.util.List<retrofit.client.Header> headerList24 = request21.getHeaders();
        requestBuilder5.headers = headerList24;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList24, typedOutput26);
        java.lang.String str28 = request27.getMethod();
        retrofit.mime.TypedOutput typedOutput29 = request27.getBody();
        java.util.List<retrofit.client.Header> headerList30 = request27.getHeaders();
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "hi!", headerList30, typedOutput31);
        java.util.List<retrofit.client.Header> headerList33 = request32.getHeaders();
        java.lang.String str34 = request32.url;
        java.lang.String str35 = request32.url;
        java.util.List<retrofit.client.Header> headerList36 = request32.getHeaders();
        java.lang.String str37 = request32.getMethod();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(requestBuilder16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(typedOutput29);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.url;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request4.headers;
        retrofit.mime.TypedOutput typedOutput13 = request4.body;
        java.util.List<retrofit.client.Header> headerList14 = request4.headers;
        java.util.List<retrofit.client.Header> headerList15 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList16 = request4.headers;
        retrofit.mime.TypedOutput typedOutput17 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList18 = request4.headers;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertNotNull(headerList18);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        requestBuilder1.setapiUrl("");
        retrofit.converter.Converter converter12 = requestBuilder1.getconverter();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(converter12);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList9 = requestBuilder8.getheaders();
        requestBuilder8.setapiUrl("");
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.converter.Converter converter14 = requestBuilder13.getconverter();
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder13.headers;
        requestBuilder13.setapiUrl("hi!");
        retrofit.converter.Converter converter18 = requestBuilder13.converter;
        retrofit.RequestBuilder requestBuilder20 = requestBuilder13.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder22 = requestBuilder20.apiUrl("hi!");
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.client.Header[] headerArray27 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList28 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList28, headerArray27);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList28, typedOutput30);
        requestBuilder24.setheaders((java.util.List<retrofit.client.Header>) headerList28);
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder24.getheaders();
        java.lang.String str34 = requestBuilder24.getapiUrl();
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        retrofit.client.Header[] headerArray39 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList40 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList40, headerArray39);
        retrofit.mime.TypedOutput typedOutput42 = null;
        retrofit.client.Request request43 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList40, typedOutput42);
        requestBuilder36.setheaders((java.util.List<retrofit.client.Header>) headerList40);
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.converter.Converter converter50 = requestBuilder49.getconverter();
        java.util.List<retrofit.client.Header> headerList51 = requestBuilder49.headers;
        requestBuilder49.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList56 = null;
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("", "", headerList56, typedOutput57);
        java.lang.String str59 = request58.getUrl();
        java.lang.Object[] objArray60 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder49, request58 };
        requestBuilder36.setargs(objArray60);
        requestBuilder36.apiUrl = "";
        retrofit.RequestBuilder requestBuilder65 = requestBuilder36.apiUrl("hi!");
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        java.util.List<retrofit.client.Header> headerList70 = null;
        retrofit.mime.TypedOutput typedOutput71 = null;
        retrofit.client.Request request72 = new retrofit.client.Request("", "", headerList70, typedOutput71);
        retrofit.mime.TypedOutput typedOutput73 = request72.getBody();
        retrofit.mime.TypedOutput typedOutput74 = request72.getBody();
        java.util.List<retrofit.client.Header> headerList75 = request72.headers;
        requestBuilder67.setheaders(headerList75);
        retrofit.RequestBuilder requestBuilder77 = requestBuilder36.headers(headerList75);
        requestBuilder24.headers = headerList75;
        java.util.List<retrofit.client.Header> headerList81 = null;
        retrofit.mime.TypedOutput typedOutput82 = null;
        retrofit.client.Request request83 = new retrofit.client.Request("", "", headerList81, typedOutput82);
        java.lang.String str84 = request83.url;
        java.util.List<retrofit.client.Header> headerList85 = request83.getHeaders();
        requestBuilder24.headers = headerList85;
        retrofit.RequestBuilder requestBuilder87 = requestBuilder20.headers(headerList85);
        requestBuilder8.headers = headerList85;
        retrofit.converter.Converter converter89 = requestBuilder8.converter;
        java.lang.String str90 = requestBuilder8.getapiUrl();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(headerList9);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(headerList15);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNotNull(requestBuilder20);
        org.junit.Assert.assertNotNull(requestBuilder22);
        org.junit.Assert.assertNotNull(headerArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(headerArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(converter50);
        org.junit.Assert.assertNull(headerList51);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(requestBuilder65);
        org.junit.Assert.assertNull(typedOutput73);
        org.junit.Assert.assertNull(typedOutput74);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertNotNull(requestBuilder77);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNull(converter89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        retrofit.RequestBuilder requestBuilder86 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList89 = null;
        retrofit.mime.TypedOutput typedOutput90 = null;
        retrofit.client.Request request91 = new retrofit.client.Request("", "", headerList89, typedOutput90);
        java.lang.String str92 = request91.url;
        java.lang.String str93 = request91.url;
        java.lang.String str94 = request91.getUrl();
        java.lang.String str95 = request91.getUrl();
        java.lang.String str96 = request91.url;
        java.util.List<retrofit.client.Header> headerList97 = request91.getHeaders();
        requestBuilder1.headers = headerList97;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(requestBuilder86);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "" + "'", str94, "");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "" + "'", str95, "");
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "" + "'", str96, "");
        org.junit.Assert.assertNotNull(headerList97);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.RequestBuilder requestBuilder75 = requestBuilder46.apiUrl("hi!");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        retrofit.mime.TypedOutput typedOutput83 = request82.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request82.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request82.headers;
        requestBuilder77.setheaders(headerList85);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder46.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder1.headers(headerList85);
        retrofit.RequestBuilder requestBuilder90 = requestBuilder1.apiUrl("hi!");
        java.lang.Class<?> wildcardClass91 = requestBuilder1.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        java.lang.String str4 = requestBuilder1.getapiUrl();
        java.lang.Object[] objArray5 = requestBuilder1.args;
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        java.util.List<retrofit.client.Header> headerList34 = null;
        requestBuilder7.headers = headerList34;
        retrofit.converter.Converter converter36 = requestBuilder7.getconverter();
        java.util.List<retrofit.client.Header> headerList37 = requestBuilder7.getheaders();
        requestBuilder7.apiUrl = "";
        requestBuilder7.setapiUrl("hi!");
        java.lang.Object[] objArray42 = requestBuilder7.getargs();
        requestBuilder1.setargs(objArray42);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(objArray5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNull(converter36);
        org.junit.Assert.assertNull(headerList37);
        org.junit.Assert.assertNotNull(objArray42);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.client.Header[] headerArray15 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList16 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList16, headerArray15);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList16, typedOutput18);
        requestBuilder12.setheaders((java.util.List<retrofit.client.Header>) headerList16);
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder12.getheaders();
        java.lang.String str22 = requestBuilder12.getapiUrl();
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.client.Header[] headerArray27 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList28 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList28, headerArray27);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList28, typedOutput30);
        requestBuilder24.setheaders((java.util.List<retrofit.client.Header>) headerList28);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        requestBuilder37.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList44 = null;
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("", "", headerList44, typedOutput45);
        java.lang.String str47 = request46.getUrl();
        java.lang.Object[] objArray48 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder37, request46 };
        requestBuilder24.setargs(objArray48);
        requestBuilder24.apiUrl = "";
        retrofit.RequestBuilder requestBuilder53 = requestBuilder24.apiUrl("hi!");
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        retrofit.mime.TypedOutput typedOutput61 = request60.getBody();
        retrofit.mime.TypedOutput typedOutput62 = request60.getBody();
        java.util.List<retrofit.client.Header> headerList63 = request60.headers;
        requestBuilder55.setheaders(headerList63);
        retrofit.RequestBuilder requestBuilder65 = requestBuilder24.headers(headerList63);
        requestBuilder12.headers = headerList63;
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.url;
        java.util.List<retrofit.client.Header> headerList73 = request71.getHeaders();
        requestBuilder12.headers = headerList73;
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder12.headers;
        requestBuilder1.setheaders(headerList75);
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(headerArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(headerList39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(requestBuilder53);
        org.junit.Assert.assertNull(typedOutput61);
        org.junit.Assert.assertNull(typedOutput62);
        org.junit.Assert.assertNotNull(headerList63);
        org.junit.Assert.assertNotNull(requestBuilder65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertNotNull(headerList77);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        requestBuilder1.setapiUrl("hi!");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder31.apiUrl;
        requestBuilder31.setapiUrl("");
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder31.getheaders();
        requestBuilder31.apiUrl = "hi!";
        java.lang.Class<?> wildcardClass38 = requestBuilder31.getClass();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(headerList35);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        java.lang.String str9 = request8.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request8.body;
        java.lang.String str11 = request8.getUrl();
        java.lang.String str12 = request8.url;
        java.lang.String str13 = request8.getUrl();
        java.util.List<retrofit.client.Header> headerList14 = request8.headers;
        java.util.List<retrofit.client.Header> headerList15 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", headerList15, typedOutput18);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.lang.String str36 = request33.url;
        retrofit.mime.TypedOutput typedOutput37 = request33.getBody();
        java.util.List<retrofit.client.Header> headerList38 = request33.getHeaders();
        java.lang.String str39 = request33.method;
        retrofit.mime.TypedOutput typedOutput40 = request33.body;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(typedOutput40);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder5 = requestBuilder1.apiUrl("");
        java.lang.String str6 = requestBuilder5.getapiUrl();
        java.lang.Object[] objArray7 = requestBuilder5.getargs();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request8 = requestBuilder5.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(requestBuilder5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(objArray7);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.converter.Converter converter14 = requestBuilder13.getconverter();
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder13.headers;
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.client.Header[] headerArray23 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList24 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList24, headerArray23);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList24, typedOutput26);
        requestBuilder20.setheaders((java.util.List<retrofit.client.Header>) headerList24);
        java.util.List<retrofit.client.Header> headerList31 = null;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.getUrl();
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.lang.Object[] objArray36 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder20, typedOutput35 };
        requestBuilder13.setargs(objArray36);
        java.util.List<retrofit.client.Header> headerList40 = null;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList40, typedOutput41);
        retrofit.mime.TypedOutput typedOutput43 = request42.getBody();
        retrofit.mime.TypedOutput typedOutput44 = request42.getBody();
        java.lang.String str45 = request42.getUrl();
        java.util.List<retrofit.client.Header> headerList46 = request42.headers;
        retrofit.RequestBuilder requestBuilder47 = requestBuilder13.headers(headerList46);
        retrofit.RequestBuilder requestBuilder48 = requestBuilder1.headers(headerList46);
        retrofit.RequestBuilder requestBuilder50 = requestBuilder48.apiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput51 = requestBuilder48.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(headerList15);
        org.junit.Assert.assertNotNull(headerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNull(typedOutput44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(requestBuilder48);
        org.junit.Assert.assertNotNull(requestBuilder50);
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        retrofit.converter.Converter converter38 = requestBuilder37.converter;
        requestBuilder37.apiUrl = "hi!";
        requestBuilder37.setapiUrl("hi!");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(converter38);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request4.headers;
        java.lang.String str13 = request4.url;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", headerList11, typedOutput13);
        retrofit.mime.TypedOutput typedOutput15 = request14.body;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNull(typedOutput15);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        requestBuilder37.setapiUrl("hi!");
        java.lang.String str42 = requestBuilder37.apiUrl;
        java.util.List<retrofit.client.Header> headerList43 = requestBuilder37.headers;
        java.lang.String str44 = requestBuilder37.getapiUrl();
        java.lang.String str45 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        requestBuilder47.setheaders((java.util.List<retrofit.client.Header>) headerList51);
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.converter.Converter converter61 = requestBuilder60.getconverter();
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder60.headers;
        requestBuilder60.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList67 = null;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "", headerList67, typedOutput68);
        java.lang.String str70 = request69.getUrl();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder60, request69 };
        requestBuilder47.setargs(objArray71);
        java.lang.String str73 = requestBuilder47.getapiUrl();
        retrofit.client.Header[] headerArray76 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList77 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList77, headerArray76);
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.getHeaders();
        requestBuilder47.setheaders(headerList81);
        java.lang.Object[] objArray83 = requestBuilder47.getargs();
        retrofit.RequestBuilder requestBuilder84 = requestBuilder37.args(objArray83);
        requestBuilder1.setargs(objArray83);
        java.util.List<retrofit.client.Header> headerList86 = requestBuilder1.getheaders();
        java.lang.Object[] objArray87 = requestBuilder1.args;
        java.util.List<retrofit.client.Header> headerList88 = requestBuilder1.getheaders();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(headerList39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(headerList43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(headerList62);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(headerArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(headerList86);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertNull(headerList88);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getMethod();
        java.lang.String str10 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        retrofit.converter.Converter converter43 = requestBuilder1.converter;
        retrofit.converter.Converter converter44 = requestBuilder1.converter;
        retrofit.converter.Converter converter45 = requestBuilder1.getconverter();
        requestBuilder1.apiUrl = "hi!";
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        java.lang.String str78 = requestBuilder49.getapiUrl();
        java.lang.Object[] objArray79 = requestBuilder49.getargs();
        requestBuilder1.args = objArray79;
        retrofit.RequestBuilder requestBuilder82 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter83 = requestBuilder1.converter;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(requestBuilder82);
        org.junit.Assert.assertNull(converter83);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        java.lang.String str12 = request4.url;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.headers;
        java.lang.String str14 = request12.url;
        java.lang.String str15 = request12.getMethod();
        java.lang.String str16 = request12.getUrl();
        java.lang.String str17 = request12.getUrl();
        java.lang.String str18 = request12.method;
        java.lang.Class<?> wildcardClass19 = request12.getClass();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.url;
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        java.lang.String str8 = request4.getMethod();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("", "", headerList9, typedOutput10);
        java.lang.String str12 = request11.getUrl();
        java.lang.String str13 = request11.method;
        java.lang.String str14 = request11.getMethod();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.client.Header[] headerArray15 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList16 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList16, headerArray15);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList16, typedOutput18);
        requestBuilder12.setheaders((java.util.List<retrofit.client.Header>) headerList16);
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder12.getheaders();
        java.lang.String str22 = requestBuilder12.getapiUrl();
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.client.Header[] headerArray27 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList28 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList28, headerArray27);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList28, typedOutput30);
        requestBuilder24.setheaders((java.util.List<retrofit.client.Header>) headerList28);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        requestBuilder37.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList44 = null;
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("", "", headerList44, typedOutput45);
        java.lang.String str47 = request46.getUrl();
        java.lang.Object[] objArray48 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder37, request46 };
        requestBuilder24.setargs(objArray48);
        requestBuilder24.apiUrl = "";
        retrofit.RequestBuilder requestBuilder53 = requestBuilder24.apiUrl("hi!");
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        retrofit.mime.TypedOutput typedOutput61 = request60.getBody();
        retrofit.mime.TypedOutput typedOutput62 = request60.getBody();
        java.util.List<retrofit.client.Header> headerList63 = request60.headers;
        requestBuilder55.setheaders(headerList63);
        retrofit.RequestBuilder requestBuilder65 = requestBuilder24.headers(headerList63);
        requestBuilder12.headers = headerList63;
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.url;
        java.util.List<retrofit.client.Header> headerList73 = request71.getHeaders();
        requestBuilder12.headers = headerList73;
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder12.headers;
        requestBuilder1.setheaders(headerList75);
        requestBuilder1.setapiUrl("");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(headerArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(headerList39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(requestBuilder53);
        org.junit.Assert.assertNull(typedOutput61);
        org.junit.Assert.assertNull(typedOutput62);
        org.junit.Assert.assertNotNull(headerList63);
        org.junit.Assert.assertNotNull(requestBuilder65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertNotNull(headerList75);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        java.lang.String str16 = requestBuilder7.getapiUrl();
        retrofit.RequestBuilder requestBuilder18 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.url;
        java.util.List<retrofit.client.Header> headerList25 = request23.getHeaders();
        java.util.List<retrofit.client.Header> headerList26 = request23.getHeaders();
        requestBuilder7.headers = headerList26;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList26, typedOutput28);
        java.lang.String str30 = request29.getMethod();
        retrofit.mime.TypedOutput typedOutput31 = request29.getBody();
        java.util.List<retrofit.client.Header> headerList32 = request29.getHeaders();
        retrofit.mime.TypedOutput typedOutput33 = null;
        retrofit.client.Request request34 = new retrofit.client.Request("", "hi!", headerList32, typedOutput33);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("", "", headerList32, typedOutput35);
        java.lang.String str37 = request36.method;
        java.lang.Class<?> wildcardClass38 = request36.getClass();
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(requestBuilder18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(headerList25);
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(typedOutput31);
        org.junit.Assert.assertNotNull(headerList32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = requestBuilder1.getconverter();
        java.lang.String str4 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder6 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray7 = null;
        requestBuilder1.args = objArray7;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(requestBuilder6);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.lang.Class<?> wildcardClass10 = request4.getClass();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str8 = requestBuilder1.apiUrl;
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList12 = requestBuilder11.headers;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = requestBuilder11.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNull(headerList12);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        requestBuilder1.setapiUrl("");
        retrofit.RequestBuilder requestBuilder14 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder14.getheaders();
        java.lang.Object[] objArray16 = requestBuilder14.args;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNull(objArray16);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        requestBuilder47.setheaders((java.util.List<retrofit.client.Header>) headerList51);
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.converter.Converter converter61 = requestBuilder60.getconverter();
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder60.headers;
        requestBuilder60.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList67 = null;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "", headerList67, typedOutput68);
        java.lang.String str70 = request69.getUrl();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder60, request69 };
        requestBuilder47.setargs(objArray71);
        retrofit.RequestBuilder requestBuilder74 = requestBuilder47.apiUrl("");
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder47.headers;
        requestBuilder1.headers = headerList75;
        requestBuilder1.apiUrl = "hi!";
        retrofit.RequestBuilder requestBuilder80 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter81 = requestBuilder80.getconverter();
        java.lang.Object[] objArray82 = null;
        retrofit.RequestBuilder requestBuilder83 = requestBuilder80.args(objArray82);
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(headerList62);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertNull(converter81);
        org.junit.Assert.assertNotNull(requestBuilder83);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        retrofit.client.Header[] headerArray37 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList38 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList38, headerArray37);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList38, typedOutput40);
        requestBuilder34.setheaders((java.util.List<retrofit.client.Header>) headerList38);
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.converter.Converter converter48 = requestBuilder47.getconverter();
        java.util.List<retrofit.client.Header> headerList49 = requestBuilder47.headers;
        requestBuilder47.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList54 = null;
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("", "", headerList54, typedOutput55);
        java.lang.String str57 = request56.getUrl();
        java.lang.Object[] objArray58 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder47, request56 };
        requestBuilder34.setargs(objArray58);
        requestBuilder34.apiUrl = "";
        retrofit.RequestBuilder requestBuilder63 = requestBuilder34.apiUrl("hi!");
        retrofit.converter.Converter converter64 = null;
        retrofit.RequestBuilder requestBuilder65 = new retrofit.RequestBuilder(converter64);
        java.util.List<retrofit.client.Header> headerList68 = null;
        retrofit.mime.TypedOutput typedOutput69 = null;
        retrofit.client.Request request70 = new retrofit.client.Request("", "", headerList68, typedOutput69);
        retrofit.mime.TypedOutput typedOutput71 = request70.getBody();
        retrofit.mime.TypedOutput typedOutput72 = request70.getBody();
        java.util.List<retrofit.client.Header> headerList73 = request70.headers;
        requestBuilder65.setheaders(headerList73);
        retrofit.RequestBuilder requestBuilder75 = requestBuilder34.headers(headerList73);
        java.lang.Object[] objArray76 = requestBuilder34.getargs();
        java.lang.Object[] objArray77 = requestBuilder34.getargs();
        requestBuilder1.args = objArray77;
        java.util.List<retrofit.client.Header> headerList83 = null;
        retrofit.mime.TypedOutput typedOutput84 = null;
        retrofit.client.Request request85 = new retrofit.client.Request("", "", headerList83, typedOutput84);
        retrofit.mime.TypedOutput typedOutput86 = request85.getBody();
        retrofit.mime.TypedOutput typedOutput87 = request85.getBody();
        java.util.List<retrofit.client.Header> headerList88 = request85.headers;
        java.util.List<retrofit.client.Header> headerList89 = request85.getHeaders();
        retrofit.mime.TypedOutput typedOutput90 = null;
        retrofit.client.Request request91 = new retrofit.client.Request("hi!", "hi!", headerList89, typedOutput90);
        retrofit.RequestBuilder requestBuilder92 = requestBuilder1.headers(headerList89);
        java.lang.Object[] objArray93 = requestBuilder1.args;
        retrofit.converter.Converter converter94 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList95 = requestBuilder1.headers;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str96 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNotNull(headerArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNull(headerList49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(requestBuilder63);
        org.junit.Assert.assertNull(typedOutput71);
        org.junit.Assert.assertNull(typedOutput72);
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertNull(typedOutput86);
        org.junit.Assert.assertNull(typedOutput87);
        org.junit.Assert.assertNotNull(headerList88);
        org.junit.Assert.assertNotNull(headerList89);
        org.junit.Assert.assertNotNull(requestBuilder92);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertNull(converter94);
        org.junit.Assert.assertNotNull(headerList95);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList9 = requestBuilder8.getheaders();
        requestBuilder8.setapiUrl("");
        retrofit.client.Header[] headerArray14 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList15 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList15, headerArray14);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList15, typedOutput17);
        java.util.List<retrofit.client.Header> headerList19 = request18.getHeaders();
        java.lang.String str20 = request18.url;
        java.lang.String str21 = request18.url;
        java.lang.String str22 = request18.method;
        retrofit.mime.TypedOutput typedOutput23 = request18.getBody();
        java.util.List<retrofit.client.Header> headerList24 = request18.getHeaders();
        java.util.List<retrofit.client.Header> headerList25 = request18.headers;
        requestBuilder8.setheaders(headerList25);
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(headerList9);
        org.junit.Assert.assertNotNull(headerArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertNotNull(headerList25);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.method;
        java.lang.String str37 = request33.method;
        java.util.List<retrofit.client.Header> headerList38 = request33.headers;
        retrofit.mime.TypedOutput typedOutput39 = request33.body;
        retrofit.mime.TypedOutput typedOutput40 = request33.getBody();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNull(typedOutput40);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        java.lang.String str38 = requestBuilder37.getapiUrl();
        retrofit.converter.Converter converter39 = requestBuilder37.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = requestBuilder37.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(converter39);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        requestBuilder8.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList11 = requestBuilder8.getheaders();
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        requestBuilder13.setheaders((java.util.List<retrofit.client.Header>) headerList17);
        retrofit.converter.Converter converter25 = null;
        retrofit.RequestBuilder requestBuilder26 = new retrofit.RequestBuilder(converter25);
        retrofit.converter.Converter converter27 = requestBuilder26.getconverter();
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder26.headers;
        requestBuilder26.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder26, request35 };
        requestBuilder13.setargs(objArray37);
        retrofit.RequestBuilder requestBuilder40 = requestBuilder13.apiUrl("");
        java.util.List<retrofit.client.Header> headerList41 = requestBuilder13.headers;
        java.lang.Object[] objArray42 = requestBuilder13.args;
        retrofit.RequestBuilder requestBuilder43 = requestBuilder8.args(objArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str44 = requestBuilder8.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(headerList11);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(requestBuilder40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(requestBuilder43);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder5 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray6 = requestBuilder1.args;
        requestBuilder1.setapiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(requestBuilder5);
        org.junit.Assert.assertNull(objArray6);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        java.lang.Object[] objArray31 = requestBuilder1.args;
        java.lang.String str32 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = request38.getBody();
        retrofit.mime.TypedOutput typedOutput40 = request38.getBody();
        java.lang.String str41 = request38.getUrl();
        java.util.List<retrofit.client.Header> headerList42 = request38.headers;
        requestBuilder1.setheaders(headerList42);
        java.lang.String str44 = requestBuilder1.apiUrl;
        requestBuilder1.setapiUrl("hi!");
        java.lang.Object[] objArray47 = requestBuilder1.args;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput48 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(objArray47);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        java.lang.Object[] objArray46 = new java.lang.Object[] {};
        requestBuilder1.args = objArray46;
        java.lang.Object[] objArray48 = requestBuilder1.getargs();
        requestBuilder1.apiUrl = "hi!";
        retrofit.converter.Converter converter51 = requestBuilder1.converter;
        java.util.List<retrofit.client.Header> headerList52 = requestBuilder1.getheaders();
        java.lang.Object[] objArray53 = requestBuilder1.args;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNull(converter51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder10 = requestBuilder8.apiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request11 = requestBuilder8.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNotNull(requestBuilder10);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        requestBuilder1.apiUrl = "hi!";
        java.lang.String str31 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        retrofit.converter.Converter converter34 = requestBuilder33.getconverter();
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder33.headers;
        requestBuilder33.setapiUrl("hi!");
        retrofit.converter.Converter converter38 = requestBuilder33.converter;
        retrofit.RequestBuilder requestBuilder40 = requestBuilder33.apiUrl("hi!");
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.converter.Converter converter43 = requestBuilder42.getconverter();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder42.headers;
        requestBuilder42.setapiUrl("hi!");
        java.lang.String str47 = requestBuilder42.apiUrl;
        java.util.List<retrofit.client.Header> headerList48 = requestBuilder42.headers;
        java.lang.String str49 = requestBuilder42.getapiUrl();
        java.lang.String str50 = requestBuilder42.apiUrl;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder42.apiUrl("hi!");
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.converter.Converter converter55 = requestBuilder54.getconverter();
        java.util.List<retrofit.client.Header> headerList56 = requestBuilder54.headers;
        retrofit.converter.Converter converter60 = null;
        retrofit.RequestBuilder requestBuilder61 = new retrofit.RequestBuilder(converter60);
        retrofit.client.Header[] headerArray64 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList65 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList65, headerArray64);
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList65, typedOutput67);
        requestBuilder61.setheaders((java.util.List<retrofit.client.Header>) headerList65);
        java.util.List<retrofit.client.Header> headerList72 = null;
        retrofit.mime.TypedOutput typedOutput73 = null;
        retrofit.client.Request request74 = new retrofit.client.Request("", "", headerList72, typedOutput73);
        java.lang.String str75 = request74.getUrl();
        retrofit.mime.TypedOutput typedOutput76 = request74.body;
        java.lang.Object[] objArray77 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder61, typedOutput76 };
        requestBuilder54.setargs(objArray77);
        java.util.List<retrofit.client.Header> headerList81 = null;
        retrofit.mime.TypedOutput typedOutput82 = null;
        retrofit.client.Request request83 = new retrofit.client.Request("", "", headerList81, typedOutput82);
        retrofit.mime.TypedOutput typedOutput84 = request83.getBody();
        retrofit.mime.TypedOutput typedOutput85 = request83.getBody();
        java.lang.String str86 = request83.getUrl();
        java.util.List<retrofit.client.Header> headerList87 = request83.headers;
        retrofit.RequestBuilder requestBuilder88 = requestBuilder54.headers(headerList87);
        retrofit.RequestBuilder requestBuilder89 = requestBuilder42.headers(headerList87);
        requestBuilder33.setheaders(headerList87);
        requestBuilder1.setheaders(headerList87);
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(headerList35);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNotNull(requestBuilder40);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(headerList44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNull(headerList48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNull(converter55);
        org.junit.Assert.assertNull(headerList56);
        org.junit.Assert.assertNotNull(headerArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(typedOutput76);
        org.junit.Assert.assertNotNull(objArray77);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNull(typedOutput85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNotNull(headerList87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder89);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        java.lang.String str11 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.apiUrl;
        java.lang.String str37 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList38 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        java.lang.String str41 = requestBuilder40.apiUrl;
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.converter.Converter converter44 = requestBuilder43.getconverter();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        java.lang.Object[] objArray72 = requestBuilder46.getargs();
        retrofit.RequestBuilder requestBuilder73 = requestBuilder43.args(objArray72);
        requestBuilder40.setargs(objArray72);
        java.lang.String str75 = requestBuilder40.getapiUrl();
        java.lang.String str76 = requestBuilder40.getapiUrl();
        java.lang.Object[] objArray77 = requestBuilder40.getargs();
        requestBuilder1.setargs(objArray77);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(headerList38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertNotNull(requestBuilder73);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(objArray77);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        requestBuilder1.apiUrl = "";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("hi!", "", headerList42, typedOutput45);
        java.util.List<retrofit.client.Header> headerList47 = request46.getHeaders();
        java.util.List<retrofit.client.Header> headerList48 = request46.headers;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(headerList47);
        org.junit.Assert.assertNotNull(headerList48);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(headerList31);
        org.junit.Assert.assertNull(converter32);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        retrofit.converter.Converter converter45 = null;
        retrofit.RequestBuilder requestBuilder46 = new retrofit.RequestBuilder(converter45);
        retrofit.client.Header[] headerArray49 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList50 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList50, headerArray49);
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList50, typedOutput52);
        requestBuilder46.setheaders((java.util.List<retrofit.client.Header>) headerList50);
        retrofit.converter.Converter converter58 = null;
        retrofit.RequestBuilder requestBuilder59 = new retrofit.RequestBuilder(converter58);
        retrofit.converter.Converter converter60 = requestBuilder59.getconverter();
        java.util.List<retrofit.client.Header> headerList61 = requestBuilder59.headers;
        requestBuilder59.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList66 = null;
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("", "", headerList66, typedOutput67);
        java.lang.String str69 = request68.getUrl();
        java.lang.Object[] objArray70 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder59, request68 };
        requestBuilder46.setargs(objArray70);
        requestBuilder46.apiUrl = "";
        retrofit.RequestBuilder requestBuilder75 = requestBuilder46.apiUrl("hi!");
        retrofit.converter.Converter converter76 = null;
        retrofit.RequestBuilder requestBuilder77 = new retrofit.RequestBuilder(converter76);
        java.util.List<retrofit.client.Header> headerList80 = null;
        retrofit.mime.TypedOutput typedOutput81 = null;
        retrofit.client.Request request82 = new retrofit.client.Request("", "", headerList80, typedOutput81);
        retrofit.mime.TypedOutput typedOutput83 = request82.getBody();
        retrofit.mime.TypedOutput typedOutput84 = request82.getBody();
        java.util.List<retrofit.client.Header> headerList85 = request82.headers;
        requestBuilder77.setheaders(headerList85);
        retrofit.RequestBuilder requestBuilder87 = requestBuilder46.headers(headerList85);
        retrofit.RequestBuilder requestBuilder88 = requestBuilder1.headers(headerList85);
        java.lang.Object[] objArray89 = null;
        retrofit.RequestBuilder requestBuilder90 = requestBuilder88.args(objArray89);
        java.util.List<retrofit.client.Header> headerList91 = requestBuilder90.getheaders();
        retrofit.converter.Converter converter92 = requestBuilder90.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str93 = requestBuilder90.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(headerArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(converter60);
        org.junit.Assert.assertNull(headerList61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNull(typedOutput84);
        org.junit.Assert.assertNotNull(headerList85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNotNull(headerList91);
        org.junit.Assert.assertNull(converter92);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        java.lang.String str38 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        retrofit.converter.Converter converter41 = requestBuilder40.getconverter();
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        requestBuilder43.setheaders((java.util.List<retrofit.client.Header>) headerList47);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder56.headers;
        requestBuilder56.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder56, request65 };
        requestBuilder43.setargs(objArray67);
        java.lang.Object[] objArray69 = requestBuilder43.getargs();
        retrofit.RequestBuilder requestBuilder70 = requestBuilder40.args(objArray69);
        requestBuilder37.setargs(objArray69);
        retrofit.RequestBuilder requestBuilder72 = requestBuilder1.args(objArray69);
        retrofit.converter.Converter converter73 = requestBuilder1.getconverter();
        retrofit.RequestBuilder requestBuilder75 = requestBuilder1.apiUrl("");
        requestBuilder1.setapiUrl("");
        retrofit.converter.Converter converter78 = requestBuilder1.converter;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNull(converter73);
        org.junit.Assert.assertNotNull(requestBuilder75);
        org.junit.Assert.assertNull(converter78);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("hi!", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.util.List<retrofit.client.Header> headerList36 = request33.getHeaders();
        java.util.List<retrofit.client.Header> headerList37 = request33.getHeaders();
        java.lang.String str38 = request33.getMethod();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertNotNull(headerList37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request46 = requestBuilder45.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        java.lang.String str35 = requestBuilder34.getapiUrl();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput36 = requestBuilder34.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        java.lang.Object[] objArray29 = requestBuilder3.getargs();
        java.lang.String str30 = requestBuilder3.apiUrl;
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        retrofit.mime.TypedOutput typedOutput37 = request35.body;
        java.util.List<retrofit.client.Header> headerList38 = request35.getHeaders();
        requestBuilder3.setheaders(headerList38);
        java.util.List<retrofit.client.Header> headerList40 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("hi!", "hi!", headerList40, typedOutput41);
        java.lang.String str43 = request42.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.RequestBuilder requestBuilder3 = requestBuilder1.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList10 = null;
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("", "", headerList10, typedOutput11);
        retrofit.mime.TypedOutput typedOutput13 = request12.getBody();
        retrofit.mime.TypedOutput typedOutput14 = request12.getBody();
        java.util.List<retrofit.client.Header> headerList15 = request12.headers;
        java.util.List<retrofit.client.Header> headerList16 = request12.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", headerList16, typedOutput17);
        java.util.List<retrofit.client.Header> headerList19 = request18.headers;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("hi!", "", headerList19, typedOutput20);
        java.util.List<retrofit.client.Header> headerList22 = request21.headers;
        retrofit.RequestBuilder requestBuilder23 = requestBuilder1.headers(headerList22);
        retrofit.converter.Converter converter24 = null;
        retrofit.RequestBuilder requestBuilder25 = new retrofit.RequestBuilder(converter24);
        retrofit.client.Header[] headerArray28 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList29 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList29, headerArray28);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList29, typedOutput31);
        requestBuilder25.setheaders((java.util.List<retrofit.client.Header>) headerList29);
        retrofit.converter.Converter converter37 = null;
        retrofit.RequestBuilder requestBuilder38 = new retrofit.RequestBuilder(converter37);
        retrofit.converter.Converter converter39 = requestBuilder38.getconverter();
        java.util.List<retrofit.client.Header> headerList40 = requestBuilder38.headers;
        requestBuilder38.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList45 = null;
        retrofit.mime.TypedOutput typedOutput46 = null;
        retrofit.client.Request request47 = new retrofit.client.Request("", "", headerList45, typedOutput46);
        java.lang.String str48 = request47.getUrl();
        java.lang.Object[] objArray49 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder38, request47 };
        requestBuilder25.setargs(objArray49);
        requestBuilder25.apiUrl = "";
        retrofit.RequestBuilder requestBuilder54 = requestBuilder25.apiUrl("hi!");
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        java.util.List<retrofit.client.Header> headerList59 = null;
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("", "", headerList59, typedOutput60);
        retrofit.mime.TypedOutput typedOutput62 = request61.getBody();
        retrofit.mime.TypedOutput typedOutput63 = request61.getBody();
        java.util.List<retrofit.client.Header> headerList64 = request61.headers;
        requestBuilder56.setheaders(headerList64);
        retrofit.RequestBuilder requestBuilder66 = requestBuilder25.headers(headerList64);
        java.lang.Object[] objArray67 = requestBuilder25.getargs();
        java.util.List<retrofit.client.Header> headerList68 = requestBuilder25.headers;
        requestBuilder1.setheaders(headerList68);
        org.junit.Assert.assertNotNull(requestBuilder3);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNull(typedOutput14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertNotNull(requestBuilder23);
        org.junit.Assert.assertNotNull(headerArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(headerList40);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(requestBuilder54);
        org.junit.Assert.assertNull(typedOutput62);
        org.junit.Assert.assertNull(typedOutput63);
        org.junit.Assert.assertNotNull(headerList64);
        org.junit.Assert.assertNotNull(requestBuilder66);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(headerList68);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        retrofit.converter.Converter converter85 = requestBuilder84.converter;
        java.lang.Object[] objArray86 = null;
        retrofit.RequestBuilder requestBuilder87 = requestBuilder84.args(objArray86);
        requestBuilder84.apiUrl = "";
        retrofit.converter.Converter converter90 = requestBuilder84.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass91 = converter90.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(converter85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNull(converter90);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.method;
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        retrofit.converter.Converter converter38 = null;
        retrofit.RequestBuilder requestBuilder39 = new retrofit.RequestBuilder(converter38);
        retrofit.converter.Converter converter40 = requestBuilder39.getconverter();
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.client.Header[] headerArray45 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList46 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList46, headerArray45);
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList46, typedOutput48);
        requestBuilder42.setheaders((java.util.List<retrofit.client.Header>) headerList46);
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        retrofit.converter.Converter converter56 = requestBuilder55.getconverter();
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder55.headers;
        requestBuilder55.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        java.lang.Object[] objArray66 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder55, request64 };
        requestBuilder42.setargs(objArray66);
        java.lang.Object[] objArray68 = requestBuilder42.getargs();
        retrofit.RequestBuilder requestBuilder69 = requestBuilder39.args(objArray68);
        retrofit.RequestBuilder requestBuilder70 = requestBuilder37.args(objArray68);
        retrofit.converter.Converter converter71 = requestBuilder37.getconverter();
        requestBuilder37.apiUrl = "hi!";
        java.lang.Object[] objArray74 = requestBuilder37.getargs();
        java.lang.Object[] objArray75 = requestBuilder37.args;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(converter40);
        org.junit.Assert.assertNotNull(headerArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNull(headerList57);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNull(converter71);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertNotNull(objArray75);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = request35.getBody();
        retrofit.mime.TypedOutput typedOutput37 = request35.getBody();
        java.util.List<retrofit.client.Header> headerList38 = request35.headers;
        requestBuilder30.setheaders(headerList38);
        requestBuilder1.setheaders(headerList38);
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.client.Header[] headerArray45 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList46 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList46, headerArray45);
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList46, typedOutput48);
        requestBuilder42.setheaders((java.util.List<retrofit.client.Header>) headerList46);
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        retrofit.converter.Converter converter56 = requestBuilder55.getconverter();
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder55.headers;
        requestBuilder55.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        java.lang.Object[] objArray66 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder55, request64 };
        requestBuilder42.setargs(objArray66);
        retrofit.RequestBuilder requestBuilder69 = requestBuilder42.apiUrl("");
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder42.headers;
        requestBuilder1.setheaders(headerList70);
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter74 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter75 = requestBuilder1.getconverter();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNotNull(headerArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(converter56);
        org.junit.Assert.assertNull(headerList57);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNotNull(headerList70);
        org.junit.Assert.assertNull(converter74);
        org.junit.Assert.assertNull(converter75);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder34.headers;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(headerList35);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        java.lang.String str9 = request4.url;
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.method;
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        java.lang.String str14 = requestBuilder5.getapiUrl();
        retrofit.RequestBuilder requestBuilder16 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.url;
        java.util.List<retrofit.client.Header> headerList23 = request21.getHeaders();
        java.util.List<retrofit.client.Header> headerList24 = request21.getHeaders();
        requestBuilder5.headers = headerList24;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList24, typedOutput26);
        java.lang.String str28 = request27.getMethod();
        retrofit.mime.TypedOutput typedOutput29 = request27.getBody();
        java.util.List<retrofit.client.Header> headerList30 = request27.getHeaders();
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "hi!", headerList30, typedOutput31);
        java.util.List<retrofit.client.Header> headerList33 = request32.getHeaders();
        java.lang.String str34 = request32.getUrl();
        java.lang.String str35 = request32.url;
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(requestBuilder16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(headerList23);
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(typedOutput29);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        java.lang.Object[] objArray31 = requestBuilder5.getargs();
        java.lang.String str32 = requestBuilder5.apiUrl;
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        java.lang.String str38 = request37.getUrl();
        retrofit.mime.TypedOutput typedOutput39 = request37.body;
        java.util.List<retrofit.client.Header> headerList40 = request37.getHeaders();
        requestBuilder5.setheaders(headerList40);
        retrofit.mime.TypedOutput typedOutput42 = null;
        retrofit.client.Request request43 = new retrofit.client.Request("", "hi!", headerList40, typedOutput42);
        java.lang.String str44 = request43.getUrl();
        java.util.List<retrofit.client.Header> headerList45 = request43.headers;
        retrofit.mime.TypedOutput typedOutput46 = null;
        retrofit.client.Request request47 = new retrofit.client.Request("hi!", "hi!", headerList45, typedOutput46);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertNotNull(headerList45);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.getUrl();
        java.lang.String str9 = request4.getMethod();
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.method;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.client.Header[] headerArray15 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList16 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList16, headerArray15);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList16, typedOutput18);
        requestBuilder12.setheaders((java.util.List<retrofit.client.Header>) headerList16);
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder12.getheaders();
        java.lang.String str22 = requestBuilder12.getapiUrl();
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.client.Header[] headerArray27 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList28 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList28, headerArray27);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList28, typedOutput30);
        requestBuilder24.setheaders((java.util.List<retrofit.client.Header>) headerList28);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        requestBuilder37.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList44 = null;
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("", "", headerList44, typedOutput45);
        java.lang.String str47 = request46.getUrl();
        java.lang.Object[] objArray48 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder37, request46 };
        requestBuilder24.setargs(objArray48);
        requestBuilder24.apiUrl = "";
        retrofit.RequestBuilder requestBuilder53 = requestBuilder24.apiUrl("hi!");
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        retrofit.mime.TypedOutput typedOutput61 = request60.getBody();
        retrofit.mime.TypedOutput typedOutput62 = request60.getBody();
        java.util.List<retrofit.client.Header> headerList63 = request60.headers;
        requestBuilder55.setheaders(headerList63);
        retrofit.RequestBuilder requestBuilder65 = requestBuilder24.headers(headerList63);
        requestBuilder12.headers = headerList63;
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.url;
        java.util.List<retrofit.client.Header> headerList73 = request71.getHeaders();
        requestBuilder12.headers = headerList73;
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder12.headers;
        requestBuilder1.setheaders(headerList75);
        retrofit.converter.Converter converter77 = requestBuilder1.getconverter();
        java.lang.String str78 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(headerArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(headerList39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(requestBuilder53);
        org.junit.Assert.assertNull(typedOutput61);
        org.junit.Assert.assertNull(typedOutput62);
        org.junit.Assert.assertNotNull(headerList63);
        org.junit.Assert.assertNotNull(requestBuilder65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertNull(converter77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.getapiUrl();
        java.lang.String str37 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter40 = null;
        retrofit.RequestBuilder requestBuilder41 = new retrofit.RequestBuilder(converter40);
        retrofit.client.Header[] headerArray44 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList45 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList45, headerArray44);
        retrofit.mime.TypedOutput typedOutput47 = null;
        retrofit.client.Request request48 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList45, typedOutput47);
        requestBuilder41.setheaders((java.util.List<retrofit.client.Header>) headerList45);
        java.lang.String str50 = requestBuilder41.getapiUrl();
        retrofit.RequestBuilder requestBuilder52 = requestBuilder41.apiUrl("");
        java.util.List<retrofit.client.Header> headerList55 = null;
        retrofit.mime.TypedOutput typedOutput56 = null;
        retrofit.client.Request request57 = new retrofit.client.Request("", "", headerList55, typedOutput56);
        java.lang.String str58 = request57.url;
        java.util.List<retrofit.client.Header> headerList59 = request57.getHeaders();
        java.util.List<retrofit.client.Header> headerList60 = request57.getHeaders();
        requestBuilder41.headers = headerList60;
        retrofit.mime.TypedOutput typedOutput62 = null;
        retrofit.client.Request request63 = new retrofit.client.Request("", "", headerList60, typedOutput62);
        requestBuilder1.setheaders(headerList60);
        java.util.List<retrofit.client.Header> headerList65 = requestBuilder1.getheaders();
        requestBuilder1.setapiUrl("");
        java.util.List<retrofit.client.Header> headerList68 = requestBuilder1.getheaders();
        java.lang.Class<?> wildcardClass69 = requestBuilder1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(headerArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(headerList59);
        org.junit.Assert.assertNotNull(headerList60);
        org.junit.Assert.assertNotNull(headerList65);
        org.junit.Assert.assertNotNull(headerList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder10 = requestBuilder8.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList11 = requestBuilder8.headers;
        retrofit.converter.Converter converter12 = requestBuilder8.converter;
        java.lang.String str13 = requestBuilder8.apiUrl;
        retrofit.converter.Converter converter14 = requestBuilder8.converter;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNotNull(requestBuilder10);
        org.junit.Assert.assertNull(headerList11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(converter14);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.getUrl();
        java.lang.Class<?> wildcardClass9 = request4.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.client.Header[] headerArray15 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList16 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList16, headerArray15);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList16, typedOutput18);
        requestBuilder12.setheaders((java.util.List<retrofit.client.Header>) headerList16);
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder12.getheaders();
        java.lang.String str22 = requestBuilder12.getapiUrl();
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.client.Header[] headerArray27 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList28 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList28, headerArray27);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList28, typedOutput30);
        requestBuilder24.setheaders((java.util.List<retrofit.client.Header>) headerList28);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        requestBuilder37.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList44 = null;
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("", "", headerList44, typedOutput45);
        java.lang.String str47 = request46.getUrl();
        java.lang.Object[] objArray48 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder37, request46 };
        requestBuilder24.setargs(objArray48);
        requestBuilder24.apiUrl = "";
        retrofit.RequestBuilder requestBuilder53 = requestBuilder24.apiUrl("hi!");
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        retrofit.mime.TypedOutput typedOutput61 = request60.getBody();
        retrofit.mime.TypedOutput typedOutput62 = request60.getBody();
        java.util.List<retrofit.client.Header> headerList63 = request60.headers;
        requestBuilder55.setheaders(headerList63);
        retrofit.RequestBuilder requestBuilder65 = requestBuilder24.headers(headerList63);
        requestBuilder12.headers = headerList63;
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.url;
        java.util.List<retrofit.client.Header> headerList73 = request71.getHeaders();
        requestBuilder12.headers = headerList73;
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder12.headers;
        requestBuilder1.setheaders(headerList75);
        retrofit.converter.Converter converter77 = requestBuilder1.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str78 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(headerArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(headerList39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(requestBuilder53);
        org.junit.Assert.assertNull(typedOutput61);
        org.junit.Assert.assertNull(typedOutput62);
        org.junit.Assert.assertNotNull(headerList63);
        org.junit.Assert.assertNotNull(requestBuilder65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertNull(converter77);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        java.lang.String str10 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = typedOutput9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("", "", headerList9, typedOutput10);
        java.lang.String str12 = request11.method;
        java.lang.String str13 = request11.getMethod();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput10 = request6.body;
        java.util.List<retrofit.client.Header> headerList11 = request6.headers;
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("hi!", "hi!", headerList11, typedOutput12);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.method;
        java.lang.String str37 = request33.method;
        java.util.List<retrofit.client.Header> headerList38 = request33.headers;
        retrofit.mime.TypedOutput typedOutput39 = request33.body;
        java.util.List<retrofit.client.Header> headerList40 = request33.getHeaders();
        java.lang.String str41 = request33.method;
        retrofit.mime.TypedOutput typedOutput42 = request33.body;
        java.lang.String str43 = request33.getUrl();
        java.lang.String str44 = request33.method;
        retrofit.mime.TypedOutput typedOutput45 = request33.getBody();
        java.util.List<retrofit.client.Header> headerList46 = request33.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(typedOutput45);
        org.junit.Assert.assertNotNull(headerList46);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList33, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.body;
        java.lang.String str39 = request37.url;
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        requestBuilder8.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList11 = requestBuilder8.getheaders();
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        requestBuilder13.setheaders((java.util.List<retrofit.client.Header>) headerList17);
        retrofit.converter.Converter converter25 = null;
        retrofit.RequestBuilder requestBuilder26 = new retrofit.RequestBuilder(converter25);
        retrofit.converter.Converter converter27 = requestBuilder26.getconverter();
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder26.headers;
        requestBuilder26.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder26, request35 };
        requestBuilder13.setargs(objArray37);
        retrofit.RequestBuilder requestBuilder40 = requestBuilder13.apiUrl("");
        java.util.List<retrofit.client.Header> headerList41 = requestBuilder13.headers;
        java.lang.Object[] objArray42 = requestBuilder13.args;
        retrofit.RequestBuilder requestBuilder43 = requestBuilder8.args(objArray42);
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput44 = requestBuilder8.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(headerList11);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(requestBuilder40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(requestBuilder43);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList15 = null;
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "", headerList15, typedOutput16);
        java.lang.String str18 = request17.url;
        java.util.List<retrofit.client.Header> headerList19 = request17.getHeaders();
        java.util.List<retrofit.client.Header> headerList20 = request17.getHeaders();
        requestBuilder1.headers = headerList20;
        retrofit.RequestBuilder requestBuilder23 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray24 = null;
        retrofit.RequestBuilder requestBuilder25 = requestBuilder23.args(objArray24);
        java.util.List<retrofit.client.Header> headerList26 = requestBuilder23.headers;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNotNull(requestBuilder23);
        org.junit.Assert.assertNotNull(requestBuilder25);
        org.junit.Assert.assertNotNull(headerList26);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        java.lang.String str81 = request80.url;
        java.lang.String str82 = request80.url;
        retrofit.mime.TypedOutput typedOutput83 = request80.body;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!" + "'", str82, "hi!");
        org.junit.Assert.assertNull(typedOutput83);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        java.lang.String str9 = request4.url;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.url;
        java.lang.String str12 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput13 = request4.getBody();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        retrofit.mime.TypedOutput typedOutput9 = request6.getBody();
        java.lang.String str10 = request6.getUrl();
        java.lang.String str11 = request6.method;
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        java.lang.String str13 = request6.getMethod();
        java.lang.String str14 = request6.getUrl();
        java.lang.Class<?> wildcardClass15 = request6.getClass();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.converter.Converter converter14 = requestBuilder13.getconverter();
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder13.headers;
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.client.Header[] headerArray23 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList24 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList24, headerArray23);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList24, typedOutput26);
        requestBuilder20.setheaders((java.util.List<retrofit.client.Header>) headerList24);
        java.util.List<retrofit.client.Header> headerList31 = null;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.getUrl();
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.lang.Object[] objArray36 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder20, typedOutput35 };
        requestBuilder13.setargs(objArray36);
        java.util.List<retrofit.client.Header> headerList40 = null;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList40, typedOutput41);
        retrofit.mime.TypedOutput typedOutput43 = request42.getBody();
        retrofit.mime.TypedOutput typedOutput44 = request42.getBody();
        java.lang.String str45 = request42.getUrl();
        java.util.List<retrofit.client.Header> headerList46 = request42.headers;
        retrofit.RequestBuilder requestBuilder47 = requestBuilder13.headers(headerList46);
        retrofit.RequestBuilder requestBuilder48 = requestBuilder1.headers(headerList46);
        java.util.List<retrofit.client.Header> headerList51 = null;
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "", headerList51, typedOutput52);
        java.lang.String str54 = request53.url;
        java.lang.String str55 = request53.url;
        java.util.List<retrofit.client.Header> headerList56 = request53.getHeaders();
        requestBuilder48.setheaders(headerList56);
        java.lang.Object[] objArray58 = requestBuilder48.args;
        retrofit.converter.Converter converter59 = requestBuilder48.getconverter();
        java.lang.String str60 = requestBuilder48.getapiUrl();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(headerList15);
        org.junit.Assert.assertNotNull(headerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNull(typedOutput44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(requestBuilder48);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNull(objArray58);
        org.junit.Assert.assertNull(converter59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.getUrl();
        java.lang.String str10 = request6.getUrl();
        java.lang.String str11 = request6.getUrl();
        java.lang.String str12 = request6.getUrl();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.url;
        retrofit.mime.TypedOutput typedOutput13 = request4.getBody();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter9 = requestBuilder1.converter;
        retrofit.converter.Converter converter10 = null;
        retrofit.RequestBuilder requestBuilder11 = new retrofit.RequestBuilder(converter10);
        java.lang.String str12 = requestBuilder11.apiUrl;
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.client.Header[] headerArray20 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList21 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList21, headerArray20);
        retrofit.mime.TypedOutput typedOutput23 = null;
        retrofit.client.Request request24 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList21, typedOutput23);
        requestBuilder17.setheaders((java.util.List<retrofit.client.Header>) headerList21);
        retrofit.converter.Converter converter29 = null;
        retrofit.RequestBuilder requestBuilder30 = new retrofit.RequestBuilder(converter29);
        retrofit.converter.Converter converter31 = requestBuilder30.getconverter();
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder30.headers;
        requestBuilder30.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        java.lang.String str40 = request39.getUrl();
        java.lang.Object[] objArray41 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder30, request39 };
        requestBuilder17.setargs(objArray41);
        java.lang.Object[] objArray43 = requestBuilder17.getargs();
        retrofit.RequestBuilder requestBuilder44 = requestBuilder14.args(objArray43);
        requestBuilder11.setargs(objArray43);
        requestBuilder1.setargs(objArray43);
        java.util.List<retrofit.client.Header> headerList47 = requestBuilder1.headers;
        java.util.List<retrofit.client.Header> headerList48 = requestBuilder1.headers;
        java.lang.String str49 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder51 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList54 = null;
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("", "", headerList54, typedOutput55);
        java.lang.String str57 = request56.url;
        java.lang.String str58 = request56.url;
        java.lang.String str59 = request56.getMethod();
        java.lang.String str60 = request56.url;
        java.util.List<retrofit.client.Header> headerList61 = request56.getHeaders();
        java.lang.String str62 = request56.getUrl();
        java.lang.String str63 = request56.getUrl();
        java.lang.String str64 = request56.method;
        java.util.List<retrofit.client.Header> headerList65 = request56.getHeaders();
        retrofit.RequestBuilder requestBuilder66 = requestBuilder51.headers(headerList65);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str67 = requestBuilder51.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNotNull(headerArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNull(headerList47);
        org.junit.Assert.assertNull(headerList48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder51);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(headerList61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(headerList65);
        org.junit.Assert.assertNotNull(requestBuilder66);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.String str27 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder29 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        requestBuilder1.apiUrl = "";
        java.lang.Object[] objArray33 = requestBuilder1.getargs();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(requestBuilder29);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNotNull(objArray33);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request6.body;
        java.lang.String str10 = request6.method;
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request6.body;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request49.headers;
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder1.headers = headerList52;
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList56 = requestBuilder1.getheaders();
        requestBuilder1.setapiUrl("hi!");
        retrofit.RequestBuilder requestBuilder60 = requestBuilder1.apiUrl("");
        requestBuilder60.apiUrl = "";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str63 = requestBuilder60.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(requestBuilder60);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.lang.String str9 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.util.List<retrofit.client.Header> headerList7 = request6.getHeaders();
        java.lang.String str8 = request6.url;
        java.lang.String str9 = request6.url;
        java.lang.String str10 = request6.method;
        retrofit.mime.TypedOutput typedOutput11 = request6.getBody();
        java.lang.String str12 = request6.getMethod();
        retrofit.mime.TypedOutput typedOutput13 = request6.body;
        java.lang.String str14 = request6.url;
        java.util.List<retrofit.client.Header> headerList15 = request6.getHeaders();
        java.lang.String str16 = request6.getMethod();
        java.lang.String str17 = request6.url;
        java.util.List<retrofit.client.Header> headerList18 = request6.getHeaders();
        java.lang.String str19 = request6.getMethod();
        java.lang.String str20 = request6.url;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.apiUrl;
        java.lang.String str37 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList38 = requestBuilder1.getheaders();
        requestBuilder1.setapiUrl("hi!");
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.apiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput43 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(headerList38);
        org.junit.Assert.assertNotNull(requestBuilder42);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        java.lang.Object[] objArray29 = requestBuilder3.getargs();
        java.lang.String str30 = requestBuilder3.apiUrl;
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        retrofit.mime.TypedOutput typedOutput37 = request35.body;
        java.util.List<retrofit.client.Header> headerList38 = request35.getHeaders();
        requestBuilder3.setheaders(headerList38);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "hi!", headerList38, typedOutput40);
        java.lang.String str42 = request41.getUrl();
        java.util.List<retrofit.client.Header> headerList43 = request41.headers;
        java.lang.Class<?> wildcardClass44 = request41.getClass();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(headerList43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.RequestBuilder requestBuilder3 = requestBuilder1.apiUrl("hi!");
        java.lang.String str4 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder6 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.converter.Converter converter9 = requestBuilder8.getconverter();
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder8.headers;
        requestBuilder8.setapiUrl("hi!");
        java.lang.String str13 = requestBuilder8.apiUrl;
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder8.headers;
        java.lang.String str15 = requestBuilder8.getapiUrl();
        java.lang.String str16 = requestBuilder8.apiUrl;
        java.lang.String str17 = requestBuilder8.apiUrl;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        java.lang.String str20 = requestBuilder19.apiUrl;
        retrofit.converter.Converter converter21 = null;
        retrofit.RequestBuilder requestBuilder22 = new retrofit.RequestBuilder(converter21);
        retrofit.converter.Converter converter23 = requestBuilder22.getconverter();
        retrofit.converter.Converter converter24 = null;
        retrofit.RequestBuilder requestBuilder25 = new retrofit.RequestBuilder(converter24);
        retrofit.client.Header[] headerArray28 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList29 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList29, headerArray28);
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList29, typedOutput31);
        requestBuilder25.setheaders((java.util.List<retrofit.client.Header>) headerList29);
        retrofit.converter.Converter converter37 = null;
        retrofit.RequestBuilder requestBuilder38 = new retrofit.RequestBuilder(converter37);
        retrofit.converter.Converter converter39 = requestBuilder38.getconverter();
        java.util.List<retrofit.client.Header> headerList40 = requestBuilder38.headers;
        requestBuilder38.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList45 = null;
        retrofit.mime.TypedOutput typedOutput46 = null;
        retrofit.client.Request request47 = new retrofit.client.Request("", "", headerList45, typedOutput46);
        java.lang.String str48 = request47.getUrl();
        java.lang.Object[] objArray49 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder38, request47 };
        requestBuilder25.setargs(objArray49);
        java.lang.Object[] objArray51 = requestBuilder25.getargs();
        retrofit.RequestBuilder requestBuilder52 = requestBuilder22.args(objArray51);
        requestBuilder19.setargs(objArray51);
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        java.lang.String str56 = requestBuilder55.apiUrl;
        retrofit.converter.Converter converter57 = null;
        retrofit.RequestBuilder requestBuilder58 = new retrofit.RequestBuilder(converter57);
        retrofit.converter.Converter converter59 = requestBuilder58.getconverter();
        retrofit.converter.Converter converter60 = null;
        retrofit.RequestBuilder requestBuilder61 = new retrofit.RequestBuilder(converter60);
        retrofit.client.Header[] headerArray64 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList65 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList65, headerArray64);
        retrofit.mime.TypedOutput typedOutput67 = null;
        retrofit.client.Request request68 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList65, typedOutput67);
        requestBuilder61.setheaders((java.util.List<retrofit.client.Header>) headerList65);
        retrofit.converter.Converter converter73 = null;
        retrofit.RequestBuilder requestBuilder74 = new retrofit.RequestBuilder(converter73);
        retrofit.converter.Converter converter75 = requestBuilder74.getconverter();
        java.util.List<retrofit.client.Header> headerList76 = requestBuilder74.headers;
        requestBuilder74.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList81 = null;
        retrofit.mime.TypedOutput typedOutput82 = null;
        retrofit.client.Request request83 = new retrofit.client.Request("", "", headerList81, typedOutput82);
        java.lang.String str84 = request83.getUrl();
        java.lang.Object[] objArray85 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder74, request83 };
        requestBuilder61.setargs(objArray85);
        java.lang.Object[] objArray87 = requestBuilder61.getargs();
        retrofit.RequestBuilder requestBuilder88 = requestBuilder58.args(objArray87);
        requestBuilder55.setargs(objArray87);
        retrofit.RequestBuilder requestBuilder90 = requestBuilder19.args(objArray87);
        retrofit.RequestBuilder requestBuilder91 = requestBuilder8.args(objArray87);
        requestBuilder1.setargs(objArray87);
        java.lang.String str93 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNotNull(requestBuilder3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder6);
        org.junit.Assert.assertNull(converter9);
        org.junit.Assert.assertNull(headerList10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(converter23);
        org.junit.Assert.assertNotNull(headerArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(headerList40);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(converter59);
        org.junit.Assert.assertNotNull(headerArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(converter75);
        org.junit.Assert.assertNull(headerList76);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertNotNull(requestBuilder88);
        org.junit.Assert.assertNotNull(requestBuilder90);
        org.junit.Assert.assertNotNull(requestBuilder91);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "hi!" + "'", str93, "hi!");
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList6 = request4.headers;
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.url;
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.body;
        java.util.List<retrofit.client.Header> headerList6 = request4.headers;
        java.lang.String str7 = request4.method;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        java.lang.Object[] objArray47 = requestBuilder5.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder5.apiUrl("hi!");
        java.lang.Object[] objArray50 = new java.lang.Object[] {};
        requestBuilder5.args = objArray50;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder1.args(objArray50);
        retrofit.RequestBuilder requestBuilder54 = requestBuilder52.apiUrl("");
        retrofit.RequestBuilder requestBuilder56 = requestBuilder52.apiUrl("hi!");
        java.lang.Object[] objArray57 = requestBuilder56.args;
        requestBuilder56.apiUrl = "";
        java.lang.Class<?> wildcardClass60 = requestBuilder56.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNotNull(requestBuilder54);
        org.junit.Assert.assertNotNull(requestBuilder56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        java.lang.Object[] objArray47 = requestBuilder5.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder5.apiUrl("hi!");
        java.lang.Object[] objArray50 = new java.lang.Object[] {};
        requestBuilder5.args = objArray50;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder1.args(objArray50);
        java.lang.Class<?> wildcardClass53 = objArray50.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList12 = null;
        requestBuilder1.setheaders(headerList12);
        requestBuilder1.apiUrl = "hi!";
        requestBuilder1.apiUrl = "";
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str20 = requestBuilder1.apiUrl;
        requestBuilder1.setapiUrl("hi!");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList13 = null;
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = request15.getBody();
        java.lang.String str17 = request15.getMethod();
        java.util.List<retrofit.client.Header> headerList18 = request15.getHeaders();
        retrofit.RequestBuilder requestBuilder19 = requestBuilder1.headers(headerList18);
        java.lang.String str20 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNotNull(requestBuilder19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.method;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        java.util.List<retrofit.client.Header> headerList9 = request8.getHeaders();
        java.lang.String str10 = request8.url;
        java.lang.String str11 = request8.url;
        java.lang.String str12 = request8.method;
        retrofit.mime.TypedOutput typedOutput13 = request8.getBody();
        java.lang.String str14 = request8.getMethod();
        java.util.List<retrofit.client.Header> headerList15 = request8.headers;
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "", headerList15, typedOutput16);
        java.lang.Class<?> wildcardClass18 = headerList15.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        java.lang.String str9 = request8.url;
        java.lang.String str10 = request8.url;
        java.lang.String str11 = request8.getUrl();
        java.lang.String str12 = request8.url;
        java.lang.String str13 = request8.url;
        java.util.List<retrofit.client.Header> headerList14 = request8.headers;
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList14, typedOutput15);
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("hi!", "hi!", headerList14, typedOutput17);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(headerList14);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request49.headers;
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder1.headers = headerList52;
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList56 = requestBuilder1.getheaders();
        requestBuilder1.setapiUrl("hi!");
        retrofit.RequestBuilder requestBuilder60 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray61 = requestBuilder60.getargs();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str62 = requestBuilder60.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(requestBuilder60);
        org.junit.Assert.assertNotNull(objArray61);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        java.lang.String str8 = request6.getMethod();
        java.lang.String str9 = request6.getMethod();
        java.lang.String str10 = request6.getUrl();
        java.util.List<retrofit.client.Header> headerList11 = request6.headers;
        java.util.List<retrofit.client.Header> headerList12 = request6.headers;
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList15);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = request35.body;
        retrofit.mime.TypedOutput typedOutput37 = request35.body;
        java.util.List<retrofit.client.Header> headerList38 = request35.headers;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNull(typedOutput36);
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertNotNull(headerList38);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        java.lang.String str9 = request8.url;
        java.util.List<retrofit.client.Header> headerList10 = request8.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request8.getHeaders();
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        java.util.List<retrofit.client.Header> headerList13 = request8.headers;
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", headerList13, typedOutput14);
        java.util.List<retrofit.client.Header> headerList16 = request15.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "", headerList16, typedOutput17);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(headerList16);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = requestBuilder1.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(converter3);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        retrofit.mime.TypedOutput typedOutput8 = request4.getBody();
        java.lang.String str9 = request4.url;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.url;
        java.lang.String str12 = request4.getUrl();
        java.lang.String str13 = request4.url;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("hi!", "hi!", headerList33, typedOutput36);
        java.lang.String str38 = request37.getMethod();
        java.lang.String str39 = request37.method;
        java.lang.String str40 = request37.getUrl();
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.headers;
        java.lang.String str30 = requestBuilder1.getapiUrl();
        java.lang.Object[] objArray31 = requestBuilder1.getargs();
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str34 = requestBuilder1.apiUrl;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        java.lang.String str9 = request4.method;
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.util.List<retrofit.client.Header> headerList8 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput10 = request6.body;
        java.util.List<retrofit.client.Header> headerList11 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList12 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("", "hi!", headerList12, typedOutput13);
        java.lang.String str15 = request14.method;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        java.lang.String str10 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.getUrl();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput7 = request4.getBody();
        java.lang.Class<?> wildcardClass8 = request4.getClass();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder32.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("hi!", "", headerList33, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.body;
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNull(typedOutput38);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        java.lang.String str6 = request4.getMethod();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList9 = request4.getHeaders();
        java.lang.String str10 = request4.method;
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.RequestBuilder requestBuilder33 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter34 = requestBuilder33.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request35 = requestBuilder33.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNotNull(requestBuilder33);
        org.junit.Assert.assertNull(converter34);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str8 = requestBuilder1.apiUrl;
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter10 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(converter10);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.lang.String str10 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = request10.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request10.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request10.headers;
        java.util.List<retrofit.client.Header> headerList14 = request10.getHeaders();
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("hi!", "hi!", headerList14, typedOutput15);
        java.util.List<retrofit.client.Header> headerList17 = request16.getHeaders();
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "hi!", headerList17, typedOutput18);
        java.util.List<retrofit.client.Header> headerList20 = request19.getHeaders();
        retrofit.mime.TypedOutput typedOutput21 = null;
        retrofit.client.Request request22 = new retrofit.client.Request("hi!", "hi!", headerList20, typedOutput21);
        retrofit.mime.TypedOutput typedOutput23 = request22.body;
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNotNull(headerList14);
        org.junit.Assert.assertNotNull(headerList17);
        org.junit.Assert.assertNotNull(headerList20);
        org.junit.Assert.assertNull(typedOutput23);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        java.lang.String str38 = requestBuilder37.getapiUrl();
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(headerList39);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.lang.String str7 = request4.getMethod();
        java.lang.String str8 = request4.method;
        java.lang.String str9 = request4.method;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        retrofit.mime.TypedOutput typedOutput11 = request4.body;
        java.lang.String str12 = request4.method;
        java.lang.String str13 = request4.getMethod();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray13 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList18 = null;
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", headerList18, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = request20.getBody();
        retrofit.mime.TypedOutput typedOutput22 = request20.getBody();
        java.lang.String str23 = request20.getMethod();
        java.lang.String str24 = request20.method;
        java.lang.String str25 = request20.method;
        java.util.List<retrofit.client.Header> headerList26 = request20.headers;
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "hi!", headerList26, typedOutput27);
        requestBuilder1.setheaders(headerList26);
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder1.headers;
        requestBuilder1.apiUrl = "";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(typedOutput21);
        org.junit.Assert.assertNull(typedOutput22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertNotNull(headerList30);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.client.Header[] headerArray11 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList12 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList12, headerArray11);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList12, typedOutput14);
        requestBuilder8.setheaders((java.util.List<retrofit.client.Header>) headerList12);
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        retrofit.mime.TypedOutput typedOutput23 = request21.body;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder8, typedOutput23 };
        requestBuilder1.setargs(objArray24);
        retrofit.converter.Converter converter26 = null;
        retrofit.RequestBuilder requestBuilder27 = new retrofit.RequestBuilder(converter26);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        retrofit.mime.TypedOutput typedOutput33 = request32.getBody();
        retrofit.mime.TypedOutput typedOutput34 = request32.getBody();
        java.util.List<retrofit.client.Header> headerList35 = request32.headers;
        requestBuilder27.setheaders(headerList35);
        retrofit.converter.Converter converter37 = null;
        retrofit.RequestBuilder requestBuilder38 = new retrofit.RequestBuilder(converter37);
        retrofit.converter.Converter converter39 = requestBuilder38.getconverter();
        java.util.List<retrofit.client.Header> headerList40 = requestBuilder38.headers;
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.client.Header[] headerArray48 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList49 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList49, headerArray48);
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList49, typedOutput51);
        requestBuilder45.setheaders((java.util.List<retrofit.client.Header>) headerList49);
        java.util.List<retrofit.client.Header> headerList56 = null;
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("", "", headerList56, typedOutput57);
        java.lang.String str59 = request58.getUrl();
        retrofit.mime.TypedOutput typedOutput60 = request58.body;
        java.lang.Object[] objArray61 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder45, typedOutput60 };
        requestBuilder38.setargs(objArray61);
        retrofit.RequestBuilder requestBuilder63 = requestBuilder27.args(objArray61);
        requestBuilder1.setargs(objArray61);
        java.lang.String str65 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList66 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.url;
        java.lang.String str73 = request71.url;
        retrofit.mime.TypedOutput typedOutput74 = request71.body;
        java.util.List<retrofit.client.Header> headerList75 = request71.getHeaders();
        java.util.List<retrofit.client.Header> headerList76 = request71.headers;
        requestBuilder1.setheaders(headerList76);
        java.util.List<retrofit.client.Header> headerList78 = requestBuilder1.getheaders();
        retrofit.RequestBuilder requestBuilder80 = requestBuilder1.apiUrl("hi!");
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNull(typedOutput33);
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertNull(converter39);
        org.junit.Assert.assertNull(headerList40);
        org.junit.Assert.assertNotNull(headerArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(typedOutput60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertNotNull(requestBuilder63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(headerList66);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNull(typedOutput74);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertNotNull(headerList76);
        org.junit.Assert.assertNotNull(headerList78);
        org.junit.Assert.assertNotNull(requestBuilder80);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.method;
        java.lang.String str8 = request4.url;
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getMethod();
        java.lang.String str10 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput13 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNull(typedOutput13);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        retrofit.RequestBuilder requestBuilder34 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder7.headers;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", headerList35, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", headerList35, typedOutput40);
        java.lang.String str42 = request41.method;
        java.lang.String str43 = request41.method;
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.url;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList12 = request4.headers;
        retrofit.mime.TypedOutput typedOutput13 = request4.body;
        java.util.List<retrofit.client.Header> headerList14 = request4.getHeaders();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertNotNull(headerList14);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList11, typedOutput13);
        java.lang.String str15 = request14.url;
        retrofit.mime.TypedOutput typedOutput16 = request14.getBody();
        java.lang.String str17 = request14.getUrl();
        java.lang.String str18 = request14.getMethod();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.method;
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        java.lang.String str12 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        retrofit.converter.Converter converter39 = requestBuilder37.getconverter();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(converter39);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder10 = requestBuilder8.apiUrl("hi!");
        java.lang.Class<?> wildcardClass11 = requestBuilder10.getClass();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNotNull(requestBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter46 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder48 = requestBuilder1.apiUrl("");
        requestBuilder48.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList53 = null;
        retrofit.mime.TypedOutput typedOutput54 = null;
        retrofit.client.Request request55 = new retrofit.client.Request("", "", headerList53, typedOutput54);
        retrofit.mime.TypedOutput typedOutput56 = request55.getBody();
        java.lang.String str57 = request55.getMethod();
        java.lang.String str58 = request55.getMethod();
        java.lang.String str59 = request55.getMethod();
        retrofit.mime.TypedOutput typedOutput60 = request55.getBody();
        java.util.List<retrofit.client.Header> headerList61 = request55.headers;
        java.util.List<retrofit.client.Header> headerList62 = request55.getHeaders();
        retrofit.RequestBuilder requestBuilder63 = requestBuilder48.headers(headerList62);
        java.lang.String str64 = requestBuilder63.apiUrl;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(converter46);
        org.junit.Assert.assertNotNull(requestBuilder48);
        org.junit.Assert.assertNull(typedOutput56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(typedOutput60);
        org.junit.Assert.assertNotNull(headerList61);
        org.junit.Assert.assertNotNull(headerList62);
        org.junit.Assert.assertNotNull(requestBuilder63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.lang.String str36 = request33.method;
        java.lang.String str37 = request33.method;
        java.util.List<retrofit.client.Header> headerList38 = request33.headers;
        retrofit.mime.TypedOutput typedOutput39 = request33.body;
        java.util.List<retrofit.client.Header> headerList40 = request33.getHeaders();
        java.lang.String str41 = request33.method;
        retrofit.mime.TypedOutput typedOutput42 = request33.body;
        java.lang.String str43 = request33.getMethod();
        java.lang.String str44 = request33.getMethod();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        java.lang.String str38 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter39 = null;
        retrofit.RequestBuilder requestBuilder40 = new retrofit.RequestBuilder(converter39);
        retrofit.converter.Converter converter41 = requestBuilder40.getconverter();
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        requestBuilder43.setheaders((java.util.List<retrofit.client.Header>) headerList47);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder56.headers;
        requestBuilder56.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder56, request65 };
        requestBuilder43.setargs(objArray67);
        java.lang.Object[] objArray69 = requestBuilder43.getargs();
        retrofit.RequestBuilder requestBuilder70 = requestBuilder40.args(objArray69);
        requestBuilder37.setargs(objArray69);
        retrofit.RequestBuilder requestBuilder72 = requestBuilder1.args(objArray69);
        retrofit.converter.Converter converter73 = requestBuilder1.getconverter();
        java.lang.String str74 = requestBuilder1.apiUrl;
        java.lang.String str75 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder77 = requestBuilder1.apiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput78 = requestBuilder77.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(converter41);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(requestBuilder72);
        org.junit.Assert.assertNull(converter73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(requestBuilder77);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        java.lang.Object[] objArray47 = requestBuilder5.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder5.apiUrl("hi!");
        java.lang.Object[] objArray50 = new java.lang.Object[] {};
        requestBuilder5.args = objArray50;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder1.args(objArray50);
        retrofit.RequestBuilder requestBuilder54 = requestBuilder52.apiUrl("");
        retrofit.RequestBuilder requestBuilder56 = requestBuilder52.apiUrl("hi!");
        java.lang.Object[] objArray57 = requestBuilder52.args;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput58 = requestBuilder52.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNotNull(requestBuilder54);
        org.junit.Assert.assertNotNull(requestBuilder56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        requestBuilder3.apiUrl = "";
        retrofit.RequestBuilder requestBuilder32 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        retrofit.mime.TypedOutput typedOutput41 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList42 = request39.headers;
        requestBuilder34.setheaders(headerList42);
        retrofit.RequestBuilder requestBuilder44 = requestBuilder3.headers(headerList42);
        java.lang.Object[] objArray45 = requestBuilder3.getargs();
        retrofit.RequestBuilder requestBuilder47 = requestBuilder3.apiUrl("hi!");
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        requestBuilder3.headers = headerList77;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "hi!", headerList77, typedOutput79);
        java.lang.String str81 = request80.url;
        java.lang.String str82 = request80.getMethod();
        retrofit.mime.TypedOutput typedOutput83 = request80.getBody();
        java.util.List<retrofit.client.Header> headerList84 = request80.getHeaders();
        java.util.List<retrofit.client.Header> headerList85 = request80.getHeaders();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(requestBuilder44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNotNull(headerList84);
        org.junit.Assert.assertNotNull(headerList85);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        java.lang.Object[] objArray47 = requestBuilder5.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder5.apiUrl("hi!");
        java.lang.Object[] objArray50 = new java.lang.Object[] {};
        requestBuilder5.args = objArray50;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder1.args(objArray50);
        java.lang.Object[] objArray53 = null;
        requestBuilder52.setargs(objArray53);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(requestBuilder52);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        java.lang.Object[] objArray47 = requestBuilder5.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder5.apiUrl("hi!");
        java.lang.Object[] objArray50 = new java.lang.Object[] {};
        requestBuilder5.args = objArray50;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder1.args(objArray50);
        retrofit.RequestBuilder requestBuilder54 = requestBuilder52.apiUrl("");
        retrofit.RequestBuilder requestBuilder56 = requestBuilder52.apiUrl("hi!");
        java.lang.Object[] objArray57 = requestBuilder56.args;
        requestBuilder56.apiUrl = "";
        java.lang.Object[] objArray60 = requestBuilder56.args;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput61 = requestBuilder56.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNotNull(requestBuilder54);
        org.junit.Assert.assertNotNull(requestBuilder56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        requestBuilder37.setapiUrl("hi!");
        java.lang.String str42 = requestBuilder37.apiUrl;
        java.util.List<retrofit.client.Header> headerList43 = requestBuilder37.headers;
        java.lang.String str44 = requestBuilder37.getapiUrl();
        java.lang.String str45 = requestBuilder37.apiUrl;
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        requestBuilder47.setheaders((java.util.List<retrofit.client.Header>) headerList51);
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.converter.Converter converter61 = requestBuilder60.getconverter();
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder60.headers;
        requestBuilder60.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList67 = null;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "", headerList67, typedOutput68);
        java.lang.String str70 = request69.getUrl();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder60, request69 };
        requestBuilder47.setargs(objArray71);
        java.lang.String str73 = requestBuilder47.getapiUrl();
        retrofit.client.Header[] headerArray76 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList77 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList77, headerArray76);
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList77, typedOutput79);
        java.util.List<retrofit.client.Header> headerList81 = request80.getHeaders();
        requestBuilder47.setheaders(headerList81);
        java.lang.Object[] objArray83 = requestBuilder47.getargs();
        retrofit.RequestBuilder requestBuilder84 = requestBuilder37.args(objArray83);
        requestBuilder1.setargs(objArray83);
        java.util.List<retrofit.client.Header> headerList86 = requestBuilder1.getheaders();
        java.lang.Object[] objArray87 = requestBuilder1.args;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str88 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(headerList39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNull(headerList43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(headerList62);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(headerArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(headerList81);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(headerList86);
        org.junit.Assert.assertNotNull(objArray87);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        retrofit.converter.Converter converter5 = null;
        retrofit.RequestBuilder requestBuilder6 = new retrofit.RequestBuilder(converter5);
        retrofit.client.Header[] headerArray9 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList10 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList10, headerArray9);
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList10, typedOutput12);
        requestBuilder6.setheaders((java.util.List<retrofit.client.Header>) headerList10);
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.converter.Converter converter20 = requestBuilder19.getconverter();
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder19.headers;
        requestBuilder19.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList26 = null;
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList26, typedOutput27);
        java.lang.String str29 = request28.getUrl();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder19, request28 };
        requestBuilder6.setargs(objArray30);
        java.lang.Object[] objArray32 = requestBuilder6.getargs();
        retrofit.RequestBuilder requestBuilder33 = requestBuilder3.args(objArray32);
        retrofit.converter.Converter converter34 = requestBuilder3.getconverter();
        java.util.List<retrofit.client.Header> headerList37 = null;
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("", "", headerList37, typedOutput38);
        retrofit.mime.TypedOutput typedOutput40 = request39.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request39.headers;
        requestBuilder3.setheaders(headerList41);
        retrofit.mime.TypedOutput typedOutput43 = null;
        retrofit.client.Request request44 = new retrofit.client.Request("", "", headerList41, typedOutput43);
        java.util.List<retrofit.client.Header> headerList45 = request44.getHeaders();
        java.lang.String str46 = request44.method;
        retrofit.mime.TypedOutput typedOutput47 = request44.body;
        java.util.List<retrofit.client.Header> headerList48 = request44.headers;
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(headerArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(headerList21);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(requestBuilder33);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNotNull(headerList45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(typedOutput47);
        org.junit.Assert.assertNotNull(headerList48);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        retrofit.converter.Converter converter33 = null;
        retrofit.RequestBuilder requestBuilder34 = new retrofit.RequestBuilder(converter33);
        retrofit.client.Header[] headerArray37 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList38 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList38, headerArray37);
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList38, typedOutput40);
        requestBuilder34.setheaders((java.util.List<retrofit.client.Header>) headerList38);
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.converter.Converter converter48 = requestBuilder47.getconverter();
        java.util.List<retrofit.client.Header> headerList49 = requestBuilder47.headers;
        requestBuilder47.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList54 = null;
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("", "", headerList54, typedOutput55);
        java.lang.String str57 = request56.getUrl();
        java.lang.Object[] objArray58 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder47, request56 };
        requestBuilder34.setargs(objArray58);
        java.lang.Object[] objArray60 = requestBuilder34.getargs();
        retrofit.RequestBuilder requestBuilder61 = requestBuilder31.args(objArray60);
        requestBuilder61.setapiUrl("");
        retrofit.converter.Converter converter64 = requestBuilder61.getconverter();
        java.util.List<retrofit.client.Header> headerList65 = requestBuilder61.getheaders();
        java.lang.String str66 = requestBuilder61.apiUrl;
        java.lang.Object[] objArray67 = requestBuilder61.getargs();
        requestBuilder1.setargs(objArray67);
        java.lang.String str69 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder1.headers;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput71 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNotNull(headerArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(converter48);
        org.junit.Assert.assertNull(headerList49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertNotNull(requestBuilder61);
        org.junit.Assert.assertNull(converter64);
        org.junit.Assert.assertNull(headerList65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(headerList70);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList11, typedOutput13);
        java.lang.String str15 = request14.url;
        retrofit.mime.TypedOutput typedOutput16 = request14.body;
        retrofit.mime.TypedOutput typedOutput17 = request14.body;
        java.lang.String str18 = request14.url;
        java.util.List<retrofit.client.Header> headerList19 = request14.headers;
        java.lang.String str20 = request14.method;
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(headerList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        java.lang.Object[] objArray11 = requestBuilder1.getargs();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(objArray11);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        java.lang.String str13 = request8.getUrl();
        java.lang.String str14 = request8.getMethod();
        java.lang.String str15 = request8.url;
        java.util.List<retrofit.client.Header> headerList16 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput17 = null;
        retrofit.client.Request request18 = new retrofit.client.Request("", "hi!", headerList16, typedOutput17);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "hi!", headerList16, typedOutput19);
        java.lang.Class<?> wildcardClass21 = request20.getClass();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(headerList16);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.converter.Converter converter14 = requestBuilder13.getconverter();
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder13.headers;
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.client.Header[] headerArray23 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList24 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList24, headerArray23);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList24, typedOutput26);
        requestBuilder20.setheaders((java.util.List<retrofit.client.Header>) headerList24);
        java.util.List<retrofit.client.Header> headerList31 = null;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.getUrl();
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.lang.Object[] objArray36 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder20, typedOutput35 };
        requestBuilder13.setargs(objArray36);
        java.util.List<retrofit.client.Header> headerList40 = null;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList40, typedOutput41);
        retrofit.mime.TypedOutput typedOutput43 = request42.getBody();
        retrofit.mime.TypedOutput typedOutput44 = request42.getBody();
        java.lang.String str45 = request42.getUrl();
        java.util.List<retrofit.client.Header> headerList46 = request42.headers;
        retrofit.RequestBuilder requestBuilder47 = requestBuilder13.headers(headerList46);
        retrofit.RequestBuilder requestBuilder48 = requestBuilder1.headers(headerList46);
        java.util.List<retrofit.client.Header> headerList51 = null;
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "", headerList51, typedOutput52);
        java.lang.String str54 = request53.url;
        java.lang.String str55 = request53.url;
        java.util.List<retrofit.client.Header> headerList56 = request53.getHeaders();
        requestBuilder48.setheaders(headerList56);
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder48.getheaders();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(headerList15);
        org.junit.Assert.assertNotNull(headerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNull(typedOutput44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(requestBuilder48);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(headerList58);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        retrofit.RequestBuilder requestBuilder32 = requestBuilder5.apiUrl("");
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder5.headers;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "hi!", headerList33, typedOutput34);
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("hi!", "hi!", headerList33, typedOutput36);
        java.util.List<retrofit.client.Header> headerList38 = request37.getHeaders();
        java.lang.String str39 = request37.method;
        java.lang.String str40 = request37.method;
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertNotNull(headerList38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.lang.String str8 = request4.method;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.getUrl();
        java.lang.String str12 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        retrofit.converter.Converter converter5 = null;
        retrofit.RequestBuilder requestBuilder6 = new retrofit.RequestBuilder(converter5);
        retrofit.client.Header[] headerArray9 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList10 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList10, headerArray9);
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList10, typedOutput12);
        requestBuilder6.setheaders((java.util.List<retrofit.client.Header>) headerList10);
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.converter.Converter converter20 = requestBuilder19.getconverter();
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder19.headers;
        requestBuilder19.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList26 = null;
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "", headerList26, typedOutput27);
        java.lang.String str29 = request28.getUrl();
        java.lang.Object[] objArray30 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder19, request28 };
        requestBuilder6.setargs(objArray30);
        java.lang.Object[] objArray32 = requestBuilder6.getargs();
        retrofit.RequestBuilder requestBuilder33 = requestBuilder3.args(objArray32);
        java.lang.String str34 = requestBuilder3.getapiUrl();
        java.lang.String str35 = requestBuilder3.apiUrl;
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        retrofit.mime.TypedOutput typedOutput41 = request40.getBody();
        retrofit.mime.TypedOutput typedOutput42 = request40.getBody();
        java.lang.String str43 = request40.getMethod();
        java.lang.String str44 = request40.method;
        java.lang.String str45 = request40.method;
        java.util.List<retrofit.client.Header> headerList46 = request40.getHeaders();
        requestBuilder3.setheaders(headerList46);
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("hi!", "", headerList46, typedOutput48);
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNotNull(headerArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(converter20);
        org.junit.Assert.assertNull(headerList21);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(objArray32);
        org.junit.Assert.assertNotNull(requestBuilder33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(typedOutput41);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(headerList46);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter12 = requestBuilder1.getconverter();
        java.lang.Object[] objArray13 = requestBuilder1.args;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput14 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(converter12);
        org.junit.Assert.assertNull(objArray13);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        java.util.List<retrofit.client.Header> headerList13 = null;
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("", "", headerList13, typedOutput14);
        retrofit.mime.TypedOutput typedOutput16 = request15.getBody();
        java.lang.String str17 = request15.getMethod();
        java.util.List<retrofit.client.Header> headerList18 = request15.getHeaders();
        retrofit.RequestBuilder requestBuilder19 = requestBuilder1.headers(headerList18);
        java.lang.Class<?> wildcardClass20 = requestBuilder1.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(headerList18);
        org.junit.Assert.assertNotNull(requestBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray13 = requestBuilder1.getargs();
        retrofit.converter.Converter converter14 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder1.getheaders();
        java.lang.String str16 = requestBuilder1.apiUrl;
        java.lang.String str17 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        retrofit.client.Header[] headerArray8 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList9 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList9, headerArray8);
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList9, typedOutput11);
        requestBuilder5.setheaders((java.util.List<retrofit.client.Header>) headerList9);
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.converter.Converter converter19 = requestBuilder18.getconverter();
        java.util.List<retrofit.client.Header> headerList20 = requestBuilder18.headers;
        requestBuilder18.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList25 = null;
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("", "", headerList25, typedOutput26);
        java.lang.String str28 = request27.getUrl();
        java.lang.Object[] objArray29 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder18, request27 };
        requestBuilder5.setargs(objArray29);
        requestBuilder5.apiUrl = "";
        retrofit.RequestBuilder requestBuilder34 = requestBuilder5.apiUrl("hi!");
        retrofit.converter.Converter converter35 = null;
        retrofit.RequestBuilder requestBuilder36 = new retrofit.RequestBuilder(converter35);
        java.util.List<retrofit.client.Header> headerList39 = null;
        retrofit.mime.TypedOutput typedOutput40 = null;
        retrofit.client.Request request41 = new retrofit.client.Request("", "", headerList39, typedOutput40);
        retrofit.mime.TypedOutput typedOutput42 = request41.getBody();
        retrofit.mime.TypedOutput typedOutput43 = request41.getBody();
        java.util.List<retrofit.client.Header> headerList44 = request41.headers;
        requestBuilder36.setheaders(headerList44);
        retrofit.RequestBuilder requestBuilder46 = requestBuilder5.headers(headerList44);
        java.lang.Object[] objArray47 = requestBuilder5.getargs();
        retrofit.RequestBuilder requestBuilder49 = requestBuilder5.apiUrl("hi!");
        java.lang.Object[] objArray50 = new java.lang.Object[] {};
        requestBuilder5.args = objArray50;
        retrofit.RequestBuilder requestBuilder52 = requestBuilder1.args(objArray50);
        java.util.List<retrofit.client.Header> headerList53 = requestBuilder52.headers;
        java.lang.Object[] objArray54 = requestBuilder52.args;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(converter19);
        org.junit.Assert.assertNull(headerList20);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(typedOutput42);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNotNull(headerList44);
        org.junit.Assert.assertNotNull(requestBuilder46);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(requestBuilder52);
        org.junit.Assert.assertNull(headerList53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.method;
        java.lang.String str11 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str8 = requestBuilder1.apiUrl;
        java.lang.String str9 = requestBuilder1.apiUrl;
        requestBuilder1.apiUrl = "hi!";
        java.lang.Class<?> wildcardClass12 = requestBuilder1.getClass();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.getUrl();
        java.lang.String str11 = request4.url;
        java.lang.String str12 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput13 = request4.getBody();
        java.lang.String str14 = request4.getMethod();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.lang.String str10 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder12 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray13 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList18 = null;
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("", "", headerList18, typedOutput19);
        retrofit.mime.TypedOutput typedOutput21 = request20.getBody();
        retrofit.mime.TypedOutput typedOutput22 = request20.getBody();
        java.lang.String str23 = request20.getMethod();
        java.lang.String str24 = request20.method;
        java.lang.String str25 = request20.method;
        java.util.List<retrofit.client.Header> headerList26 = request20.headers;
        retrofit.mime.TypedOutput typedOutput27 = null;
        retrofit.client.Request request28 = new retrofit.client.Request("", "hi!", headerList26, typedOutput27);
        requestBuilder1.setheaders(headerList26);
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.client.Header[] headerArray35 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList36 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList36, headerArray35);
        retrofit.mime.TypedOutput typedOutput38 = null;
        retrofit.client.Request request39 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList36, typedOutput38);
        requestBuilder32.setheaders((java.util.List<retrofit.client.Header>) headerList36);
        java.lang.String str41 = requestBuilder32.getapiUrl();
        retrofit.RequestBuilder requestBuilder43 = requestBuilder32.apiUrl("");
        java.lang.Object[] objArray44 = requestBuilder32.getargs();
        retrofit.converter.Converter converter45 = requestBuilder32.getconverter();
        java.lang.Object[] objArray46 = requestBuilder32.getargs();
        retrofit.converter.Converter converter47 = requestBuilder32.getconverter();
        java.util.List<retrofit.client.Header> headerList48 = requestBuilder32.headers;
        requestBuilder1.headers = headerList48;
        requestBuilder1.setapiUrl("");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(requestBuilder12);
        org.junit.Assert.assertNull(objArray13);
        org.junit.Assert.assertNull(typedOutput21);
        org.junit.Assert.assertNull(typedOutput22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(headerList26);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNotNull(headerArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(requestBuilder43);
        org.junit.Assert.assertNull(objArray44);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(objArray46);
        org.junit.Assert.assertNull(converter47);
        org.junit.Assert.assertNotNull(headerList48);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        java.util.List<retrofit.client.Header> headerList12 = request8.getHeaders();
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList12, typedOutput13);
        java.util.List<retrofit.client.Header> headerList15 = request14.getHeaders();
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("", "hi!", headerList15, typedOutput16);
        retrofit.mime.TypedOutput typedOutput18 = request17.body;
        retrofit.mime.TypedOutput typedOutput19 = request17.getBody();
        java.lang.String str20 = request17.getUrl();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertNull(typedOutput18);
        org.junit.Assert.assertNull(typedOutput19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = null;
        requestBuilder1.headers = headerList3;
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder1.headers;
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.getheaders();
        java.lang.String str8 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder10 = requestBuilder1.apiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request11 = requestBuilder10.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList5);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(requestBuilder10);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter37 = requestBuilder1.converter;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(converter37);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        requestBuilder1.setapiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput35 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(headerList31);
        org.junit.Assert.assertNull(converter32);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.converter.Converter converter13 = requestBuilder12.getconverter();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder12.headers;
        retrofit.converter.Converter converter18 = null;
        retrofit.RequestBuilder requestBuilder19 = new retrofit.RequestBuilder(converter18);
        retrofit.client.Header[] headerArray22 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList23 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList23, headerArray22);
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList23, typedOutput25);
        requestBuilder19.setheaders((java.util.List<retrofit.client.Header>) headerList23);
        java.util.List<retrofit.client.Header> headerList30 = null;
        retrofit.mime.TypedOutput typedOutput31 = null;
        retrofit.client.Request request32 = new retrofit.client.Request("", "", headerList30, typedOutput31);
        java.lang.String str33 = request32.getUrl();
        retrofit.mime.TypedOutput typedOutput34 = request32.body;
        java.lang.Object[] objArray35 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder19, typedOutput34 };
        requestBuilder12.setargs(objArray35);
        retrofit.RequestBuilder requestBuilder37 = requestBuilder1.args(objArray35);
        retrofit.converter.Converter converter38 = requestBuilder37.converter;
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        java.util.List<retrofit.client.Header> headerList40 = requestBuilder37.headers;
        retrofit.RequestBuilder requestBuilder42 = requestBuilder37.apiUrl("");
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter13);
        org.junit.Assert.assertNull(headerList14);
        org.junit.Assert.assertNotNull(headerArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(typedOutput34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertNotNull(requestBuilder37);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.RequestBuilder requestBuilder47 = requestBuilder1.apiUrl("");
        retrofit.RequestBuilder requestBuilder49 = requestBuilder47.apiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList50 = requestBuilder47.headers;
        java.lang.Object[] objArray51 = requestBuilder47.getargs();
        java.util.List<retrofit.client.Header> headerList52 = requestBuilder47.headers;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(requestBuilder49);
        org.junit.Assert.assertNotNull(headerList50);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertNotNull(headerList52);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        requestBuilder1.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.url;
        java.lang.String str37 = request35.url;
        java.lang.String str38 = request35.method;
        java.util.List<retrofit.client.Header> headerList39 = request35.headers;
        requestBuilder1.headers = headerList39;
        java.util.List<retrofit.client.Header> headerList41 = requestBuilder1.getheaders();
        java.lang.Object[] objArray42 = null;
        requestBuilder1.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder1.args;
        java.lang.Object[] objArray45 = requestBuilder1.getargs();
        requestBuilder1.setapiUrl("");
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNull(objArray44);
        org.junit.Assert.assertNull(objArray45);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter33 = requestBuilder1.converter;
        requestBuilder1.setapiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNull(converter33);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        requestBuilder47.setheaders((java.util.List<retrofit.client.Header>) headerList51);
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.converter.Converter converter61 = requestBuilder60.getconverter();
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder60.headers;
        requestBuilder60.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList67 = null;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "", headerList67, typedOutput68);
        java.lang.String str70 = request69.getUrl();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder60, request69 };
        requestBuilder47.setargs(objArray71);
        retrofit.RequestBuilder requestBuilder74 = requestBuilder47.apiUrl("");
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder47.headers;
        requestBuilder1.headers = headerList75;
        requestBuilder1.apiUrl = "hi!";
        retrofit.RequestBuilder requestBuilder80 = requestBuilder1.apiUrl("hi!");
        java.lang.Object[] objArray81 = requestBuilder80.args;
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(headerList62);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertNotNull(requestBuilder80);
        org.junit.Assert.assertNotNull(objArray81);
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        java.lang.String str7 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter8 = requestBuilder1.converter;
        requestBuilder1.apiUrl = "";
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNull(converter8);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.util.List<retrofit.client.Header> headerList32 = requestBuilder1.getheaders();
        java.lang.String str33 = requestBuilder1.getapiUrl();
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(headerList32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        java.util.List<retrofit.client.Header> headerList13 = request4.getHeaders();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        java.lang.String str7 = request6.method;
        java.lang.String str8 = request6.getUrl();
        java.lang.String str9 = request6.method;
        java.lang.String str10 = request6.method;
        java.util.List<retrofit.client.Header> headerList11 = request6.getHeaders();
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerList11);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList28 = null;
        requestBuilder1.headers = headerList28;
        retrofit.converter.Converter converter30 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter31 = requestBuilder1.converter;
        retrofit.converter.Converter converter32 = null;
        retrofit.RequestBuilder requestBuilder33 = new retrofit.RequestBuilder(converter32);
        java.util.List<retrofit.client.Header> headerList36 = null;
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("", "", headerList36, typedOutput37);
        retrofit.mime.TypedOutput typedOutput39 = request38.getBody();
        retrofit.mime.TypedOutput typedOutput40 = request38.getBody();
        java.util.List<retrofit.client.Header> headerList41 = request38.headers;
        requestBuilder33.setheaders(headerList41);
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        retrofit.converter.Converter converter45 = requestBuilder44.getconverter();
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder44.headers;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.client.Header[] headerArray54 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList55 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList55, headerArray54);
        retrofit.mime.TypedOutput typedOutput57 = null;
        retrofit.client.Request request58 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList55, typedOutput57);
        requestBuilder51.setheaders((java.util.List<retrofit.client.Header>) headerList55);
        java.util.List<retrofit.client.Header> headerList62 = null;
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "", headerList62, typedOutput63);
        java.lang.String str65 = request64.getUrl();
        retrofit.mime.TypedOutput typedOutput66 = request64.body;
        java.lang.Object[] objArray67 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder51, typedOutput66 };
        requestBuilder44.setargs(objArray67);
        retrofit.RequestBuilder requestBuilder69 = requestBuilder33.args(objArray67);
        java.util.List<retrofit.client.Header> headerList70 = requestBuilder69.headers;
        retrofit.RequestBuilder requestBuilder71 = requestBuilder1.headers(headerList70);
        retrofit.converter.Converter converter74 = null;
        retrofit.RequestBuilder requestBuilder75 = new retrofit.RequestBuilder(converter74);
        java.util.List<retrofit.client.Header> headerList78 = null;
        retrofit.mime.TypedOutput typedOutput79 = null;
        retrofit.client.Request request80 = new retrofit.client.Request("", "", headerList78, typedOutput79);
        retrofit.mime.TypedOutput typedOutput81 = request80.getBody();
        retrofit.mime.TypedOutput typedOutput82 = request80.getBody();
        java.util.List<retrofit.client.Header> headerList83 = request80.headers;
        requestBuilder75.setheaders(headerList83);
        retrofit.mime.TypedOutput typedOutput85 = null;
        retrofit.client.Request request86 = new retrofit.client.Request("hi!", "hi!", headerList83, typedOutput85);
        java.lang.String str87 = request86.url;
        java.util.List<retrofit.client.Header> headerList88 = request86.headers;
        requestBuilder71.headers = headerList88;
        requestBuilder71.setapiUrl("hi!");
        retrofit.converter.Converter converter92 = requestBuilder71.getconverter();
        java.util.List<retrofit.client.Header> headerList93 = requestBuilder71.getheaders();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(converter31);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNull(typedOutput40);
        org.junit.Assert.assertNotNull(headerList41);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(headerList46);
        org.junit.Assert.assertNotNull(headerArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(typedOutput66);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(requestBuilder69);
        org.junit.Assert.assertNotNull(headerList70);
        org.junit.Assert.assertNotNull(requestBuilder71);
        org.junit.Assert.assertNull(typedOutput81);
        org.junit.Assert.assertNull(typedOutput82);
        org.junit.Assert.assertNotNull(headerList83);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertNotNull(headerList88);
        org.junit.Assert.assertNull(converter92);
        org.junit.Assert.assertNotNull(headerList93);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.headers;
        java.lang.String str30 = requestBuilder1.getapiUrl();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        requestBuilder31.setapiUrl("hi!");
        java.lang.String str34 = requestBuilder31.getapiUrl();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request35 = requestBuilder31.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.util.List<retrofit.client.Header> headerList43 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter44 = null;
        retrofit.RequestBuilder requestBuilder45 = new retrofit.RequestBuilder(converter44);
        retrofit.client.Header[] headerArray48 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList49 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList49, headerArray48);
        retrofit.mime.TypedOutput typedOutput51 = null;
        retrofit.client.Request request52 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList49, typedOutput51);
        requestBuilder45.setheaders((java.util.List<retrofit.client.Header>) headerList49);
        retrofit.converter.Converter converter57 = null;
        retrofit.RequestBuilder requestBuilder58 = new retrofit.RequestBuilder(converter57);
        retrofit.converter.Converter converter59 = requestBuilder58.getconverter();
        java.util.List<retrofit.client.Header> headerList60 = requestBuilder58.headers;
        requestBuilder58.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList65 = null;
        retrofit.mime.TypedOutput typedOutput66 = null;
        retrofit.client.Request request67 = new retrofit.client.Request("", "", headerList65, typedOutput66);
        java.lang.String str68 = request67.getUrl();
        java.lang.Object[] objArray69 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder58, request67 };
        requestBuilder45.setargs(objArray69);
        requestBuilder45.apiUrl = "";
        retrofit.RequestBuilder requestBuilder74 = requestBuilder45.apiUrl("hi!");
        retrofit.converter.Converter converter75 = null;
        retrofit.RequestBuilder requestBuilder76 = new retrofit.RequestBuilder(converter75);
        java.util.List<retrofit.client.Header> headerList79 = null;
        retrofit.mime.TypedOutput typedOutput80 = null;
        retrofit.client.Request request81 = new retrofit.client.Request("", "", headerList79, typedOutput80);
        retrofit.mime.TypedOutput typedOutput82 = request81.getBody();
        retrofit.mime.TypedOutput typedOutput83 = request81.getBody();
        java.util.List<retrofit.client.Header> headerList84 = request81.headers;
        requestBuilder76.setheaders(headerList84);
        retrofit.RequestBuilder requestBuilder86 = requestBuilder45.headers(headerList84);
        requestBuilder1.headers = headerList84;
        java.lang.Object[] objArray88 = requestBuilder1.args;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str89 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(headerList43);
        org.junit.Assert.assertNotNull(headerArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(converter59);
        org.junit.Assert.assertNull(headerList60);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNull(typedOutput82);
        org.junit.Assert.assertNull(typedOutput83);
        org.junit.Assert.assertNotNull(headerList84);
        org.junit.Assert.assertNotNull(requestBuilder86);
        org.junit.Assert.assertNotNull(objArray88);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        retrofit.converter.Converter converter85 = requestBuilder84.converter;
        java.lang.Object[] objArray86 = null;
        retrofit.RequestBuilder requestBuilder87 = requestBuilder84.args(objArray86);
        java.lang.Object[] objArray88 = null;
        requestBuilder84.setargs(objArray88);
        retrofit.converter.Converter converter90 = requestBuilder84.converter;
        retrofit.RequestBuilder requestBuilder92 = requestBuilder84.apiUrl("hi!");
        java.lang.Object[] objArray93 = requestBuilder92.getargs();
        java.lang.Object[] objArray94 = null;
        retrofit.RequestBuilder requestBuilder95 = requestBuilder92.args(objArray94);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(converter85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNull(converter90);
        org.junit.Assert.assertNotNull(requestBuilder92);
        org.junit.Assert.assertNull(objArray93);
        org.junit.Assert.assertNotNull(requestBuilder95);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput8 = request4.body;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        java.lang.String str10 = request4.url;
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        java.lang.String str12 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.lang.String str11 = request4.getUrl();
        java.lang.String str12 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput13 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(typedOutput13);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.getMethod();
        java.lang.String str10 = request4.getUrl();
        java.lang.String str11 = request4.url;
        java.util.List<retrofit.client.Header> headerList12 = request4.headers;
        java.lang.String str13 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        retrofit.client.Header[] headerArray15 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList16 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList16, headerArray15);
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList16, typedOutput18);
        requestBuilder12.setheaders((java.util.List<retrofit.client.Header>) headerList16);
        java.util.List<retrofit.client.Header> headerList21 = requestBuilder12.getheaders();
        java.lang.String str22 = requestBuilder12.getapiUrl();
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        retrofit.client.Header[] headerArray27 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList28 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList28, headerArray27);
        retrofit.mime.TypedOutput typedOutput30 = null;
        retrofit.client.Request request31 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList28, typedOutput30);
        requestBuilder24.setheaders((java.util.List<retrofit.client.Header>) headerList28);
        retrofit.converter.Converter converter36 = null;
        retrofit.RequestBuilder requestBuilder37 = new retrofit.RequestBuilder(converter36);
        retrofit.converter.Converter converter38 = requestBuilder37.getconverter();
        java.util.List<retrofit.client.Header> headerList39 = requestBuilder37.headers;
        requestBuilder37.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList44 = null;
        retrofit.mime.TypedOutput typedOutput45 = null;
        retrofit.client.Request request46 = new retrofit.client.Request("", "", headerList44, typedOutput45);
        java.lang.String str47 = request46.getUrl();
        java.lang.Object[] objArray48 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder37, request46 };
        requestBuilder24.setargs(objArray48);
        requestBuilder24.apiUrl = "";
        retrofit.RequestBuilder requestBuilder53 = requestBuilder24.apiUrl("hi!");
        retrofit.converter.Converter converter54 = null;
        retrofit.RequestBuilder requestBuilder55 = new retrofit.RequestBuilder(converter54);
        java.util.List<retrofit.client.Header> headerList58 = null;
        retrofit.mime.TypedOutput typedOutput59 = null;
        retrofit.client.Request request60 = new retrofit.client.Request("", "", headerList58, typedOutput59);
        retrofit.mime.TypedOutput typedOutput61 = request60.getBody();
        retrofit.mime.TypedOutput typedOutput62 = request60.getBody();
        java.util.List<retrofit.client.Header> headerList63 = request60.headers;
        requestBuilder55.setheaders(headerList63);
        retrofit.RequestBuilder requestBuilder65 = requestBuilder24.headers(headerList63);
        requestBuilder12.headers = headerList63;
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.url;
        java.util.List<retrofit.client.Header> headerList73 = request71.getHeaders();
        requestBuilder12.headers = headerList73;
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder12.headers;
        requestBuilder1.setheaders(headerList75);
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder1.headers;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput78 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(headerArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(headerArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(converter38);
        org.junit.Assert.assertNull(headerList39);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertNotNull(requestBuilder53);
        org.junit.Assert.assertNull(typedOutput61);
        org.junit.Assert.assertNull(typedOutput62);
        org.junit.Assert.assertNotNull(headerList63);
        org.junit.Assert.assertNotNull(requestBuilder65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(headerList73);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertNotNull(headerList77);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.lang.String str7 = request4.url;
        java.lang.String str8 = request4.getMethod();
        java.lang.String str9 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        java.lang.String str11 = request4.getUrl();
        java.lang.String str12 = request4.url;
        java.lang.String str13 = request4.method;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.headers;
        java.lang.String str14 = request12.url;
        java.util.List<retrofit.client.Header> headerList15 = request12.getHeaders();
        java.lang.String str16 = request12.method;
        java.lang.Class<?> wildcardClass17 = request12.getClass();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(headerList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.String str28 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter29 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter32 = requestBuilder1.converter;
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder1.getheaders();
        java.lang.String str34 = requestBuilder1.getapiUrl();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(converter29);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNotNull(headerList33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        retrofit.converter.Converter converter7 = null;
        retrofit.RequestBuilder requestBuilder8 = new retrofit.RequestBuilder(converter7);
        retrofit.client.Header[] headerArray11 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList12 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList12, headerArray11);
        retrofit.mime.TypedOutput typedOutput14 = null;
        retrofit.client.Request request15 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList12, typedOutput14);
        requestBuilder8.setheaders((java.util.List<retrofit.client.Header>) headerList12);
        java.util.List<retrofit.client.Header> headerList19 = null;
        retrofit.mime.TypedOutput typedOutput20 = null;
        retrofit.client.Request request21 = new retrofit.client.Request("", "", headerList19, typedOutput20);
        java.lang.String str22 = request21.getUrl();
        retrofit.mime.TypedOutput typedOutput23 = request21.body;
        java.lang.Object[] objArray24 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder8, typedOutput23 };
        requestBuilder1.setargs(objArray24);
        retrofit.converter.Converter converter28 = null;
        retrofit.RequestBuilder requestBuilder29 = new retrofit.RequestBuilder(converter28);
        retrofit.client.Header[] headerArray32 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList33 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList33, headerArray32);
        retrofit.mime.TypedOutput typedOutput35 = null;
        retrofit.client.Request request36 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList33, typedOutput35);
        requestBuilder29.setheaders((java.util.List<retrofit.client.Header>) headerList33);
        retrofit.converter.Converter converter41 = null;
        retrofit.RequestBuilder requestBuilder42 = new retrofit.RequestBuilder(converter41);
        retrofit.converter.Converter converter43 = requestBuilder42.getconverter();
        java.util.List<retrofit.client.Header> headerList44 = requestBuilder42.headers;
        requestBuilder42.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList49 = null;
        retrofit.mime.TypedOutput typedOutput50 = null;
        retrofit.client.Request request51 = new retrofit.client.Request("", "", headerList49, typedOutput50);
        java.lang.String str52 = request51.getUrl();
        java.lang.Object[] objArray53 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder42, request51 };
        requestBuilder29.setargs(objArray53);
        retrofit.RequestBuilder requestBuilder56 = requestBuilder29.apiUrl("");
        java.util.List<retrofit.client.Header> headerList57 = requestBuilder29.headers;
        retrofit.mime.TypedOutput typedOutput58 = null;
        retrofit.client.Request request59 = new retrofit.client.Request("", "", headerList57, typedOutput58);
        retrofit.RequestBuilder requestBuilder60 = requestBuilder1.headers(headerList57);
        retrofit.converter.Converter converter61 = requestBuilder1.getconverter();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str62 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNotNull(headerArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertNotNull(headerArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(headerList44);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertNotNull(requestBuilder56);
        org.junit.Assert.assertNotNull(headerList57);
        org.junit.Assert.assertNotNull(requestBuilder60);
        org.junit.Assert.assertNull(converter61);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        retrofit.client.Header[] headerArray2 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList3 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList3, headerArray2);
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList3, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput9 = request6.body;
        java.lang.String str10 = request6.method;
        java.lang.String str11 = request6.url;
        org.junit.Assert.assertNotNull(headerArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.getapiUrl();
        java.lang.Class<?> wildcardClass37 = requestBuilder1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.RequestBuilder requestBuilder34 = requestBuilder1.headers(headerList33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = requestBuilder34.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNotNull(requestBuilder34);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.util.List<retrofit.client.Header> headerList6 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList7 = request4.getHeaders();
        java.util.List<retrofit.client.Header> headerList8 = request4.headers;
        retrofit.mime.TypedOutput typedOutput9 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request4.body;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(headerList6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        java.lang.String str32 = requestBuilder1.getapiUrl();
        java.lang.String str33 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder35 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray36 = new java.lang.Object[] {};
        requestBuilder1.setargs(objArray36);
        requestBuilder1.setapiUrl("");
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        requestBuilder43.setheaders((java.util.List<retrofit.client.Header>) headerList47);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder56.headers;
        requestBuilder56.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder56, request65 };
        requestBuilder43.setargs(objArray67);
        retrofit.RequestBuilder requestBuilder70 = requestBuilder43.apiUrl("");
        java.util.List<retrofit.client.Header> headerList71 = requestBuilder43.headers;
        retrofit.mime.TypedOutput typedOutput72 = null;
        retrofit.client.Request request73 = new retrofit.client.Request("", "hi!", headerList71, typedOutput72);
        java.lang.String str74 = request73.url;
        java.lang.String str75 = request73.getMethod();
        java.lang.String str76 = request73.method;
        java.lang.String str77 = request73.method;
        java.util.List<retrofit.client.Header> headerList78 = request73.headers;
        retrofit.mime.TypedOutput typedOutput79 = request73.body;
        java.util.List<retrofit.client.Header> headerList80 = request73.getHeaders();
        requestBuilder1.headers = headerList80;
        java.lang.Object[] objArray82 = requestBuilder1.args;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(requestBuilder35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNotNull(requestBuilder70);
        org.junit.Assert.assertNotNull(headerList71);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(headerList78);
        org.junit.Assert.assertNull(typedOutput79);
        org.junit.Assert.assertNotNull(headerList80);
        org.junit.Assert.assertNotNull(objArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray82), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray82), "[]");
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        java.util.List<retrofit.client.Header> headerList10 = requestBuilder1.getheaders();
        java.lang.String str11 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder13 = requestBuilder1.apiUrl("");
        retrofit.converter.Converter converter14 = requestBuilder13.getconverter();
        java.util.List<retrofit.client.Header> headerList17 = null;
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "", headerList17, typedOutput18);
        retrofit.mime.TypedOutput typedOutput20 = request19.getBody();
        retrofit.mime.TypedOutput typedOutput21 = request19.getBody();
        java.lang.String str22 = request19.getMethod();
        retrofit.mime.TypedOutput typedOutput23 = request19.body;
        java.util.List<retrofit.client.Header> headerList24 = request19.headers;
        retrofit.RequestBuilder requestBuilder25 = requestBuilder13.headers(headerList24);
        java.lang.String str26 = requestBuilder13.apiUrl;
        java.util.List<retrofit.client.Header> headerList27 = requestBuilder13.getheaders();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput28 = requestBuilder13.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(requestBuilder13);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(typedOutput20);
        org.junit.Assert.assertNull(typedOutput21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(typedOutput23);
        org.junit.Assert.assertNotNull(headerList24);
        org.junit.Assert.assertNotNull(requestBuilder25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(headerList27);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        java.lang.String str7 = request6.url;
        java.lang.String str8 = request6.url;
        retrofit.mime.TypedOutput typedOutput9 = request6.body;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        java.util.List<retrofit.client.Header> headerList11 = request6.headers;
        retrofit.mime.TypedOutput typedOutput12 = null;
        retrofit.client.Request request13 = new retrofit.client.Request("hi!", "", headerList11, typedOutput12);
        java.lang.Class<?> wildcardClass14 = request13.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter46 = requestBuilder1.converter;
        requestBuilder1.setapiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request49 = requestBuilder1.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(converter46);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        retrofit.converter.Converter converter85 = requestBuilder84.converter;
        java.lang.Object[] objArray86 = null;
        retrofit.RequestBuilder requestBuilder87 = requestBuilder84.args(objArray86);
        java.lang.String str88 = requestBuilder84.getapiUrl();
        java.util.List<retrofit.client.Header> headerList89 = requestBuilder84.headers;
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(converter85);
        org.junit.Assert.assertNotNull(requestBuilder87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(headerList89);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        java.util.List<retrofit.client.Header> headerList10 = request6.getHeaders();
        retrofit.mime.TypedOutput typedOutput11 = null;
        retrofit.client.Request request12 = new retrofit.client.Request("hi!", "hi!", headerList10, typedOutput11);
        java.util.List<retrofit.client.Header> headerList13 = request12.getHeaders();
        java.lang.String str14 = request12.getUrl();
        java.lang.Class<?> wildcardClass15 = request12.getClass();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.url;
        java.lang.String str6 = request4.url;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.url;
        java.lang.String str9 = request4.url;
        java.lang.String str10 = request4.getMethod();
        java.lang.String str11 = request4.url;
        retrofit.mime.TypedOutput typedOutput12 = request4.body;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(typedOutput12);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.util.List<retrofit.client.Header> headerList12 = requestBuilder3.getheaders();
        java.lang.String str13 = requestBuilder3.getapiUrl();
        java.util.List<retrofit.client.Header> headerList14 = requestBuilder3.getheaders();
        retrofit.mime.TypedOutput typedOutput15 = null;
        retrofit.client.Request request16 = new retrofit.client.Request("", "", headerList14, typedOutput15);
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(headerList14);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.String str27 = requestBuilder1.getapiUrl();
        retrofit.RequestBuilder requestBuilder29 = requestBuilder1.apiUrl("hi!");
        java.lang.String str30 = requestBuilder29.getapiUrl();
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request31 = requestBuilder29.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(requestBuilder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        java.lang.Object[] objArray27 = requestBuilder1.getargs();
        java.lang.Object[] objArray28 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.getheaders();
        retrofit.converter.Converter converter30 = requestBuilder1.converter;
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        retrofit.converter.Converter converter33 = requestBuilder32.getconverter();
        java.util.List<retrofit.client.Header> headerList34 = requestBuilder32.headers;
        requestBuilder32.setapiUrl("hi!");
        requestBuilder32.setapiUrl("hi!");
        java.lang.String str39 = requestBuilder32.apiUrl;
        retrofit.converter.Converter converter42 = null;
        retrofit.RequestBuilder requestBuilder43 = new retrofit.RequestBuilder(converter42);
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        requestBuilder43.setheaders((java.util.List<retrofit.client.Header>) headerList47);
        retrofit.converter.Converter converter55 = null;
        retrofit.RequestBuilder requestBuilder56 = new retrofit.RequestBuilder(converter55);
        retrofit.converter.Converter converter57 = requestBuilder56.getconverter();
        java.util.List<retrofit.client.Header> headerList58 = requestBuilder56.headers;
        requestBuilder56.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList63 = null;
        retrofit.mime.TypedOutput typedOutput64 = null;
        retrofit.client.Request request65 = new retrofit.client.Request("", "", headerList63, typedOutput64);
        java.lang.String str66 = request65.getUrl();
        java.lang.Object[] objArray67 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder56, request65 };
        requestBuilder43.setargs(objArray67);
        requestBuilder43.apiUrl = "";
        retrofit.converter.Converter converter71 = null;
        retrofit.RequestBuilder requestBuilder72 = new retrofit.RequestBuilder(converter71);
        java.util.List<retrofit.client.Header> headerList75 = null;
        retrofit.mime.TypedOutput typedOutput76 = null;
        retrofit.client.Request request77 = new retrofit.client.Request("", "", headerList75, typedOutput76);
        retrofit.mime.TypedOutput typedOutput78 = request77.getBody();
        retrofit.mime.TypedOutput typedOutput79 = request77.getBody();
        java.util.List<retrofit.client.Header> headerList80 = request77.headers;
        requestBuilder72.setheaders(headerList80);
        requestBuilder43.setheaders(headerList80);
        retrofit.mime.TypedOutput typedOutput83 = null;
        retrofit.client.Request request84 = new retrofit.client.Request("", "hi!", headerList80, typedOutput83);
        java.util.List<retrofit.client.Header> headerList85 = request84.getHeaders();
        requestBuilder32.headers = headerList85;
        requestBuilder1.setheaders(headerList85);
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertNull(converter30);
        org.junit.Assert.assertNull(converter33);
        org.junit.Assert.assertNull(headerList34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(converter57);
        org.junit.Assert.assertNull(headerList58);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertNull(typedOutput78);
        org.junit.Assert.assertNull(typedOutput79);
        org.junit.Assert.assertNotNull(headerList80);
        org.junit.Assert.assertNotNull(headerList85);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter46 = null;
        retrofit.RequestBuilder requestBuilder47 = new retrofit.RequestBuilder(converter46);
        retrofit.client.Header[] headerArray50 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList51 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList51, headerArray50);
        retrofit.mime.TypedOutput typedOutput53 = null;
        retrofit.client.Request request54 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList51, typedOutput53);
        requestBuilder47.setheaders((java.util.List<retrofit.client.Header>) headerList51);
        retrofit.converter.Converter converter59 = null;
        retrofit.RequestBuilder requestBuilder60 = new retrofit.RequestBuilder(converter59);
        retrofit.converter.Converter converter61 = requestBuilder60.getconverter();
        java.util.List<retrofit.client.Header> headerList62 = requestBuilder60.headers;
        requestBuilder60.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList67 = null;
        retrofit.mime.TypedOutput typedOutput68 = null;
        retrofit.client.Request request69 = new retrofit.client.Request("", "", headerList67, typedOutput68);
        java.lang.String str70 = request69.getUrl();
        java.lang.Object[] objArray71 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder60, request69 };
        requestBuilder47.setargs(objArray71);
        retrofit.RequestBuilder requestBuilder74 = requestBuilder47.apiUrl("");
        java.util.List<retrofit.client.Header> headerList75 = requestBuilder47.headers;
        requestBuilder1.headers = headerList75;
        requestBuilder1.apiUrl = "hi!";
        java.lang.String str79 = requestBuilder1.getapiUrl();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str80 = requestBuilder1.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNotNull(headerArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(converter61);
        org.junit.Assert.assertNull(headerList62);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertNotNull(requestBuilder74);
        org.junit.Assert.assertNotNull(headerList75);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.converter.Converter converter5 = requestBuilder4.getconverter();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        java.lang.Object[] objArray33 = requestBuilder7.getargs();
        retrofit.RequestBuilder requestBuilder34 = requestBuilder4.args(objArray33);
        requestBuilder1.setargs(objArray33);
        java.lang.String str36 = requestBuilder1.getapiUrl();
        java.lang.String str37 = requestBuilder1.getapiUrl();
        requestBuilder1.setapiUrl("");
        retrofit.converter.Converter converter40 = requestBuilder1.converter;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass41 = converter40.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(converter5);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(converter40);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.lang.String str2 = requestBuilder1.apiUrl;
        java.lang.String str3 = requestBuilder1.getapiUrl();
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        retrofit.client.Header[] headerArray10 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList11 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList11, headerArray10);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList11, typedOutput13);
        requestBuilder7.setheaders((java.util.List<retrofit.client.Header>) headerList11);
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.converter.Converter converter21 = requestBuilder20.getconverter();
        java.util.List<retrofit.client.Header> headerList22 = requestBuilder20.headers;
        requestBuilder20.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        java.lang.String str30 = request29.getUrl();
        java.lang.Object[] objArray31 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder20, request29 };
        requestBuilder7.setargs(objArray31);
        retrofit.RequestBuilder requestBuilder34 = requestBuilder7.apiUrl("");
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder7.headers;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "hi!", headerList35, typedOutput36);
        java.lang.String str38 = request37.url;
        java.lang.String str39 = request37.getMethod();
        java.lang.String str40 = request37.method;
        java.lang.String str41 = request37.method;
        java.util.List<retrofit.client.Header> headerList42 = request37.headers;
        requestBuilder1.headers = headerList42;
        retrofit.client.Header[] headerArray46 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList47 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList47, headerArray46);
        retrofit.mime.TypedOutput typedOutput49 = null;
        retrofit.client.Request request50 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList47, typedOutput49);
        java.util.List<retrofit.client.Header> headerList51 = request50.getHeaders();
        java.lang.String str52 = request50.url;
        java.lang.String str53 = request50.url;
        java.lang.String str54 = request50.method;
        retrofit.mime.TypedOutput typedOutput55 = request50.getBody();
        java.util.List<retrofit.client.Header> headerList56 = request50.getHeaders();
        retrofit.RequestBuilder requestBuilder57 = requestBuilder1.headers(headerList56);
        java.util.List<retrofit.client.Header> headerList60 = null;
        retrofit.mime.TypedOutput typedOutput61 = null;
        retrofit.client.Request request62 = new retrofit.client.Request("", "", headerList60, typedOutput61);
        retrofit.mime.TypedOutput typedOutput63 = request62.getBody();
        java.lang.String str64 = request62.getMethod();
        java.lang.String str65 = request62.getMethod();
        java.util.List<retrofit.client.Header> headerList66 = request62.getHeaders();
        retrofit.RequestBuilder requestBuilder67 = requestBuilder1.headers(headerList66);
        retrofit.RequestBuilder requestBuilder69 = requestBuilder1.apiUrl("hi!");
        java.lang.Object[] objArray70 = null;
        requestBuilder1.args = objArray70;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(headerArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(converter21);
        org.junit.Assert.assertNull(headerList22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertNotNull(requestBuilder34);
        org.junit.Assert.assertNotNull(headerList35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(headerList42);
        org.junit.Assert.assertNotNull(headerArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNull(typedOutput55);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(requestBuilder57);
        org.junit.Assert.assertNull(typedOutput63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(headerList66);
        org.junit.Assert.assertNotNull(requestBuilder67);
        org.junit.Assert.assertNotNull(requestBuilder69);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.converter.Converter converter14 = requestBuilder13.getconverter();
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder13.headers;
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.client.Header[] headerArray23 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList24 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList24, headerArray23);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList24, typedOutput26);
        requestBuilder20.setheaders((java.util.List<retrofit.client.Header>) headerList24);
        java.util.List<retrofit.client.Header> headerList31 = null;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.getUrl();
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.lang.Object[] objArray36 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder20, typedOutput35 };
        requestBuilder13.setargs(objArray36);
        java.util.List<retrofit.client.Header> headerList40 = null;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList40, typedOutput41);
        retrofit.mime.TypedOutput typedOutput43 = request42.getBody();
        retrofit.mime.TypedOutput typedOutput44 = request42.getBody();
        java.lang.String str45 = request42.getUrl();
        java.util.List<retrofit.client.Header> headerList46 = request42.headers;
        retrofit.RequestBuilder requestBuilder47 = requestBuilder13.headers(headerList46);
        retrofit.RequestBuilder requestBuilder48 = requestBuilder1.headers(headerList46);
        java.lang.String str49 = requestBuilder1.apiUrl;
        // The following exception was thrown during execution in test generation
        try {
            retrofit.mime.TypedOutput typedOutput50 = requestBuilder1.buildBody();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(headerList15);
        org.junit.Assert.assertNotNull(headerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNull(typedOutput44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(requestBuilder48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        java.util.List<retrofit.client.Header> headerList6 = null;
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("", "", headerList6, typedOutput7);
        retrofit.mime.TypedOutput typedOutput9 = request8.getBody();
        retrofit.mime.TypedOutput typedOutput10 = request8.getBody();
        java.util.List<retrofit.client.Header> headerList11 = request8.headers;
        requestBuilder3.setheaders(headerList11);
        retrofit.mime.TypedOutput typedOutput13 = null;
        retrofit.client.Request request14 = new retrofit.client.Request("hi!", "hi!", headerList11, typedOutput13);
        java.lang.String str15 = request14.url;
        retrofit.mime.TypedOutput typedOutput16 = request14.getBody();
        retrofit.mime.TypedOutput typedOutput17 = request14.body;
        java.lang.String str18 = request14.method;
        retrofit.mime.TypedOutput typedOutput19 = request14.body;
        java.lang.String str20 = request14.getUrl();
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(typedOutput16);
        org.junit.Assert.assertNull(typedOutput17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(typedOutput19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        java.lang.String str7 = request4.getUrl();
        java.lang.String str8 = request4.getMethod();
        retrofit.mime.TypedOutput typedOutput9 = request4.body;
        retrofit.mime.TypedOutput typedOutput10 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput11 = request4.getBody();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(typedOutput9);
        org.junit.Assert.assertNull(typedOutput10);
        org.junit.Assert.assertNull(typedOutput11);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.util.List<retrofit.client.Header> headerList34 = request33.headers;
        retrofit.mime.TypedOutput typedOutput35 = request33.getBody();
        java.lang.String str36 = request33.getUrl();
        retrofit.mime.TypedOutput typedOutput37 = request33.getBody();
        java.lang.String str38 = request33.getMethod();
        java.lang.String str39 = request33.method;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertNotNull(headerList34);
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(typedOutput37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        retrofit.converter.Converter converter85 = requestBuilder84.converter;
        requestBuilder84.setapiUrl("hi!");
        java.lang.String str88 = requestBuilder84.apiUrl;
        retrofit.converter.Converter converter89 = requestBuilder84.getconverter();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNull(converter85);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertNull(converter89);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        retrofit.converter.Converter converter32 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList39 = request37.headers;
        requestBuilder1.setheaders(headerList39);
        java.lang.Object[] objArray41 = requestBuilder1.getargs();
        java.lang.String str42 = requestBuilder1.getapiUrl();
        java.lang.String str43 = requestBuilder1.getapiUrl();
        java.lang.Class<?> wildcardClass44 = requestBuilder1.getClass();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNotNull(headerList39);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.converter.Converter converter4 = requestBuilder3.getconverter();
        java.util.List<retrofit.client.Header> headerList5 = requestBuilder3.headers;
        retrofit.converter.Converter converter9 = null;
        retrofit.RequestBuilder requestBuilder10 = new retrofit.RequestBuilder(converter9);
        retrofit.client.Header[] headerArray13 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList14 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList14, headerArray13);
        retrofit.mime.TypedOutput typedOutput16 = null;
        retrofit.client.Request request17 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList14, typedOutput16);
        requestBuilder10.setheaders((java.util.List<retrofit.client.Header>) headerList14);
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        retrofit.mime.TypedOutput typedOutput25 = request23.body;
        java.lang.Object[] objArray26 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder10, typedOutput25 };
        requestBuilder3.setargs(objArray26);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.client.Header[] headerArray34 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList35 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList35, headerArray34);
        retrofit.mime.TypedOutput typedOutput37 = null;
        retrofit.client.Request request38 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList35, typedOutput37);
        requestBuilder31.setheaders((java.util.List<retrofit.client.Header>) headerList35);
        retrofit.converter.Converter converter43 = null;
        retrofit.RequestBuilder requestBuilder44 = new retrofit.RequestBuilder(converter43);
        retrofit.converter.Converter converter45 = requestBuilder44.getconverter();
        java.util.List<retrofit.client.Header> headerList46 = requestBuilder44.headers;
        requestBuilder44.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList51 = null;
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "", headerList51, typedOutput52);
        java.lang.String str54 = request53.getUrl();
        java.lang.Object[] objArray55 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder44, request53 };
        requestBuilder31.setargs(objArray55);
        retrofit.RequestBuilder requestBuilder58 = requestBuilder31.apiUrl("");
        java.util.List<retrofit.client.Header> headerList59 = requestBuilder31.headers;
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("", "", headerList59, typedOutput60);
        retrofit.RequestBuilder requestBuilder62 = requestBuilder3.headers(headerList59);
        retrofit.mime.TypedOutput typedOutput63 = null;
        retrofit.client.Request request64 = new retrofit.client.Request("", "hi!", headerList59, typedOutput63);
        retrofit.mime.TypedOutput typedOutput65 = request64.getBody();
        org.junit.Assert.assertNull(converter4);
        org.junit.Assert.assertNull(headerList5);
        org.junit.Assert.assertNotNull(headerArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(typedOutput25);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertNotNull(headerArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNull(headerList46);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertNotNull(headerList59);
        org.junit.Assert.assertNotNull(requestBuilder62);
        org.junit.Assert.assertNull(typedOutput65);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = requestBuilder1.converter;
        retrofit.RequestBuilder requestBuilder8 = requestBuilder1.apiUrl("hi!");
        requestBuilder8.setapiUrl("hi!");
        java.lang.Object[] objArray11 = requestBuilder8.getargs();
        retrofit.RequestBuilder requestBuilder13 = requestBuilder8.apiUrl("");
        requestBuilder13.setapiUrl("");
        requestBuilder13.apiUrl = "hi!";
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(converter6);
        org.junit.Assert.assertNotNull(requestBuilder8);
        org.junit.Assert.assertNull(objArray11);
        org.junit.Assert.assertNotNull(requestBuilder13);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        retrofit.converter.Converter converter15 = null;
        retrofit.RequestBuilder requestBuilder16 = new retrofit.RequestBuilder(converter15);
        retrofit.converter.Converter converter17 = requestBuilder16.getconverter();
        java.util.List<retrofit.client.Header> headerList18 = requestBuilder16.headers;
        requestBuilder16.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList23 = null;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList23, typedOutput24);
        java.lang.String str26 = request25.getUrl();
        java.lang.Object[] objArray27 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder16, request25 };
        requestBuilder3.setargs(objArray27);
        retrofit.RequestBuilder requestBuilder30 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList31 = requestBuilder3.headers;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "hi!", headerList31, typedOutput32);
        java.lang.String str34 = request33.url;
        java.lang.String str35 = request33.getMethod();
        java.util.List<retrofit.client.Header> headerList36 = request33.getHeaders();
        java.lang.String str37 = request33.url;
        retrofit.mime.TypedOutput typedOutput38 = request33.body;
        retrofit.mime.TypedOutput typedOutput39 = request33.body;
        java.lang.String str40 = request33.getUrl();
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(converter17);
        org.junit.Assert.assertNull(headerList18);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNotNull(headerList31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(headerList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        java.lang.String str5 = request4.getUrl();
        retrofit.mime.TypedOutput typedOutput6 = request4.body;
        retrofit.mime.TypedOutput typedOutput7 = request4.body;
        java.lang.String str8 = request4.url;
        java.util.List<retrofit.client.Header> headerList9 = request4.headers;
        java.util.List<retrofit.client.Header> headerList10 = request4.headers;
        java.util.List<retrofit.client.Header> headerList11 = request4.getHeaders();
        java.lang.String str12 = request4.url;
        java.lang.String str13 = request4.getUrl();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNotNull(headerList10);
        org.junit.Assert.assertNotNull(headerList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        requestBuilder31.setapiUrl("");
        retrofit.converter.Converter converter34 = requestBuilder31.getconverter();
        java.lang.String str35 = requestBuilder31.getapiUrl();
        java.lang.Class<?> wildcardClass36 = requestBuilder31.getClass();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        retrofit.converter.Converter converter2 = null;
        retrofit.RequestBuilder requestBuilder3 = new retrofit.RequestBuilder(converter2);
        retrofit.client.Header[] headerArray6 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList7 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList7, headerArray6);
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList7, typedOutput9);
        requestBuilder3.setheaders((java.util.List<retrofit.client.Header>) headerList7);
        java.lang.String str12 = requestBuilder3.getapiUrl();
        retrofit.RequestBuilder requestBuilder14 = requestBuilder3.apiUrl("");
        java.util.List<retrofit.client.Header> headerList17 = null;
        retrofit.mime.TypedOutput typedOutput18 = null;
        retrofit.client.Request request19 = new retrofit.client.Request("", "", headerList17, typedOutput18);
        java.lang.String str20 = request19.url;
        java.util.List<retrofit.client.Header> headerList21 = request19.getHeaders();
        java.util.List<retrofit.client.Header> headerList22 = request19.getHeaders();
        requestBuilder3.headers = headerList22;
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("", "", headerList22, typedOutput24);
        java.lang.String str26 = request25.getMethod();
        retrofit.mime.TypedOutput typedOutput27 = request25.getBody();
        java.lang.String str28 = request25.url;
        java.util.List<retrofit.client.Header> headerList29 = request25.getHeaders();
        retrofit.mime.TypedOutput typedOutput30 = request25.body;
        org.junit.Assert.assertNotNull(headerArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(requestBuilder14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(headerList21);
        org.junit.Assert.assertNotNull(headerList22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(typedOutput27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertNull(typedOutput30);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.converter.Converter converter14 = requestBuilder13.getconverter();
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder13.headers;
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.client.Header[] headerArray23 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList24 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList24, headerArray23);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList24, typedOutput26);
        requestBuilder20.setheaders((java.util.List<retrofit.client.Header>) headerList24);
        java.util.List<retrofit.client.Header> headerList31 = null;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.getUrl();
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.lang.Object[] objArray36 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder20, typedOutput35 };
        requestBuilder13.setargs(objArray36);
        java.util.List<retrofit.client.Header> headerList40 = null;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList40, typedOutput41);
        retrofit.mime.TypedOutput typedOutput43 = request42.getBody();
        retrofit.mime.TypedOutput typedOutput44 = request42.getBody();
        java.lang.String str45 = request42.getUrl();
        java.util.List<retrofit.client.Header> headerList46 = request42.headers;
        retrofit.RequestBuilder requestBuilder47 = requestBuilder13.headers(headerList46);
        retrofit.RequestBuilder requestBuilder48 = requestBuilder1.headers(headerList46);
        java.lang.Object[] objArray49 = requestBuilder48.getargs();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(headerList15);
        org.junit.Assert.assertNotNull(headerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNull(typedOutput44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(requestBuilder48);
        org.junit.Assert.assertNull(objArray49);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.getUrl();
        java.util.List<retrofit.client.Header> headerList10 = request4.getHeaders();
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(headerList10);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        java.util.List<retrofit.client.Header> headerList2 = null;
        retrofit.mime.TypedOutput typedOutput3 = null;
        retrofit.client.Request request4 = new retrofit.client.Request("", "", headerList2, typedOutput3);
        retrofit.mime.TypedOutput typedOutput5 = request4.getBody();
        retrofit.mime.TypedOutput typedOutput6 = request4.getBody();
        java.util.List<retrofit.client.Header> headerList7 = request4.headers;
        java.util.List<retrofit.client.Header> headerList8 = request4.getHeaders();
        java.lang.String str9 = request4.method;
        java.lang.String str10 = request4.url;
        java.lang.String str11 = request4.method;
        java.util.List<retrofit.client.Header> headerList12 = request4.getHeaders();
        java.lang.String str13 = request4.method;
        java.lang.String str14 = request4.method;
        org.junit.Assert.assertNull(typedOutput5);
        org.junit.Assert.assertNull(typedOutput6);
        org.junit.Assert.assertNotNull(headerList7);
        org.junit.Assert.assertNotNull(headerList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(headerList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        requestBuilder31.setapiUrl("");
        retrofit.converter.Converter converter34 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder31.headers;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(headerList35);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        retrofit.converter.Converter converter3 = null;
        retrofit.RequestBuilder requestBuilder4 = new retrofit.RequestBuilder(converter3);
        retrofit.client.Header[] headerArray7 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList8 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList8, headerArray7);
        retrofit.mime.TypedOutput typedOutput10 = null;
        retrofit.client.Request request11 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList8, typedOutput10);
        requestBuilder4.setheaders((java.util.List<retrofit.client.Header>) headerList8);
        retrofit.converter.Converter converter16 = null;
        retrofit.RequestBuilder requestBuilder17 = new retrofit.RequestBuilder(converter16);
        retrofit.converter.Converter converter18 = requestBuilder17.getconverter();
        java.util.List<retrofit.client.Header> headerList19 = requestBuilder17.headers;
        requestBuilder17.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList24 = null;
        retrofit.mime.TypedOutput typedOutput25 = null;
        retrofit.client.Request request26 = new retrofit.client.Request("", "", headerList24, typedOutput25);
        java.lang.String str27 = request26.getUrl();
        java.lang.Object[] objArray28 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder17, request26 };
        requestBuilder4.setargs(objArray28);
        java.lang.Object[] objArray30 = requestBuilder4.getargs();
        retrofit.RequestBuilder requestBuilder31 = requestBuilder1.args(objArray30);
        requestBuilder31.setapiUrl("");
        retrofit.converter.Converter converter34 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList35 = requestBuilder31.getheaders();
        java.lang.String str36 = requestBuilder31.apiUrl;
        java.lang.Object[] objArray37 = requestBuilder31.args;
        requestBuilder31.setapiUrl("hi!");
        // The following exception was thrown during execution in test generation
        try {
            retrofit.client.Request request40 = requestBuilder31.build();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNotNull(headerArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(converter18);
        org.junit.Assert.assertNull(headerList19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertNotNull(requestBuilder31);
        org.junit.Assert.assertNull(converter34);
        org.junit.Assert.assertNull(headerList35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        java.util.List<retrofit.client.Header> headerList4 = null;
        retrofit.mime.TypedOutput typedOutput5 = null;
        retrofit.client.Request request6 = new retrofit.client.Request("", "", headerList4, typedOutput5);
        retrofit.mime.TypedOutput typedOutput7 = request6.getBody();
        retrofit.mime.TypedOutput typedOutput8 = request6.getBody();
        java.util.List<retrofit.client.Header> headerList9 = request6.headers;
        requestBuilder1.setheaders(headerList9);
        retrofit.converter.Converter converter11 = requestBuilder1.getconverter();
        java.lang.Object[] objArray12 = requestBuilder1.getargs();
        java.lang.Class<?> wildcardClass13 = requestBuilder1.getClass();
        org.junit.Assert.assertNull(typedOutput7);
        org.junit.Assert.assertNull(typedOutput8);
        org.junit.Assert.assertNotNull(headerList9);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNull(objArray12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        retrofit.RequestBuilder requestBuilder11 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.converter.Converter converter14 = requestBuilder13.getconverter();
        java.util.List<retrofit.client.Header> headerList15 = requestBuilder13.headers;
        retrofit.converter.Converter converter19 = null;
        retrofit.RequestBuilder requestBuilder20 = new retrofit.RequestBuilder(converter19);
        retrofit.client.Header[] headerArray23 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList24 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList24, headerArray23);
        retrofit.mime.TypedOutput typedOutput26 = null;
        retrofit.client.Request request27 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList24, typedOutput26);
        requestBuilder20.setheaders((java.util.List<retrofit.client.Header>) headerList24);
        java.util.List<retrofit.client.Header> headerList31 = null;
        retrofit.mime.TypedOutput typedOutput32 = null;
        retrofit.client.Request request33 = new retrofit.client.Request("", "", headerList31, typedOutput32);
        java.lang.String str34 = request33.getUrl();
        retrofit.mime.TypedOutput typedOutput35 = request33.body;
        java.lang.Object[] objArray36 = new java.lang.Object[] { (-1), (-1.0f), true, requestBuilder20, typedOutput35 };
        requestBuilder13.setargs(objArray36);
        java.util.List<retrofit.client.Header> headerList40 = null;
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("", "", headerList40, typedOutput41);
        retrofit.mime.TypedOutput typedOutput43 = request42.getBody();
        retrofit.mime.TypedOutput typedOutput44 = request42.getBody();
        java.lang.String str45 = request42.getUrl();
        java.util.List<retrofit.client.Header> headerList46 = request42.headers;
        retrofit.RequestBuilder requestBuilder47 = requestBuilder13.headers(headerList46);
        retrofit.RequestBuilder requestBuilder48 = requestBuilder1.headers(headerList46);
        java.util.List<retrofit.client.Header> headerList51 = null;
        retrofit.mime.TypedOutput typedOutput52 = null;
        retrofit.client.Request request53 = new retrofit.client.Request("", "", headerList51, typedOutput52);
        java.lang.String str54 = request53.url;
        java.lang.String str55 = request53.url;
        java.util.List<retrofit.client.Header> headerList56 = request53.getHeaders();
        requestBuilder48.setheaders(headerList56);
        retrofit.converter.Converter converter58 = requestBuilder48.converter;
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(requestBuilder11);
        org.junit.Assert.assertNull(converter14);
        org.junit.Assert.assertNull(headerList15);
        org.junit.Assert.assertNotNull(headerArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(typedOutput35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertNull(typedOutput43);
        org.junit.Assert.assertNull(typedOutput44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(headerList46);
        org.junit.Assert.assertNotNull(requestBuilder47);
        org.junit.Assert.assertNotNull(requestBuilder48);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNull(converter58);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        retrofit.RequestBuilder requestBuilder28 = requestBuilder1.apiUrl("");
        java.util.List<retrofit.client.Header> headerList29 = requestBuilder1.getheaders();
        java.util.List<retrofit.client.Header> headerList30 = requestBuilder1.headers;
        retrofit.RequestBuilder requestBuilder32 = requestBuilder1.apiUrl("");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = requestBuilder32.buildRelativeUrl();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder28);
        org.junit.Assert.assertNotNull(headerList29);
        org.junit.Assert.assertNotNull(headerList30);
        org.junit.Assert.assertNotNull(requestBuilder32);
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        retrofit.converter.Converter converter6 = null;
        retrofit.RequestBuilder requestBuilder7 = new retrofit.RequestBuilder(converter6);
        java.lang.String str8 = requestBuilder7.apiUrl;
        retrofit.converter.Converter converter9 = null;
        retrofit.RequestBuilder requestBuilder10 = new retrofit.RequestBuilder(converter9);
        retrofit.converter.Converter converter11 = requestBuilder10.getconverter();
        retrofit.converter.Converter converter12 = null;
        retrofit.RequestBuilder requestBuilder13 = new retrofit.RequestBuilder(converter12);
        retrofit.client.Header[] headerArray16 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList17 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList17, headerArray16);
        retrofit.mime.TypedOutput typedOutput19 = null;
        retrofit.client.Request request20 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList17, typedOutput19);
        requestBuilder13.setheaders((java.util.List<retrofit.client.Header>) headerList17);
        retrofit.converter.Converter converter25 = null;
        retrofit.RequestBuilder requestBuilder26 = new retrofit.RequestBuilder(converter25);
        retrofit.converter.Converter converter27 = requestBuilder26.getconverter();
        java.util.List<retrofit.client.Header> headerList28 = requestBuilder26.headers;
        requestBuilder26.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList33 = null;
        retrofit.mime.TypedOutput typedOutput34 = null;
        retrofit.client.Request request35 = new retrofit.client.Request("", "", headerList33, typedOutput34);
        java.lang.String str36 = request35.getUrl();
        java.lang.Object[] objArray37 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder26, request35 };
        requestBuilder13.setargs(objArray37);
        java.lang.Object[] objArray39 = requestBuilder13.getargs();
        retrofit.RequestBuilder requestBuilder40 = requestBuilder10.args(objArray39);
        requestBuilder7.setargs(objArray39);
        requestBuilder1.setargs(objArray39);
        java.util.List<retrofit.client.Header> headerList43 = requestBuilder1.getheaders();
        requestBuilder1.setapiUrl("hi!");
        requestBuilder1.apiUrl = "hi!";
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(converter11);
        org.junit.Assert.assertNotNull(headerArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(converter27);
        org.junit.Assert.assertNull(headerList28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertNotNull(requestBuilder40);
        org.junit.Assert.assertNull(headerList43);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        retrofit.converter.Converter converter43 = requestBuilder1.converter;
        retrofit.converter.Converter converter44 = requestBuilder1.converter;
        retrofit.converter.Converter converter45 = requestBuilder1.getconverter();
        requestBuilder1.apiUrl = "hi!";
        retrofit.converter.Converter converter48 = null;
        retrofit.RequestBuilder requestBuilder49 = new retrofit.RequestBuilder(converter48);
        retrofit.client.Header[] headerArray52 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList53 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList53, headerArray52);
        retrofit.mime.TypedOutput typedOutput55 = null;
        retrofit.client.Request request56 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList53, typedOutput55);
        requestBuilder49.setheaders((java.util.List<retrofit.client.Header>) headerList53);
        retrofit.converter.Converter converter61 = null;
        retrofit.RequestBuilder requestBuilder62 = new retrofit.RequestBuilder(converter61);
        retrofit.converter.Converter converter63 = requestBuilder62.getconverter();
        java.util.List<retrofit.client.Header> headerList64 = requestBuilder62.headers;
        requestBuilder62.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList69 = null;
        retrofit.mime.TypedOutput typedOutput70 = null;
        retrofit.client.Request request71 = new retrofit.client.Request("", "", headerList69, typedOutput70);
        java.lang.String str72 = request71.getUrl();
        java.lang.Object[] objArray73 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder62, request71 };
        requestBuilder49.setargs(objArray73);
        retrofit.RequestBuilder requestBuilder76 = requestBuilder49.apiUrl("");
        java.util.List<retrofit.client.Header> headerList77 = requestBuilder49.headers;
        java.lang.String str78 = requestBuilder49.getapiUrl();
        java.lang.Object[] objArray79 = requestBuilder49.getargs();
        requestBuilder1.args = objArray79;
        java.lang.Object[] objArray81 = requestBuilder1.args;
        java.lang.Class<?> wildcardClass82 = objArray81.getClass();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNull(converter43);
        org.junit.Assert.assertNull(converter44);
        org.junit.Assert.assertNull(converter45);
        org.junit.Assert.assertNotNull(headerArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(converter63);
        org.junit.Assert.assertNull(headerList64);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertNotNull(requestBuilder76);
        org.junit.Assert.assertNotNull(headerList77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertNotNull(objArray81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.converter.Converter converter2 = requestBuilder1.getconverter();
        java.util.List<retrofit.client.Header> headerList3 = requestBuilder1.headers;
        requestBuilder1.setapiUrl("hi!");
        java.lang.String str6 = requestBuilder1.apiUrl;
        java.util.List<retrofit.client.Header> headerList7 = requestBuilder1.headers;
        java.lang.String str8 = requestBuilder1.getapiUrl();
        java.lang.String str9 = requestBuilder1.apiUrl;
        java.lang.String str10 = requestBuilder1.apiUrl;
        retrofit.converter.Converter converter11 = null;
        retrofit.RequestBuilder requestBuilder12 = new retrofit.RequestBuilder(converter11);
        java.lang.String str13 = requestBuilder12.apiUrl;
        retrofit.converter.Converter converter14 = null;
        retrofit.RequestBuilder requestBuilder15 = new retrofit.RequestBuilder(converter14);
        retrofit.converter.Converter converter16 = requestBuilder15.getconverter();
        retrofit.converter.Converter converter17 = null;
        retrofit.RequestBuilder requestBuilder18 = new retrofit.RequestBuilder(converter17);
        retrofit.client.Header[] headerArray21 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList22 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList22, headerArray21);
        retrofit.mime.TypedOutput typedOutput24 = null;
        retrofit.client.Request request25 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList22, typedOutput24);
        requestBuilder18.setheaders((java.util.List<retrofit.client.Header>) headerList22);
        retrofit.converter.Converter converter30 = null;
        retrofit.RequestBuilder requestBuilder31 = new retrofit.RequestBuilder(converter30);
        retrofit.converter.Converter converter32 = requestBuilder31.getconverter();
        java.util.List<retrofit.client.Header> headerList33 = requestBuilder31.headers;
        requestBuilder31.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList38 = null;
        retrofit.mime.TypedOutput typedOutput39 = null;
        retrofit.client.Request request40 = new retrofit.client.Request("", "", headerList38, typedOutput39);
        java.lang.String str41 = request40.getUrl();
        java.lang.Object[] objArray42 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder31, request40 };
        requestBuilder18.setargs(objArray42);
        java.lang.Object[] objArray44 = requestBuilder18.getargs();
        retrofit.RequestBuilder requestBuilder45 = requestBuilder15.args(objArray44);
        requestBuilder12.setargs(objArray44);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        java.lang.String str49 = requestBuilder48.apiUrl;
        retrofit.converter.Converter converter50 = null;
        retrofit.RequestBuilder requestBuilder51 = new retrofit.RequestBuilder(converter50);
        retrofit.converter.Converter converter52 = requestBuilder51.getconverter();
        retrofit.converter.Converter converter53 = null;
        retrofit.RequestBuilder requestBuilder54 = new retrofit.RequestBuilder(converter53);
        retrofit.client.Header[] headerArray57 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList58 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList58, headerArray57);
        retrofit.mime.TypedOutput typedOutput60 = null;
        retrofit.client.Request request61 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList58, typedOutput60);
        requestBuilder54.setheaders((java.util.List<retrofit.client.Header>) headerList58);
        retrofit.converter.Converter converter66 = null;
        retrofit.RequestBuilder requestBuilder67 = new retrofit.RequestBuilder(converter66);
        retrofit.converter.Converter converter68 = requestBuilder67.getconverter();
        java.util.List<retrofit.client.Header> headerList69 = requestBuilder67.headers;
        requestBuilder67.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList74 = null;
        retrofit.mime.TypedOutput typedOutput75 = null;
        retrofit.client.Request request76 = new retrofit.client.Request("", "", headerList74, typedOutput75);
        java.lang.String str77 = request76.getUrl();
        java.lang.Object[] objArray78 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder67, request76 };
        requestBuilder54.setargs(objArray78);
        java.lang.Object[] objArray80 = requestBuilder54.getargs();
        retrofit.RequestBuilder requestBuilder81 = requestBuilder51.args(objArray80);
        requestBuilder48.setargs(objArray80);
        retrofit.RequestBuilder requestBuilder83 = requestBuilder12.args(objArray80);
        retrofit.RequestBuilder requestBuilder84 = requestBuilder1.args(objArray80);
        java.lang.Object[] objArray85 = requestBuilder84.getargs();
        java.lang.String str86 = requestBuilder84.getapiUrl();
        org.junit.Assert.assertNull(converter2);
        org.junit.Assert.assertNull(headerList3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNull(headerList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(converter16);
        org.junit.Assert.assertNotNull(headerArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(converter32);
        org.junit.Assert.assertNull(headerList33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNotNull(requestBuilder45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(converter52);
        org.junit.Assert.assertNotNull(headerArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(converter68);
        org.junit.Assert.assertNull(headerList69);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertNotNull(requestBuilder81);
        org.junit.Assert.assertNotNull(requestBuilder83);
        org.junit.Assert.assertNotNull(requestBuilder84);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.client.Header[] headerArray4 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList5 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList5, headerArray4);
        retrofit.mime.TypedOutput typedOutput7 = null;
        retrofit.client.Request request8 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList5, typedOutput7);
        requestBuilder1.setheaders((java.util.List<retrofit.client.Header>) headerList5);
        retrofit.converter.Converter converter13 = null;
        retrofit.RequestBuilder requestBuilder14 = new retrofit.RequestBuilder(converter13);
        retrofit.converter.Converter converter15 = requestBuilder14.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = requestBuilder14.headers;
        requestBuilder14.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList21 = null;
        retrofit.mime.TypedOutput typedOutput22 = null;
        retrofit.client.Request request23 = new retrofit.client.Request("", "", headerList21, typedOutput22);
        java.lang.String str24 = request23.getUrl();
        java.lang.Object[] objArray25 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder14, request23 };
        requestBuilder1.setargs(objArray25);
        requestBuilder1.apiUrl = "";
        retrofit.RequestBuilder requestBuilder30 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter31 = null;
        retrofit.RequestBuilder requestBuilder32 = new retrofit.RequestBuilder(converter31);
        java.util.List<retrofit.client.Header> headerList35 = null;
        retrofit.mime.TypedOutput typedOutput36 = null;
        retrofit.client.Request request37 = new retrofit.client.Request("", "", headerList35, typedOutput36);
        retrofit.mime.TypedOutput typedOutput38 = request37.getBody();
        retrofit.mime.TypedOutput typedOutput39 = request37.getBody();
        java.util.List<retrofit.client.Header> headerList40 = request37.headers;
        requestBuilder32.setheaders(headerList40);
        retrofit.RequestBuilder requestBuilder42 = requestBuilder1.headers(headerList40);
        java.lang.Object[] objArray43 = requestBuilder1.getargs();
        java.lang.Object[] objArray44 = requestBuilder1.getargs();
        java.util.List<retrofit.client.Header> headerList47 = null;
        retrofit.mime.TypedOutput typedOutput48 = null;
        retrofit.client.Request request49 = new retrofit.client.Request("", "", headerList47, typedOutput48);
        retrofit.mime.TypedOutput typedOutput50 = request49.getBody();
        java.util.List<retrofit.client.Header> headerList51 = request49.headers;
        java.util.List<retrofit.client.Header> headerList52 = request49.headers;
        requestBuilder1.headers = headerList52;
        requestBuilder1.apiUrl = "";
        java.util.List<retrofit.client.Header> headerList56 = requestBuilder1.getheaders();
        retrofit.RequestBuilder requestBuilder58 = requestBuilder1.apiUrl("");
        java.lang.Object[] objArray59 = requestBuilder58.getargs();
        java.lang.String str60 = requestBuilder58.getapiUrl();
        org.junit.Assert.assertNotNull(headerArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(headerList16);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertNotNull(requestBuilder30);
        org.junit.Assert.assertNull(typedOutput38);
        org.junit.Assert.assertNull(typedOutput39);
        org.junit.Assert.assertNotNull(headerList40);
        org.junit.Assert.assertNotNull(requestBuilder42);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertNull(typedOutput50);
        org.junit.Assert.assertNotNull(headerList51);
        org.junit.Assert.assertNotNull(headerList52);
        org.junit.Assert.assertNotNull(headerList56);
        org.junit.Assert.assertNotNull(requestBuilder58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        retrofit.converter.Converter converter0 = null;
        retrofit.RequestBuilder requestBuilder1 = new retrofit.RequestBuilder(converter0);
        retrofit.RequestBuilder requestBuilder3 = requestBuilder1.apiUrl("hi!");
        retrofit.converter.Converter converter4 = null;
        retrofit.RequestBuilder requestBuilder5 = new retrofit.RequestBuilder(converter4);
        java.util.List<retrofit.client.Header> headerList8 = null;
        retrofit.mime.TypedOutput typedOutput9 = null;
        retrofit.client.Request request10 = new retrofit.client.Request("", "", headerList8, typedOutput9);
        retrofit.mime.TypedOutput typedOutput11 = request10.getBody();
        retrofit.mime.TypedOutput typedOutput12 = request10.getBody();
        java.util.List<retrofit.client.Header> headerList13 = request10.headers;
        requestBuilder5.setheaders(headerList13);
        retrofit.converter.Converter converter15 = requestBuilder5.getconverter();
        java.util.List<retrofit.client.Header> headerList16 = null;
        requestBuilder5.setheaders(headerList16);
        requestBuilder5.apiUrl = "hi!";
        requestBuilder5.apiUrl = "";
        retrofit.converter.Converter converter22 = requestBuilder5.converter;
        retrofit.converter.Converter converter23 = null;
        retrofit.RequestBuilder requestBuilder24 = new retrofit.RequestBuilder(converter23);
        java.util.List<retrofit.client.Header> headerList27 = null;
        retrofit.mime.TypedOutput typedOutput28 = null;
        retrofit.client.Request request29 = new retrofit.client.Request("", "", headerList27, typedOutput28);
        retrofit.mime.TypedOutput typedOutput30 = request29.getBody();
        retrofit.mime.TypedOutput typedOutput31 = request29.getBody();
        java.util.List<retrofit.client.Header> headerList32 = request29.headers;
        requestBuilder24.setheaders(headerList32);
        retrofit.converter.Converter converter34 = null;
        retrofit.RequestBuilder requestBuilder35 = new retrofit.RequestBuilder(converter34);
        retrofit.client.Header[] headerArray38 = new retrofit.client.Header[] {};
        java.util.ArrayList<retrofit.client.Header> headerList39 = new java.util.ArrayList<retrofit.client.Header>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<retrofit.client.Header>) headerList39, headerArray38);
        retrofit.mime.TypedOutput typedOutput41 = null;
        retrofit.client.Request request42 = new retrofit.client.Request("hi!", "hi!", (java.util.List<retrofit.client.Header>) headerList39, typedOutput41);
        requestBuilder35.setheaders((java.util.List<retrofit.client.Header>) headerList39);
        retrofit.converter.Converter converter47 = null;
        retrofit.RequestBuilder requestBuilder48 = new retrofit.RequestBuilder(converter47);
        retrofit.converter.Converter converter49 = requestBuilder48.getconverter();
        java.util.List<retrofit.client.Header> headerList50 = requestBuilder48.headers;
        requestBuilder48.setapiUrl("hi!");
        java.util.List<retrofit.client.Header> headerList55 = null;
        retrofit.mime.TypedOutput typedOutput56 = null;
        retrofit.client.Request request57 = new retrofit.client.Request("", "", headerList55, typedOutput56);
        java.lang.String str58 = request57.getUrl();
        java.lang.Object[] objArray59 = new java.lang.Object[] { 0, 1, (-1.0f), requestBuilder48, request57 };
        requestBuilder35.setargs(objArray59);
        requestBuilder24.args = objArray59;
        requestBuilder5.setargs(objArray59);
        retrofit.RequestBuilder requestBuilder63 = requestBuilder3.args(objArray59);
        java.lang.Object[] objArray64 = requestBuilder3.getargs();
        org.junit.Assert.assertNotNull(requestBuilder3);
        org.junit.Assert.assertNull(typedOutput11);
        org.junit.Assert.assertNull(typedOutput12);
        org.junit.Assert.assertNotNull(headerList13);
        org.junit.Assert.assertNull(converter15);
        org.junit.Assert.assertNull(converter22);
        org.junit.Assert.assertNull(typedOutput30);
        org.junit.Assert.assertNull(typedOutput31);
        org.junit.Assert.assertNotNull(headerList32);
        org.junit.Assert.assertNotNull(headerArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(converter49);
        org.junit.Assert.assertNull(headerList50);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertNotNull(requestBuilder63);
        org.junit.Assert.assertNotNull(objArray64);
    }
}

